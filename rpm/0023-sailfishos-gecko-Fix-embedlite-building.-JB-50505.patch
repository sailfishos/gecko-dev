From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Raine Makelainen <raine.makelainen@jolla.com>
Date: Wed, 19 Aug 2020 09:36:29 +0300
Subject: [PATCH] [sailfishos][gecko] Fix embedlite building. JB#50505

Use MOZ_EMBEDLITE for embedlite integration

All random integration points should be part of this patch.

[sailfishos][embedlite] Bring back tookit/xre changes

Sha1:  367d2afdda4426652aa403d256fd4c17273dffe0
Subject: Implemented XPCOM initialization in Process backend
---
 dom/gamepad/moz.build            |  1 +
 netwerk/protocol/gio/moz.build   |  7 ++++++
 toolkit/xre/moz.build            |  1 +
 toolkit/xre/nsEmbedFunctions.cpp | 37 ++++++++++++++++++++++++++++----
 4 files changed, 42 insertions(+), 4 deletions(-)

diff --git a/dom/gamepad/moz.build b/dom/gamepad/moz.build
index 5f55d5a95e96..6028eae2736b 100644
--- a/dom/gamepad/moz.build
+++ b/dom/gamepad/moz.build
@@ -79,3 +79,4 @@ CFLAGS += CONFIG["GLIB_CFLAGS"]
 CFLAGS += CONFIG["MOZ_DBUS_GLIB_CFLAGS"]
 CXXFLAGS += CONFIG["GLIB_CFLAGS"]
 CXXFLAGS += CONFIG["MOZ_DBUS_GLIB_CFLAGS"]
+OS_LIBS += CONFIG['GLIB_LIBS']
diff --git a/netwerk/protocol/gio/moz.build b/netwerk/protocol/gio/moz.build
index 7e28502558dd..d2aaf9aa1632 100644
--- a/netwerk/protocol/gio/moz.build
+++ b/netwerk/protocol/gio/moz.build
@@ -37,5 +37,12 @@ FINAL_LIBRARY = "xul"
 
 CXXFLAGS += CONFIG["TK_CFLAGS"]
 
+CFLAGS += CONFIG['GLIB_CFLAGS']
+CXXFLAGS += CONFIG['GLIB_CFLAGS']
+OS_LIBS += CONFIG['GLIB_LIBS']
+OS_LIBS += [
+    '-lgio-2.0',
+]
+
 with Files("**"):
     BUG_COMPONENT = ("Core", "Widget: Gtk")
diff --git a/toolkit/xre/moz.build b/toolkit/xre/moz.build
index 8bc8a0c5bc74..ff56bc33cc9e 100644
--- a/toolkit/xre/moz.build
+++ b/toolkit/xre/moz.build
@@ -252,6 +252,7 @@ LOCAL_INCLUDES += [
     "/dom/commandhandler",
     "/dom/ipc",
     "/dom/webbrowserpersist",
+    '/mobile/sailfishos/embedprocess',
     "/testing/gtest/mozilla",
     "/toolkit/crashreporter",
     "/xpcom/build",
diff --git a/toolkit/xre/nsEmbedFunctions.cpp b/toolkit/xre/nsEmbedFunctions.cpp
index 32691e9967c8..5acf696c89bd 100644
--- a/toolkit/xre/nsEmbedFunctions.cpp
+++ b/toolkit/xre/nsEmbedFunctions.cpp
@@ -72,6 +72,7 @@
 
 #include "mozilla/dom/ContentProcess.h"
 #include "mozilla/dom/ContentParent.h"
+#include "EmbedLiteContentProcess.h"
 
 #include "mozilla/ipc/TestShellParent.h"
 #if defined(XP_WIN)
@@ -251,6 +252,7 @@ const char* XRE_ChildProcessTypeToAnnotation(GeckoProcessType aProcessType) {
 
 namespace mozilla::startup {
 GeckoProcessType sChildProcessType = GeckoProcessType_Default;
+bool sIsEmbedlite = false;
 }  // namespace mozilla::startup
 
 #if defined(MOZ_WIDGET_ANDROID)
@@ -667,10 +669,37 @@ nsresult XRE_InitChildProcess(int aArgc, char* aArgv[],
           MOZ_CRASH("This makes no sense");
           break;
 
-        case GeckoProcessType_Content:
-          ioInterposerGuard.emplace();
-          process = MakeUnique<ContentProcess>(parentPID);
-          break;
+        case GeckoProcessType_Content: {
+          // If passed in grab the application path for xpcom init
+          bool foundAppdir = false;
+          nsCString appDir;
+
+          for (int idx = aArgc; idx > 0; idx--) {
+            if (aArgv[idx] && !strcmp(aArgv[idx], "-embedlite")) {
+              startup::sIsEmbedlite = true;
+              continue;
+            }
+
+            if (aArgv[idx] && !strcmp(aArgv[idx], "-appdir")) {
+              MOZ_ASSERT(!foundAppdir);
+              if (foundAppdir) {
+                continue;
+              }
+              appDir.Assign(nsDependentCString(aArgv[idx+1]));
+              foundAppdir = true;
+            }
+          }
+
+          if (startup::sIsEmbedlite) {
+            // Embedlite process does not have shared content parent process with Gecko stuff, so these child should behave as normal Gecko default process
+            sChildProcessType = GeckoProcessType_Default;
+            process = MakeUnique<mozilla::embedlite::EmbedLiteContentProcess>(parentPID);
+            static_cast<mozilla::embedlite::EmbedLiteContentProcess*>(process.get())->SetAppDir(appDir);
+          } else {
+            process = MakeUnique<ContentProcess>(parentPID);
+          }
+        }
+        break;
 
         case GeckoProcessType_IPDLUnitTest:
 #ifdef MOZ_IPDL_TESTS
