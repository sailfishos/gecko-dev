From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Pavel Tumakaev <p.tumakaev@omprussia.ru>
Date: Thu, 24 Jun 2021 18:53:18 +0300
Subject: [PATCH] [sailfishos][gecko] Revert "Bug 1611386 - Drop support for
 --enable-system-sqlite. r=asuth,glandium"

This reverts commit b5b6473a6d6d59e1361e529db9b8b6e1f7448f29.
---
 browser/installer/package-manifest.in  |  2 ++
 build/moz.configure/old.configure      |  1 +
 config/external/sqlite/moz.build       | 22 +++++++++-------
 old-configure.in                       | 35 ++++++++++++++++++++++----
 storage/SQLiteMutex.h                  |  6 ++---
 storage/moz.build                      |  6 +++++
 storage/mozStorageConnection.cpp       |  4 +++
 storage/mozStorageService.cpp          | 27 ++++++++++++++++++++
 third_party/sqlite3/src/moz.build      |  2 ++
 third_party/sqlite3/src/sqlite.symbols |  1 +
 10 files changed, 89 insertions(+), 17 deletions(-)

diff --git a/browser/installer/package-manifest.in b/browser/installer/package-manifest.in
index 40de7394e6ee..22584325bccd 100644
--- a/browser/installer/package-manifest.in
+++ b/browser/installer/package-manifest.in
@@ -142,9 +142,11 @@
 @RESPATH@/update-settings.ini
 #endif
 @RESPATH@/platform.ini
+#ifndef MOZ_SYSTEM_SQLITE
 #ifndef MOZ_FOLD_LIBS
 @BINPATH@/@DLL_PREFIX@mozsqlite3@DLL_SUFFIX@
 #endif
+#endif
 @BINPATH@/@DLL_PREFIX@lgpllibs@DLL_SUFFIX@
 #ifdef MOZ_FFVPX
 @BINPATH@/@DLL_PREFIX@mozavutil@DLL_SUFFIX@
diff --git a/build/moz.configure/old.configure b/build/moz.configure/old.configure
index dd2b486ea19d..b1b0d91b8abc 100644
--- a/build/moz.configure/old.configure
+++ b/build/moz.configure/old.configure
@@ -103,6 +103,7 @@ def old_configure_options(*options):
     "--enable-system-cairo",
     "--enable-system-extension-dirs",
     "--enable-system-pixman",
+    "--enable-system-sqlite",
     "--enable-universalchardet",
     "--enable-updater",
     "--enable-xul",
diff --git a/config/external/sqlite/moz.build b/config/external/sqlite/moz.build
index 6294924c564a..b978fd9caba3 100644
--- a/config/external/sqlite/moz.build
+++ b/config/external/sqlite/moz.build
@@ -4,15 +4,19 @@
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
-DIRS += ["../../../third_party/sqlite3/src"]
-if CONFIG["MOZ_FOLD_LIBS"]:
+if CONFIG["MOZ_SYSTEM_SQLITE"]:
     Library("sqlite")
-    # When folding libraries, sqlite is actually in the nss library.
-    USE_LIBS += [
-        "nss",
-    ]
+    OS_LIBS += CONFIG["SQLITE_LIBS"]
 else:
-    SharedLibrary("sqlite")
-    SHARED_LIBRARY_NAME = "mozsqlite3"
+    DIRS += ["../../../third_party/sqlite3/src"]
+    if CONFIG["MOZ_FOLD_LIBS"]:
+        Library("sqlite")
+        # When folding libraries, sqlite is actually in the nss library.
+        USE_LIBS += [
+            "nss",
+        ]
+    else:
+        SharedLibrary("sqlite")
+        SHARED_LIBRARY_NAME = "mozsqlite3"
 
-    SYMBOLS_FILE = "/third_party/sqlite3/src/sqlite.symbols"
+        SYMBOLS_FILE = "/third_party/sqlite3/src/sqlite.symbols"
diff --git a/old-configure.in b/old-configure.in
index 34a8187e48a7..fd5559155bfd 100644
--- a/old-configure.in
+++ b/old-configure.in
@@ -57,6 +57,7 @@ GTK3_VERSION=3.14.0
 GDK_VERSION_MAX_ALLOWED=GDK_VERSION_3_14
 W32API_VERSION=3.14
 DBUS_VERSION=0.60
+SQLITE_VERSION=3.31.1
 
 dnl Set various checks
 dnl ========================================================
@@ -2127,11 +2128,35 @@ dnl =
 dnl ========================================================
 MOZ_ARG_HEADER(Individual module options)
 
-dnl ==============================
-dnl === SQLite fdatasync check ===
-dnl ==============================
-dnl Check to see if fdatasync is available and make use of it
-AC_CHECK_FUNC(fdatasync)
+dnl ========================================================
+dnl Check for sqlite
+dnl ========================================================
+
+MOZ_SYSTEM_SQLITE=
+MOZ_ARG_ENABLE_BOOL(system-sqlite,
+[  --enable-system-sqlite  Use system sqlite (located with pkgconfig)],
+MOZ_SYSTEM_SQLITE=1,
+MOZ_SYSTEM_SQLITE= )
+
+if test -n "$MOZ_SYSTEM_SQLITE"
+then
+    dnl ============================
+    dnl === SQLite Version check ===
+    dnl ============================
+    dnl Check to see if the system SQLite package is new enough.
+    PKG_CHECK_MODULES(SQLITE, sqlite3 >= $SQLITE_VERSION)
+else
+    dnl ==============================
+    dnl === SQLite fdatasync check ===
+    dnl ==============================
+    dnl Check to see if fdatasync is available
+    AC_CHECK_FUNC(fdatasync)
+fi
+
+if test -n "$MOZ_SYSTEM_SQLITE"; then
+    AC_DEFINE(MOZ_SYSTEM_SQLITE)
+fi
+AC_SUBST(MOZ_SYSTEM_SQLITE)
 
 dnl ========================================================
 dnl = Disable zipwriter
diff --git a/storage/SQLiteMutex.h b/storage/SQLiteMutex.h
index b7198b1912fd..3ecc0bb997cf 100644
--- a/storage/SQLiteMutex.h
+++ b/storage/SQLiteMutex.h
@@ -56,7 +56,7 @@ class SQLiteMutex : private BlockingResourceBase {
    */
   void lock() {
     MOZ_ASSERT(mMutex, "No mutex associated with this wrapper!");
-#if defined(DEBUG)
+#if defined(DEBUG) && !defined(MOZ_SYSTEM_SQLITE)
     // While SQLite Mutexes may be recursive, in our own code we do not want to
     // treat them as such.
     CheckAcquire();
@@ -64,7 +64,7 @@ class SQLiteMutex : private BlockingResourceBase {
 
     ::sqlite3_mutex_enter(mMutex);
 
-#if defined(DEBUG)
+#if defined(DEBUG) && !defined(MOZ_SYSTEM_SQLITE)
     Acquire();  // Call is protected by us holding the mutex.
 #endif
   }
@@ -74,7 +74,7 @@ class SQLiteMutex : private BlockingResourceBase {
    */
   void unlock() {
     MOZ_ASSERT(mMutex, "No mutex associated with this wrapper!");
-#if defined(DEBUG)
+#if defined(DEBUG) && !defined(MOZ_SYSTEM_SQLITE)
     // While SQLite Mutexes may be recursive, in our own code we do not want to
     // treat them as such.
     Release();  // Call is protected by us holding the mutex.
diff --git a/storage/moz.build b/storage/moz.build
index f7b4441a2e1b..0a777c9956a8 100644
--- a/storage/moz.build
+++ b/storage/moz.build
@@ -99,6 +99,12 @@ if CONFIG["MOZ_THUNDERBIRD"] or CONFIG["MOZ_SUITE"]:
 # will need to change it here as well.
 DEFINES["SQLITE_MAX_LIKE_PATTERN_LENGTH"] = 50000
 
+# See Sqlite moz.build for reasoning about TEMP_STORE.
+# For system sqlite we cannot use the compile time option, so we use a pragma.
+if CONFIG['MOZ_SYSTEM_SQLITE'] and (CONFIG['OS_TARGET'] == 'Android'
+                                    or CONFIG['HAVE_64BIT_BUILD']):
+    DEFINES['MOZ_MEMORY_TEMP_STORE_PRAGMA'] = True
+
 LOCAL_INCLUDES += [
     "/dom/base",
     "/third_party/sqlite3/src",
diff --git a/storage/mozStorageConnection.cpp b/storage/mozStorageConnection.cpp
index f7b81d92f0a8..5526d6f289ac 100644
--- a/storage/mozStorageConnection.cpp
+++ b/storage/mozStorageConnection.cpp
@@ -877,6 +877,10 @@ nsresult Connection::initializeInternal() {
     return convertResultCode(srv);
   }
 
+#if defined(MOZ_MEMORY_TEMP_STORE_PRAGMA)
+  (void)ExecuteSimpleSQL(NS_LITERAL_CSTRING("PRAGMA temp_store = 2;"));
+#endif
+
   // Register our built-in SQL functions.
   srv = registerFunctions(mDBConn);
   if (srv != SQLITE_OK) {
diff --git a/storage/mozStorageService.cpp b/storage/mozStorageService.cpp
index 57a87dec0dce..82a29050d3c2 100644
--- a/storage/mozStorageService.cpp
+++ b/storage/mozStorageService.cpp
@@ -32,6 +32,8 @@
 #  undef CompareString
 #endif
 
+#include "nsIPromptService.h"
+
 namespace mozilla {
 namespace storage {
 
@@ -164,6 +166,31 @@ already_AddRefed<Service> Service::getSingleton() {
     return do_AddRef(gService);
   }
 
+  // Ensure that we are using the same version of SQLite that we compiled with
+  // or newer.  Our configure check ensures we are using a new enough version
+  // at compile time.
+  if (SQLITE_VERSION_NUMBER > ::sqlite3_libversion_number() ||
+      !::sqlite3_compileoption_used("SQLITE_SECURE_DELETE") ||
+      !::sqlite3_compileoption_used("SQLITE_THREADSAFE=1") ||
+      !::sqlite3_compileoption_used("SQLITE_ENABLE_FTS3") ||
+      !::sqlite3_compileoption_used("SQLITE_ENABLE_UNLOCK_NOTIFY") ||
+      !::sqlite3_compileoption_used("SQLITE_ENABLE_DBSTAT_VTAB")) {
+    nsCOMPtr<nsIPromptService> ps(do_GetService(NS_PROMPTSERVICE_CONTRACTID));
+    if (ps) {
+      nsAutoString title, message;
+      title.AppendLiteral("SQLite Version Error");
+      message.AppendLiteral(
+          "The application has been updated, but the SQLite "
+          "library wasn't updated properly and the application "
+          "cannot run. Please try to launch the application again. "
+          "If that should still fail, please try reinstalling "
+          "it, or contact the support of where you got the "
+          "application from.");
+      (void)ps->Alert(nullptr, title.get(), message.get());
+    }
+    MOZ_CRASH("SQLite Version Error");
+  }
+
   // The first reference to the storage service must be obtained on the
   // main thread.
   NS_ENSURE_TRUE(NS_IsMainThread(), nullptr);
diff --git a/third_party/sqlite3/src/moz.build b/third_party/sqlite3/src/moz.build
index 0742b3770099..6c03d1900608 100644
--- a/third_party/sqlite3/src/moz.build
+++ b/third_party/sqlite3/src/moz.build
@@ -79,6 +79,7 @@ DEFINES['SQLITE_OMIT_BUILTIN_TEST'] = True
 # Try to use a MEMORY temp store when possible. That allows for better
 # performance and doesn't suffer from a full separate tmp partition.
 # Exclude 32bit platforms due to address space fragmentation issues.
+# System Sqlite is managed through a PRAGMA instead.
 if CONFIG['OS_TARGET'] == 'Android':
     # On Android there's no tmp partition, so always use a MEMORY temp store.
     DEFINES['SQLITE_TEMP_STORE'] = 3
@@ -88,6 +89,7 @@ elif CONFIG['HAVE_64BIT_BUILD']:
 
 # Change the default temp files prefix, to easily distinguish files we created
 # vs files created by other Sqlite instances in the system.
+# This has obviously no effect in case of System Sqlite.
 DEFINES['SQLITE_TEMP_FILE_PREFIX'] = '"mz_etilqs_"'
 
 # Enabling sqlite math functions
diff --git a/third_party/sqlite3/src/sqlite.symbols b/third_party/sqlite3/src/sqlite.symbols
index f6fb549395e3..945736ef750f 100644
--- a/third_party/sqlite3/src/sqlite.symbols
+++ b/third_party/sqlite3/src/sqlite.symbols
@@ -38,6 +38,7 @@ sqlite3_column_text16
 sqlite3_column_type
 sqlite3_column_value
 sqlite3_commit_hook
+sqlite3_compileoption_used
 sqlite3_complete
 sqlite3_complete16
 sqlite3_config
