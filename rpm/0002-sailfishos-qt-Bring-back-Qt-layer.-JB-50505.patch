From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Raine Makelainen <raine.makelainen@jolla.com>
Date: Fri, 28 Feb 2020 11:38:58 +0200
Subject: [PATCH] [sailfishos][qt] Bring back Qt layer. JB#50505

Revert "Bug 1282866 - remove widget/qt and other supporting QT code, r=dougt.  This patch does not remove
all of the checks for MOZ_WIDGET_QT (which are dead code), but that will be a followup mentored bug."

This reverts commit bf05496a833cfc1b4fb168b94e75fc93086111f2.

Revert "Bug 1285554 - Remove remnants of widget/qt. r=dougt,mshal."

This reverts commit a913f991077467a246072b3a8ecb45838a1363ba.

Revert "Bug 1286317 - part 2 - remove Qt widget usage from plugins. r=jrmuizel"

This reverts commit 0e1e833b40484fe21b93d4f1b53b9420637e2ed3.

This does not revert back pango configuration as it seems to be already removed.

Revert "Bug 1286317 - part 1 - remove Qt widget usage from gfx. r=jrmuizel"

This reverts commit 16ca3223d9d6f1bd8c4dba5ce1d9fbb986895b41.

[sailfishos][gecko] Add define to the iconconverter for preprocessor
[sailfishos][qt] Fix platform font list configuration. JB#50967

Signed-off-by: Raine Makelainen <raine.makelainen@jolla.com>

[sailfishos][qt] Enable print-to-PDF support. Contributes to JB#50680

Fix build of nsPrintSettingsQt and nsDeviceContextSpecQt with printing enabled

- Fixed build errors
- QPrinter and QPrinterInfo are removed since QtPrintSupport module
requires QtWidgets;
- GetPrinterNameList now returns an empty list, since getting the list of
available printers is implemented through QPrinterInfo.

[sailfishos][qt] Add nsIPrintSettingsService for Qt toolkit. Fixes JB#51349

[sailfishos][qt] Move NullPrincipal under mozilla namespace

See upstream commit: a053cf1c15a3a17f1d5a2119991c82f1253b078a

[sailfishos][qt] Replace NullPrincipal::Create usage with NullPrincipal::CreateWithoutOriginAttributes

See upstream commit: 449237fc51ae99909509042ca1c85b63aed98848

[sailfishos][qt] Add missing #include for do_CreateInstance

[sailfishos][qt] Use gfxPlatform::GetBackendPrefs to pass prefs in InitBackendPrefs

See upstream commit: 0cc1972d140a1d41f3e45a981fa74d25bf7f8c40

[sailfishos][qt] Allow Cairo as content/canvas backend for MOZ_WIDGET_QT

See upstream commit: 0acba278661e891d32a9c094c091b3f179296f22

[sailfishos][qt] Adapt gfxQtPlatform to base class gfxPlatform

Add implementation for gfxPlatform::CheckVariationFontSupport.
See upstream commit: c66fb1e66057b6be975397e3da92f553fcf7919a

gfxPlatform::GetStandardFamilyName can no longer be overridden.
See upstream commit: 6f42f167fb18a4e46e822739fa7b335cf85e8938

gfxPlatform::CreateFontGroup is now implemented in gfxPlatform.cpp.
See upstream commit: c8c463d812d0c34825744b9d360431f770640be9

gfxPlatform::LookupLocalFont and MakePlatformFont can no longer be
overridden.
See upstream commit: c57f185cd982842cadec603058c2c2048eb08c43

gfxPlatform::GetPlatformCMSOutputProfile was renamed to
gfxPlatform::GetPlatformCMSOutputProfileData.
See upstream commit: 726cba0bb5a18210119ae9321070b688ef8d61e1

[sailfishos][qt] Replace nsGeolocation usage with Geolocation and nsGeoPosition with GeolocationPosition

See upstream commit: bd713fe4ee6fd780c549498bec2a72c579431402

[sailfishos][qt] Adapt GfxInfo to nsIGfxInfo and GfxInfoBase

nsIGfxInfo::hasBattery attribute has been added.
See upstream commit: cbd1d387e2d56b965098cacceb6e7a5ee3d06a2b

nsIGfxInfo::windowProtocol attribute has been added.
See upstream commit: fd0fefd13a5dd5e18705602edf2a149dad334db9

nsIGfxInfo::desktopEnvironment attribute has been added.
See upstream commit: 215f13488a39bf8bd53143cb4f60b660faa3cff2

nsIGfxInfo::adapterRAM and nsIGfxInfo::adapterRAM2 now return unsigned long.
See upstream commit: 38b7d1873faa412a7e0b11a31e5baf2a9849b7f1

nsIGfxInfo::adapterDriverVendor and nsIGfxInfo::adapterDriverVendor2
attributes have been added.
See upstream commit: 17c3cc5d39a648680ed9c28b6a8a2d90824762ac

nsIGfxInfo::displayInfo attribute has been added.
See upstream commit: 3bd0cbdc09480b4ad2aa5735fa05338c824bc90a

Now 's' prefix is used for GfxInfo static variables.
See upstream commit: 8c24450c7e611ab6ce01f5028d167427bb127e57

[sailfishos][qt] Adapt nsWindow to nsIWidget

Signature of the nsIWidget::SetFocus has been changed.
See upstream commits:
    21d5c25734837f340b6906b7bd92d45a688bacb2
    70e1dba79ee6b292b948b6aa49bf606ae48a18d6

Signature of the nsIWidget::SetCursor has been changed.
See upstream commit: ef7d8198eb0561adc7f300cc71dc92a3135224da

WidgetMouseEvent has been renamed to MouseButton. eLeftButton,
eMiddleButton, eRightButton have been renamed to eLeft, eMiddle, eRight.
See upstream commit: b44e48bff4011d1e9523f7e3178b576709f6f66f

WidgetMouseEventBase::buttons has been renamed to
WidgetMouseEventBase::mButtons.
See upstream commit: 614949385a435542713da9674e205641918d249b

New WidgetCommandEvent public constructor should be used.
See upstream commit: 6da4b51b7bfe02280c921fa5eafc3706d3c60f82

Add implementation for nsIWidget::CreateTopLevelWindow and
nsIWidget::CreateChildWindow.
See upstream commit: a07f6c3866d9f6325f8cb67ef1f4a27b9a4c6a4f

[sailfishos][qt] Replace non-asserting NS_PRECONDITIONs with MOZ_ASSERTs

See upstream commit: 71422dcaa9e79f41c5a7be0b30d93ac5844d7fed

[sailfishos][qt] Adapt nsLookAndFeel to LookAndFeel and nsXPLookAndFeel

Signature of the nsXPLookAndFeel::GetFontImpl has been changed.
See upstream commit: 323b5be77a649dfc2a2171e0bdfb95f69af50ad6

System colors has been moved to values::specified::color.
See upstream commit: 810916db161c0783361ffb88b894cc7c4e3e9ad0

[sailfishos][qt] Replace nsIDOMWheelEvent usage with WheelEventBinding

See upstream commit: 1a7c5067caf90ea7affe81a88b47ed6564f64c45

[sailfishos][qt] Remove nsIWebBrowserPrint usage from nsPrintDialogQt

See upstream commit: 2f4b27a303e3bf1ae9e4dd68f2bc709308c5ac65

[sailfishos][qt] Move `#include <qclipboard.h>` from nsClipboard.h to nsClipboard.cpp

This fixes the build error: "'qclipboard.h' file not found".

[sailfishos][qt] Replace nsCOMPtr<nsIArray> with nsTArray<nsCString> in SetNativeClipboardData

See upstream commit: 028ba5d31e12e9bdbb50d5a1320d464d6f9df1e4

[sailfishos][qt] Replace nsCOMPtr<nsIArray> with nsTArray<nsCString> in GetNativeClipboardData

See upstream commit: 028ba5d31e12e9bdbb50d5a1320d464d6f9df1e4

[sailfishos][qt] Switch aFlavorList parameter of the nsClipboard::HasDataMatchingFlavors to type nsTArray<nsCString>

nsIClipboard::hasDataMatchingFlavors now accepts Array<ACString>.
See upstream commit: 5eb248348f323ba809927cb7e53b6d6db2fed316

[sailfishos][qt] Adapt nsClipboard to nsTransferable

aDataLen parameter has been removed from nsITransferable::getTransferData.
See upstream commit: 5a9d2a428c8e433594f6baaeda0643c77d916e27

aDataLen parameter has been removed from nsITransferable::setTransferData.
See upstream commit: 6296f48a85a73bd3320636bd08ec044d58c5d2e4

[sailfishos][qt] Fix nsPrimitiveHelpers::CreateDataFromPrimitive call in nsClipboard

CreateDataFromPrimitive aDataLen has been changed to out parameter.
See upstream commit: 3a8e0049b7b3286e2a97841a4e0ba0cc3d6f326e

[sailfishos][qt] Use Span in constructing a byte input stream in nsClipboard

See upstream commit: 0e903787dab6c6cb3a73bcc76a05e1fd827b1f2b

[sailfishos][qt] Convert nsWidgetQtModule to static registration

See upstream commits:
    950b0fc87bee0cd453f63f4fa0b894bd8d37ec84
    07aab2b391ee01e7a678ee51d8d66d3bc8b5a7c2

XPCOM component registration for the native theme renderer has been removed.
See upstream commit: 8d7c2999dc0d0b481326a7f23aa6a3ee05d14011

XPCOM component registration for the bidi keyboard has been removed.
See upstream commit: 7c7f4d95f60c044834e995bc4190ed054cfb709e

XPCOM component registrations for window and child window has been removed.
See upstream commit: a07f6c3866d9f6325f8cb67ef1f4a27b9a4c6a4f

[sailfishos][qt] Sort the #include statements in nsQAppInstance.cpp

[sailfishos][qt] Add nsIWidget::CreateBidiKeyboardInner implementation to nsBidiKeyboard

See upstream commit: 7c7f4d95f60c044834e995bc4190ed054cfb709e

[sailfishos][qt] Drop nsQtNetworkLinkService in favor of linux common nsNetworkLinkService

See: `/netwerk/system/linux/nsNetworkLinkService.h`.

[sailfishos][qt] Include LinuxProcessLauncher::DoSetup implementation for MOZ_WIDGET_QT

[sailfishos][qt] Introduce ProcInfo

ProcInfo.cpp was copied from gtk.
See upstream commit: 2420a8ebb9ae00ae88cb328b9bb58b1bf9d634ea

[sailfishos][qt] Introduce MediaKeysEventSourceFactory

See upstream commit: a7c687ab305f41b3129191dc96682873d984c2ee

[sailfishos][qt] Remove nsWindow.h/cpp, mozqwidget.h/cpp. Contributes to JB#54190

[sailfishos][qt] Ensure PGIOChannel is correctly exposed

Adds preprocessor conditions to ensure PGIOChannel is included
correctly.

[sailfishos][qt] Register GfxInfo service with components.conf

As a consequence of Bugzilla bug 1686616, GfxInfo must be named
explicitly. See:

https://bugzilla.mozilla.org/show_bug.cgi?id=1686616

and the associated patch (which applies for Gtk; here we apply the same
for Qt):

https://phabricator.services.mozilla.com/D105521

[sailfishos][qt] Ensure QWidget header can be found

[sailfishos][qt] Use QRegion::united()

The QRegion::united() call was switched to QRegion::unite() in Bugzilla
bug 739096, but united() isn't part of the API. This switches it back to
use united() again.

References:

https://bugzilla.mozilla.org/show_bug.cgi?id=739096

https://phabricator.services.mozilla.com/D112558

[sailfishos][qt] Fix font method signatures

Various method signatures in the font code have changed due to Bugzilla
bug 1676966:

https://bugzilla.mozilla.org/show_bug.cgi?id=1676966

These changes update the code for the Qt code to allow compilation to
continue.

[sailfishos][qt] Build mSize into fontlist::Face::InitData

Ensures the mSize variable is included in the fontlist::Face::InitData
structure, since this is needed by the addPattern lambda function in
gfxFcPlatformFontList.cpp.

[sailfishos][gecko] Rename nsIdleService to nsUserIdleService

Renames nsIdleService and friends to nsUserIdleService equivalents. This
is to align with upstream changes from Bugzilla bug 1651165. See revision:

https://phabricator.services.mozilla.com/D83413

[sailfishos][gecko] Ensure PGIOChannel methods are included in Necko

The PGIOChannel methods are now conditioned on MOZ_WIDGET_GTK. This
change ensures that the condition includes MOZ_WIDGET_QT so that they
are included in Necko for EmbedLite builds.

[sailfishos][gecko] Remove nsPrinterEnumeratorQt

The nsIPrinterEnumerator interface appears to have been removed. This
removes it from the Qt EmbedLite code as well.

[sailfishos][gecko] Rename MediaControlKeysEventSource to MediaControlKeySource

Reflects the upstream change in Bugzilla bug 1640998:

https://bugzilla.mozilla.org/show_bug.cgi?id=1640998

https://phabricator.services.mozilla.com/D78140

[sailfishos][gecko] Update nsLookAndFeel

Updates nsLookAndFeel to reflect upstream changes, most notably the
switch from enums to class enums.

[sailfishos][gecko] Update Qt implementaiton of nsPrintSettings

The nsPrintSettings interface has changed upstream, so these changes
updated the Qt implementation to match.

[sailfishos][gecko] Add missing methos to GfxInfo

There were a few unimplemented methods which made the class abstract.
This change adds dummy implementations for them to allow the class to be
instantiated.

[sailfishos][gecko] Add missing GfxInfo methods

Adds method implementations for the GfxInfo class which were missing.

[sailfishos][gecko] Add Qt nsNativeBasicThemeQt class

Adds a Qt version of the nsNativeBasicThemeQt class, which is now needed
due to upstream changes.

This reflects similar changes applied upstream for other toolkits (e.g.
Gtk, Android).

Co-authored-by: David Llewellyn-Jones <david@flypig.co.uk>
---
 browser/base/content/browser-menubar.inc      |   2 +-
 browser/themes/moz.build                      |   2 +-
 build/moz.configure/old.configure             |   1 +
 config/milestone.txt                          |  12 -
 dom/geolocation/Geolocation.cpp               |   8 +
 dom/geolocation/moz.build                     |   6 +
 dom/ipc/ContentChild.cpp                      |   9 +
 dom/ipc/moz.build                             |   2 +-
 dom/system/moz.build                          |   4 +-
 dom/system/qt/QTMLocationProvider.cpp         | 103 ++++
 dom/system/qt/QTMLocationProvider.h           |  35 ++
 dom/system/qt/QtHapticFeedback.cpp            |  20 +
 dom/system/qt/QtHapticFeedback.h              |  15 +
 dom/system/qt/moz.build                       |  26 +
 gfx/2d/2D.h                                   |   4 +-
 gfx/2d/Factory.cpp                            |   4 +-
 gfx/2d/UnscaledFontFreeType.h                 |   2 +-
 gfx/2d/moz.build                              |   8 +-
 gfx/cairo/cairo/src/cairo-qt-surface.cpp      |   4 +-
 gfx/cairo/cairo/src/moz.build                 |  12 +
 gfx/gl/moz.build                              |   2 +
 gfx/skia/generate_mozbuild.py                 |   6 +-
 gfx/skia/moz.build                            |   6 +-
 gfx/src/moz.build                             |   3 +
 gfx/thebes/SharedFontList.cpp                 |  14 +-
 gfx/thebes/SharedFontList.h                   |   6 +-
 gfx/thebes/gfxASurface.cpp                    |   2 +
 gfx/thebes/gfxFT2Fonts.cpp                    |   4 +
 gfx/thebes/gfxFcPlatformFontList.cpp          |  10 +
 gfx/thebes/gfxFont.h                          |   2 +-
 gfx/thebes/gfxPlatform.cpp                    |   8 +-
 gfx/thebes/gfxQtNativeRenderer.cpp            |  48 ++
 gfx/thebes/gfxQtNativeRenderer.h              |  68 +++
 gfx/thebes/gfxQtPlatform.cpp                  | 147 +++++
 gfx/thebes/gfxQtPlatform.h                    |  61 ++
 gfx/thebes/moz.build                          |  30 +-
 gfx/webrender_bindings/Moz2DImageRenderer.cpp |   4 +-
 gfx/webrender_bindings/moz.build              |   2 +-
 image/decoders/icon/moz.build                 |   3 +
 image/decoders/icon/qt/gtkqticonsconverter.js | 145 +++++
 .../icon/qt/gtkqticonsconverter.manifest      |   2 +
 image/decoders/icon/qt/moz.build              |  27 +
 .../icon/qt/nsGtkQtIconsConverter.idl         |  12 +
 image/decoders/icon/qt/nsIconChannel.cpp      | 137 +++++
 image/decoders/icon/qt/nsIconChannel.h        |  40 ++
 image/decoders/moz.build                      |   2 +
 intl/locale/moz.build                         |   5 +
 ipc/chromium/moz.build                        |   5 +
 ipc/glue/GeckoChildProcessHost.cpp            |   4 +-
 layout/base/nsPresContext.cpp                 |   7 +-
 layout/generic/moz.build                      |   4 +
 netwerk/base/moz.build                        |   9 +
 netwerk/ipc/NeckoChild.cpp                    |   4 +-
 netwerk/ipc/NeckoChild.h                      |   2 +-
 netwerk/ipc/NeckoParent.cpp                   |   4 +-
 netwerk/ipc/NeckoParent.h                     |   2 +-
 netwerk/ipc/PNecko.ipdl                       |   6 +-
 netwerk/protocol/moz.build                    |   2 +-
 old-configure.in                              | 182 +++++-
 python/mozbuild/mozbuild/mach_commands.py     |  18 +-
 toolkit/library/moz.build                     |  14 +-
 toolkit/modules/AppConstants.jsm              |   2 +
 toolkit/moz.build                             |   2 +-
 toolkit/moz.configure                         |   8 +-
 toolkit/themes/moz.build                      |   2 +-
 toolkit/xre/moz.build                         |   7 +
 toolkit/xre/nsAppRunner.cpp                   |  40 ++
 toolkit/xre/nsEmbedFunctions.cpp              |   8 +
 toolkit/xre/nsNativeAppSupportQt.cpp          | 118 ++++
 toolkit/xre/nsNativeAppSupportQt.h            |  37 ++
 toolkit/xre/nsQAppInstance.cpp                |  31 +
 toolkit/xre/nsQAppInstance.h                  |  28 +
 uriloader/exthandler/moz.build                |  10 +-
 uriloader/exthandler/unix/nsMIMEInfoQt.cpp    |  30 +
 uriloader/exthandler/unix/nsMIMEInfoQt.h      |  20 +
 uriloader/exthandler/unix/nsMIMEInfoUnix.cpp  |  20 +-
 widget/NativeKeyToDOMCodeName.h               |   2 +-
 widget/NativeKeyToDOMKeyName.h                | 205 +++++++
 widget/headless/HeadlessWidget.h              |   7 +
 widget/moz.build                              |   6 +-
 widget/qt/GfxInfo.cpp                         | 268 +++++++++
 widget/qt/GfxInfo.h                           |  79 +++
 widget/qt/MediaKeysEventSourceFactory.cpp     |  13 +
 widget/qt/ProcInfo.cpp                        | 285 +++++++++
 widget/qt/components.conf                     |  98 ++++
 widget/qt/moz.build                           |  71 +++
 widget/qt/nsAppShell.cpp                      |  80 +++
 widget/qt/nsBidiKeyboard.cpp                  |  54 ++
 widget/qt/nsBidiKeyboard.h                    |  25 +
 widget/qt/nsDeviceContextSpecQt.cpp           | 190 ++++++
 widget/qt/nsDeviceContextSpecQt.h             |  48 ++
 widget/qt/nsLookAndFeel.cpp                   | 550 ++++++++++++++++++
 widget/qt/nsLookAndFeel.h                     |  44 ++
 widget/qt/nsNativeBasicThemeQt.cpp            |  17 +
 widget/qt/nsNativeBasicThemeQt.h              |  20 +
 widget/qt/nsPrintDialogQt.cpp                 |  42 ++
 widget/qt/nsPrintDialogQt.h                   |  31 +
 widget/qt/nsPrintOptionsQt.cpp                |  23 +
 widget/qt/nsPrintOptionsQt.h                  |  20 +
 widget/qt/nsPrintSettingsQt.cpp               | 414 +++++++++++++
 widget/qt/nsPrintSettingsQt.h                 | 101 ++++
 widget/qt/nsScreenManagerQt.cpp               | 101 ++++
 widget/qt/nsScreenManagerQt.h                 |  34 ++
 widget/qt/nsScreenQt.cpp                      |  74 +++
 widget/qt/nsScreenQt.h                        |  29 +
 widget/qt/nsUserIdleServiceQt.cpp             | 123 ++++
 widget/qt/nsUserIdleServiceQt.h               |  56 ++
 widget/qt/nsWidgetFactory.cpp                 |  36 ++
 widget/qt/nsWidgetFactory.h                   |  22 +
 109 files changed, 4780 insertions(+), 89 deletions(-)
 create mode 100644 dom/system/qt/QTMLocationProvider.cpp
 create mode 100644 dom/system/qt/QTMLocationProvider.h
 create mode 100644 dom/system/qt/QtHapticFeedback.cpp
 create mode 100644 dom/system/qt/QtHapticFeedback.h
 create mode 100644 dom/system/qt/moz.build
 create mode 100644 gfx/thebes/gfxQtNativeRenderer.cpp
 create mode 100644 gfx/thebes/gfxQtNativeRenderer.h
 create mode 100644 gfx/thebes/gfxQtPlatform.cpp
 create mode 100644 gfx/thebes/gfxQtPlatform.h
 create mode 100644 image/decoders/icon/qt/gtkqticonsconverter.js
 create mode 100644 image/decoders/icon/qt/gtkqticonsconverter.manifest
 create mode 100644 image/decoders/icon/qt/moz.build
 create mode 100644 image/decoders/icon/qt/nsGtkQtIconsConverter.idl
 create mode 100644 image/decoders/icon/qt/nsIconChannel.cpp
 create mode 100644 image/decoders/icon/qt/nsIconChannel.h
 create mode 100644 toolkit/xre/nsNativeAppSupportQt.cpp
 create mode 100644 toolkit/xre/nsNativeAppSupportQt.h
 create mode 100644 toolkit/xre/nsQAppInstance.cpp
 create mode 100644 toolkit/xre/nsQAppInstance.h
 create mode 100644 uriloader/exthandler/unix/nsMIMEInfoQt.cpp
 create mode 100644 uriloader/exthandler/unix/nsMIMEInfoQt.h
 create mode 100644 widget/qt/GfxInfo.cpp
 create mode 100644 widget/qt/GfxInfo.h
 create mode 100644 widget/qt/MediaKeysEventSourceFactory.cpp
 create mode 100644 widget/qt/ProcInfo.cpp
 create mode 100644 widget/qt/components.conf
 create mode 100644 widget/qt/moz.build
 create mode 100644 widget/qt/nsAppShell.cpp
 create mode 100644 widget/qt/nsBidiKeyboard.cpp
 create mode 100644 widget/qt/nsBidiKeyboard.h
 create mode 100644 widget/qt/nsDeviceContextSpecQt.cpp
 create mode 100644 widget/qt/nsDeviceContextSpecQt.h
 create mode 100644 widget/qt/nsLookAndFeel.cpp
 create mode 100644 widget/qt/nsLookAndFeel.h
 create mode 100644 widget/qt/nsNativeBasicThemeQt.cpp
 create mode 100644 widget/qt/nsNativeBasicThemeQt.h
 create mode 100644 widget/qt/nsPrintDialogQt.cpp
 create mode 100644 widget/qt/nsPrintDialogQt.h
 create mode 100644 widget/qt/nsPrintOptionsQt.cpp
 create mode 100644 widget/qt/nsPrintOptionsQt.h
 create mode 100644 widget/qt/nsPrintSettingsQt.cpp
 create mode 100644 widget/qt/nsPrintSettingsQt.h
 create mode 100644 widget/qt/nsScreenManagerQt.cpp
 create mode 100644 widget/qt/nsScreenManagerQt.h
 create mode 100644 widget/qt/nsScreenQt.cpp
 create mode 100644 widget/qt/nsScreenQt.h
 create mode 100644 widget/qt/nsUserIdleServiceQt.cpp
 create mode 100644 widget/qt/nsUserIdleServiceQt.h
 create mode 100644 widget/qt/nsWidgetFactory.cpp
 create mode 100644 widget/qt/nsWidgetFactory.h

diff --git a/browser/base/content/browser-menubar.inc b/browser/base/content/browser-menubar.inc
index cd348e8e7817..942d13f6e5e2 100644
--- a/browser/base/content/browser-menubar.inc
+++ b/browser/base/content/browser-menubar.inc
@@ -61,7 +61,7 @@
                 <menuitem id="menu_sendLink"
                           command="Browser:SendLink" data-l10n-id="menu-file-email-link"/>
                 <menuseparator/>
-#if !defined(MOZ_WIDGET_GTK)
+#if !defined(MOZ_WIDGET_GTK) && !defined(MOZ_WIDGET_QT)
                 <menuitem id="menu_printSetup"
                           command="cmd_pageSetup" data-l10n-id="menu-file-print-setup" hidden="true"/>
 #endif
diff --git a/browser/themes/moz.build b/browser/themes/moz.build
index 0e706766c502..5e4598923e91 100644
--- a/browser/themes/moz.build
+++ b/browser/themes/moz.build
@@ -11,7 +11,7 @@ toolkit = CONFIG["MOZ_WIDGET_TOOLKIT"]
 
 if toolkit == "cocoa":
     DIRS += ["osx"]
-elif toolkit == "gtk":
+elif toolkit in ('gtk', 'qt'):
     DIRS += ["linux"]
 else:
     DIRS += ["windows"]
diff --git a/build/moz.configure/old.configure b/build/moz.configure/old.configure
index 35ab75df3a14..5a06c5816e0d 100644
--- a/build/moz.configure/old.configure
+++ b/build/moz.configure/old.configure
@@ -114,6 +114,7 @@ def old_configure_options(*options):
     "--with-branding",
     "--with-distribution-id",
     "--with-macbundlename-prefix",
+    "--with-qtdir",
     "--with-system-libevent",
     "--with-system-png",
     "--with-user-appdir",
diff --git a/config/milestone.txt b/config/milestone.txt
index f14cd0f20b8b..17aca278ee1b 100644
--- a/config/milestone.txt
+++ b/config/milestone.txt
@@ -1,13 +1 @@
-# Holds the current milestone.
-# Should be in the format of
-#
-#    x.x.x
-#    x.x.x.x
-#    x.x.x+
-#
-# Referenced by build/moz.configure/init.configure.
-# Hopefully I'll be able to automate replacement of *all*
-# hardcoded milestones in the tree from these two files.
-#--------------------------------------------------------
-
 91.9.1
diff --git a/dom/geolocation/Geolocation.cpp b/dom/geolocation/Geolocation.cpp
index 763192a50cf8..89cae0a42978 100644
--- a/dom/geolocation/Geolocation.cpp
+++ b/dom/geolocation/Geolocation.cpp
@@ -35,6 +35,10 @@
 
 class nsIPrincipal;
 
+#ifdef MOZ_ENABLE_QT5GEOPOSITION
+#  include "QTMLocationProvider.h"
+#endif
+
 #ifdef MOZ_WIDGET_ANDROID
 #  include "AndroidLocationProvider.h"
 #endif
@@ -485,6 +489,10 @@ nsresult nsGeolocationService::Init() {
 
   obs->AddObserver(this, "xpcom-shutdown", false);
 
+#ifdef MOZ_ENABLE_QT5GEOPOSITION
+  mProvider = new QTMLocationProvider();
+#endif
+
 #ifdef MOZ_WIDGET_ANDROID
   mProvider = new AndroidLocationProvider();
 #endif
diff --git a/dom/geolocation/moz.build b/dom/geolocation/moz.build
index 5c7f7471818c..9341a89283d0 100644
--- a/dom/geolocation/moz.build
+++ b/dom/geolocation/moz.build
@@ -37,6 +37,12 @@ LOCAL_INCLUDES += [
     "/dom/ipc",
 ]
 
+if CONFIG['MOZ_ENABLE_QT5GEOPOSITION']:
+    LOCAL_INCLUDES += [
+        '/dom/system/qt',
+    ]
+    CXXFLAGS += CONFIG['MOZ_QT_CFLAGS']
+
 if CONFIG["MOZ_WIDGET_TOOLKIT"] == "android":
     LOCAL_INCLUDES += [
         "/dom/system/android",
diff --git a/dom/ipc/ContentChild.cpp b/dom/ipc/ContentChild.cpp
index 4f971ce8c5d3..0c67412a62f3 100644
--- a/dom/ipc/ContentChild.cpp
+++ b/dom/ipc/ContentChild.cpp
@@ -8,6 +8,10 @@
 #  include "AndroidDecoderModule.h"
 #endif
 
+#ifdef MOZ_WIDGET_QT
+#  include "nsQAppInstance.h"
+#endif
+
 #include "BrowserChild.h"
 #include "nsNSSComponent.h"
 #include "ContentChild.h"
@@ -746,6 +750,11 @@ bool ContentChild::Init(base::ProcessId aParentPid, const char* aParentBuildID,
   }
 #endif
 
+#ifdef MOZ_WIDGET_QT
+  // sigh, seriously
+  nsQAppInstance::AddRef();
+#endif
+
 #ifdef MOZ_X11
   if (!gfxPlatform::IsHeadless()) {
     // Do this after initializing GDK, or GDK will install its own handler.
diff --git a/dom/ipc/moz.build b/dom/ipc/moz.build
index 87a07bdb1bca..a9a037cb4726 100644
--- a/dom/ipc/moz.build
+++ b/dom/ipc/moz.build
@@ -220,7 +220,7 @@ DEFINES["BIN_SUFFIX"] = '"%s"' % CONFIG["BIN_SUFFIX"]
 
 DEFINES["MOZ_APP_NAME"] = '"%s"' % CONFIG["MOZ_APP_NAME"]
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] == "android":
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('android', 'qt'):
     DEFINES["MOZ_ENABLE_FREETYPE"] = True
 
 JAR_MANIFESTS += ["jar.mn"]
diff --git a/dom/system/moz.build b/dom/system/moz.build
index 9ba8669ea0dd..e7b5e55f0551 100644
--- a/dom/system/moz.build
+++ b/dom/system/moz.build
@@ -43,7 +43,9 @@ with Files("tests/*1197901*"):
 
 toolkit = CONFIG["MOZ_WIDGET_TOOLKIT"]
 
-if toolkit == "windows":
+if toolkit == 'qt':
+    DIRS += ['qt']
+elif toolkit == 'windows':
     DIRS += ["windows"]
 elif toolkit == "cocoa":
     DIRS += ["mac"]
diff --git a/dom/system/qt/QTMLocationProvider.cpp b/dom/system/qt/QTMLocationProvider.cpp
new file mode 100644
index 000000000000..70b1c37dce94
--- /dev/null
+++ b/dom/system/qt/QTMLocationProvider.cpp
@@ -0,0 +1,103 @@
+/* -*- Mode: c++; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "QTMLocationProvider.h"
+#include "GeolocationPosition.h"
+
+using namespace mozilla;
+
+Q_DECLARE_METATYPE(QGeoPositionInfo)
+
+NS_IMPL_ISUPPORTS(QTMLocationProvider, nsIGeolocationProvider)
+
+QTMLocationProvider::QTMLocationProvider()
+    : mLocation(QGeoPositionInfoSource::createDefaultSource(this))
+{
+    qRegisterMetaType<QGeoPositionInfo>();
+
+    if (mLocation) {
+        connect(mLocation, &QGeoPositionInfoSource::positionUpdated, this, &QTMLocationProvider::positionUpdated);
+        // Not all versions of qt5positioning set default prefered method
+        // thus this workaround initializing QGeoPositionSource explicitly
+        mLocation->setPreferredPositioningMethods(QGeoPositionInfoSource::AllPositioningMethods);
+    }
+}
+
+QTMLocationProvider::~QTMLocationProvider()
+{
+    delete mLocation;
+}
+
+void
+QTMLocationProvider::positionUpdated(const QGeoPositionInfo &geoPosition)
+{
+    if (!geoPosition.isValid()) {
+        NS_WARNING("Invalida geoposition received");
+        return;
+    }
+
+    QGeoCoordinate coord = geoPosition.coordinate();
+    double latitude = coord.latitude();
+    double longitude = coord.longitude();
+    double altitude = coord.altitude();
+    double accuracy = geoPosition.attribute(QGeoPositionInfo::HorizontalAccuracy);
+    double altitudeAccuracy = geoPosition.attribute(QGeoPositionInfo::VerticalAccuracy);
+    double heading = geoPosition.attribute(QGeoPositionInfo::Direction);
+
+    bool providesSpeed = geoPosition.hasAttribute(QGeoPositionInfo::GroundSpeed);
+    double speed = geoPosition.attribute(QGeoPositionInfo::GroundSpeed);
+
+    RefPtr<nsGeoPosition> p =
+        new nsGeoPosition(latitude, longitude,
+                          altitude, accuracy,
+                          altitudeAccuracy, heading,
+                          speed, geoPosition.timestamp().toMSecsSinceEpoch());
+    if (mCallback) {
+        mCallback->Update(p);
+    }
+}
+
+NS_IMETHODIMP
+QTMLocationProvider::Startup()
+{
+    if (!mLocation)
+        return NS_ERROR_NOT_IMPLEMENTED;
+
+    mLocation->startUpdates();
+
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+QTMLocationProvider::Watch(nsIGeolocationUpdate* aCallback)
+{
+    mCallback = aCallback;
+
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+QTMLocationProvider::Shutdown()
+{
+    if (!mLocation)
+        return NS_ERROR_NOT_IMPLEMENTED;
+
+    mLocation->stopUpdates();
+    mCallback = nullptr;
+
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+QTMLocationProvider::SetHighAccuracy(bool aHigh)
+{
+    if (!mLocation)
+        return NS_ERROR_NOT_IMPLEMENTED;
+
+    mLocation->setPreferredPositioningMethods(aHigh ?
+                                              QGeoPositionInfoSource::SatellitePositioningMethods :
+                                              QGeoPositionInfoSource::AllPositioningMethods);
+    return NS_OK;
+}
diff --git a/dom/system/qt/QTMLocationProvider.h b/dom/system/qt/QTMLocationProvider.h
new file mode 100644
index 000000000000..34a7163c6845
--- /dev/null
+++ b/dom/system/qt/QTMLocationProvider.h
@@ -0,0 +1,35 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef QTMLocationProvider_h
+#define QTMLocationProvider_h
+
+#include <QGeoPositionInfoSource>
+#include "Geolocation.h"
+#include "nsIGeolocationProvider.h"
+#include "nsCOMPtr.h"
+
+class QTMLocationProvider : public QObject,
+                            public nsIGeolocationProvider
+{
+    Q_OBJECT
+
+public:
+    NS_DECL_ISUPPORTS
+    NS_DECL_NSIGEOLOCATIONPROVIDER
+
+    QTMLocationProvider();
+
+public Q_SLOTS:
+    // QGeoPositionInfoSource
+    void positionUpdated(const QGeoPositionInfo&);
+
+private:
+    ~QTMLocationProvider();
+
+    QGeoPositionInfoSource* mLocation;
+    nsCOMPtr<nsIGeolocationUpdate> mCallback;
+};
+
+#endif /* QTMLocationProvider_h */
diff --git a/dom/system/qt/QtHapticFeedback.cpp b/dom/system/qt/QtHapticFeedback.cpp
new file mode 100644
index 000000000000..91aa1592d317
--- /dev/null
+++ b/dom/system/qt/QtHapticFeedback.cpp
@@ -0,0 +1,20 @@
+/* -*- Mode: c++; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <QFeedbackEffect>
+#include "QtHapticFeedback.h"
+
+NS_IMPL_ISUPPORTS(QtHapticFeedback, nsIHapticFeedback)
+
+NS_IMETHODIMP
+QtHapticFeedback::PerformSimpleAction(int32_t aType)
+{
+    if (aType == ShortPress)
+        QFeedbackEffect::playThemeEffect(QFeedbackEffect::PressWeak);
+    if (aType == LongPress)
+        QFeedbackEffect::playThemeEffect(QFeedbackEffect::PressStrong);
+
+    return NS_OK;
+}
diff --git a/dom/system/qt/QtHapticFeedback.h b/dom/system/qt/QtHapticFeedback.h
new file mode 100644
index 000000000000..64fff752695b
--- /dev/null
+++ b/dom/system/qt/QtHapticFeedback.h
@@ -0,0 +1,15 @@
+/* -*- Mode: c++; c-basic-offset: 4; tab-width: 20; indent-tabs-mode: nil; -*-
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIHapticFeedback.h"
+
+class QtHapticFeedback : public nsIHapticFeedback
+{
+public:
+  NS_DECL_ISUPPORTS
+  NS_DECL_NSIHAPTICFEEDBACK
+protected:
+  virtual ~QtHapticFeedback() {}
+};
diff --git a/dom/system/qt/moz.build b/dom/system/qt/moz.build
new file mode 100644
index 000000000000..6e418008b29a
--- /dev/null
+++ b/dom/system/qt/moz.build
@@ -0,0 +1,26 @@
+# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+if CONFIG['MOZ_ENABLE_QT5GEOPOSITION']:
+    SOURCES += [
+        '!moc_QTMLocationProvider.cpp',
+        'QTMLocationProvider.cpp',
+    ]
+
+    CXXFLAGS += CONFIG['MOZ_QT_CFLAGS']
+
+    LOCAL_INCLUDES += [
+        '/dom/geolocation',
+    ]
+
+if CONFIG['MOZ_ENABLE_QT5FEEDBACK']:
+    SOURCES += [
+        'QtHapticFeedback.cpp',
+    ]
+
+include('/ipc/chromium/chromium-config.mozbuild')
+
+FINAL_LIBRARY = 'xul'
diff --git a/gfx/2d/2D.h b/gfx/2d/2D.h
index c49f6293e0a7..b0d63e9d36ac 100644
--- a/gfx/2d/2D.h
+++ b/gfx/2d/2D.h
@@ -37,7 +37,7 @@
 
 #include "nsRegionFwd.h"
 
-#if defined(MOZ_WIDGET_ANDROID) || defined(MOZ_WIDGET_GTK)
+#if defined(MOZ_WIDGET_ANDROID) || defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 #  ifndef MOZ_ENABLE_FREETYPE
 #    define MOZ_ENABLE_FREETYPE
 #  endif
@@ -1819,7 +1819,7 @@ class GFX2D_API Factory {
       bool aUseFontSmoothing = true, bool aApplySyntheticBold = false);
 #endif
 
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   static already_AddRefed<ScaledFont> CreateScaledFontForFontconfigFont(
       const RefPtr<UnscaledFont>& aUnscaledFont, Float aSize,
       RefPtr<SharedFTFace> aFace, FcPattern* aPattern);
diff --git a/gfx/2d/Factory.cpp b/gfx/2d/Factory.cpp
index f865cd37d9f8..6fbd23ac26b3 100644
--- a/gfx/2d/Factory.cpp
+++ b/gfx/2d/Factory.cpp
@@ -29,7 +29,7 @@
 #  include "UnscaledFontMac.h"
 #endif
 
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 #  include "ScaledFontFontconfig.h"
 #  include "NativeFontResourceFreeType.h"
 #  include "UnscaledFontFreeType.h"
@@ -636,7 +636,7 @@ already_AddRefed<ScaledFont> Factory::CreateScaledFontForMacFont(
 }
 #endif
 
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 already_AddRefed<ScaledFont> Factory::CreateScaledFontForFontconfigFont(
     const RefPtr<UnscaledFont>& aUnscaledFont, Float aSize,
     RefPtr<SharedFTFace> aFace, FcPattern* aPattern) {
diff --git a/gfx/2d/UnscaledFontFreeType.h b/gfx/2d/UnscaledFontFreeType.h
index 14a59a0018f1..aca4ae9231ad 100644
--- a/gfx/2d/UnscaledFontFreeType.h
+++ b/gfx/2d/UnscaledFontFreeType.h
@@ -71,7 +71,7 @@ class UnscaledFontFreeType : public UnscaledFont {
                                     uint32_t aNumVariations, FT_Face aFace);
 };
 
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 class UnscaledFontFontconfig : public UnscaledFontFreeType {
  public:
   MOZ_DECLARE_REFCOUNTED_VIRTUAL_TYPENAME(UnscaledFontFontconfig, override)
diff --git a/gfx/2d/moz.build b/gfx/2d/moz.build
index afae13227d29..1a5557f5d1c3 100644
--- a/gfx/2d/moz.build
+++ b/gfx/2d/moz.build
@@ -94,7 +94,7 @@ elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "windows":
     ]
     DEFINES["WIN32"] = True
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] in ("android", "gtk"):
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('android', 'gtk', 'qt'):
     EXPORTS.mozilla.gfx += [
         "UnscaledFontFreeType.h",
     ]
@@ -103,7 +103,7 @@ if CONFIG["MOZ_WIDGET_TOOLKIT"] in ("android", "gtk"):
         "UnscaledFontFreeType.cpp",
     ]
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'qt'):
     SOURCES += [
         "ScaledFontFontconfig.cpp",
     ]
@@ -235,13 +235,13 @@ FINAL_LIBRARY = "xul"
 for var in ("USE_CAIRO", "MOZ2D_HAS_MOZ_CAIRO"):
     DEFINES[var] = True
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] in ("android", "gtk"):
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('android', 'gtk', 'qt'):
     DEFINES["MOZ_ENABLE_FREETYPE"] = True
 
 CXXFLAGS += CONFIG["MOZ_CAIRO_CFLAGS"]
 CXXFLAGS += ["-Werror=switch"]
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] in ("android", "gtk"):
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('android', 'gtk', 'qt'):
     CXXFLAGS += CONFIG["CAIRO_FT_CFLAGS"]
 
 LOCAL_INCLUDES += CONFIG["SKIA_INCLUDES"]
diff --git a/gfx/cairo/cairo/src/cairo-qt-surface.cpp b/gfx/cairo/cairo/src/cairo-qt-surface.cpp
index d276f059e1fd..e35c4bb311c2 100644
--- a/gfx/cairo/cairo/src/cairo-qt-surface.cpp
+++ b/gfx/cairo/cairo/src/cairo-qt-surface.cpp
@@ -62,7 +62,7 @@
 #include <QtGui/QPixmap>
 #include <QtGui/QBrush>
 #include <QtGui/QPen>
-#include <QWidget>
+#include <QtWidgets/QWidget>
 #include <QtCore/QVarLengthArray>
 
 #if ((QT_VERSION >= QT_VERSION_CHECK(4, 7, 0)) || defined(QT_GLYPHS_API_BACKPORT)) && 0
@@ -787,7 +787,7 @@ _cairo_qt_surface_set_clip_region (cairo_qt_surface_t *qs,
 	    cairo_region_get_rectangle (clip_region, i, &rect);
 
 	    QRect r(rect.x, rect.y, rect.width, rect.height);
-	    qr = qr.unite(r);
+	    qr = qr.united(r);
 	}
 
 	qs->p->setClipRegion (qr, Qt::IntersectClip);
diff --git a/gfx/cairo/cairo/src/moz.build b/gfx/cairo/cairo/src/moz.build
index edc3b6a7a2a0..7202e72a68e4 100755
--- a/gfx/cairo/cairo/src/moz.build
+++ b/gfx/cairo/cairo/src/moz.build
@@ -82,6 +82,14 @@ elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gtk':
     SOURCES += [
         'cairo-ps-surface.c',
     ]
+elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    EXPORTS.cairo += [
+        'cairo-ps.h',
+        'cairo-qt.h',
+    ]
+    SOURCES += [
+        'cairo-qt-surface.cpp',
+    ]
 
 if CONFIG['MOZ_X11']:
     EXPORTS.cairo += [
@@ -286,6 +294,10 @@ if CONFIG['CC_TYPE'] in ('clang', 'gcc') and CONFIG['OS_TARGET'] == 'Android' an
     CFLAGS += ['-O2']
     CXXFLAGS += ['-O2']
 
+if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    CFLAGS += CONFIG['MOZ_QT_CFLAGS']
+    CXXFLAGS += CONFIG['MOZ_QT_CFLAGS']
+
 if CONFIG['MOZ_X11']:
     CFLAGS += CONFIG['XCFLAGS']
 
diff --git a/gfx/gl/moz.build b/gfx/gl/moz.build
index 24f7fcd6beab..162269dec493 100644
--- a/gfx/gl/moz.build
+++ b/gfx/gl/moz.build
@@ -17,6 +17,8 @@ elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
         gl_provider = "EGL"
     else:
         gl_provider = "GLX"
+elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    gl_provider = 'GLX'
 elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "android":
     gl_provider = "EGL"
 
diff --git a/gfx/skia/generate_mozbuild.py b/gfx/skia/generate_mozbuild.py
index e23ec37b1a3f..a6c0db4d9ee6 100755
--- a/gfx/skia/generate_mozbuild.py
+++ b/gfx/skia/generate_mozbuild.py
@@ -97,11 +97,11 @@ if CONFIG['CC_TYPE'] in ('clang', 'clang-cl'):
         '-Wno-unused-private-field',
     ]
 
-if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'android'):
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'android', 'qt'):
     CXXFLAGS += CONFIG['MOZ_CAIRO_CFLAGS']
     CXXFLAGS += CONFIG['CAIRO_FT_CFLAGS']
 
-if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gtk':
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'qt'):
     CXXFLAGS += CONFIG['MOZ_PANGO_CFLAGS']
 """
 
@@ -381,7 +381,7 @@ def write_mozbuild(sources):
   f.write("if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('cocoa', 'uikit'):\n")
   write_sources(f, sources['mac'], 4)
 
-  f.write("if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gtk':\n")
+  f.write("if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'qt'):\n")
   write_sources(f, sources['linux'], 4)
 
   f.write("if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'windows':\n")
diff --git a/gfx/skia/moz.build b/gfx/skia/moz.build
index 7d5ad42f4822..3998fdb59f2c 100755
--- a/gfx/skia/moz.build
+++ b/gfx/skia/moz.build
@@ -387,7 +387,7 @@ if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('cocoa', 'uikit'):
     SOURCES += [
         'skia/src/ports/SkFontHost_mac.cpp',
     ]
-if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gtk':
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'qt'):
     UNIFIED_SOURCES += [
         'skia/src/ports/SkDebug_stdio.cpp',
         'skia/src/ports/SkOSFile_posix.cpp',
@@ -489,9 +489,9 @@ if CONFIG['CC_TYPE'] in ('clang', 'clang-cl'):
         '-Wno-unused-private-field',
     ]
 
-if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'android'):
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'android', 'qt'):
     CXXFLAGS += CONFIG['MOZ_CAIRO_CFLAGS']
     CXXFLAGS += CONFIG['CAIRO_FT_CFLAGS']
 
-if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gtk':
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'qt'):
     CXXFLAGS += CONFIG['MOZ_PANGO_CFLAGS']
diff --git a/gfx/src/moz.build b/gfx/src/moz.build
index 51058dd940a7..96b98aae1455 100644
--- a/gfx/src/moz.build
+++ b/gfx/src/moz.build
@@ -95,3 +95,6 @@ CXXFLAGS += CONFIG["TK_CFLAGS"]
 
 if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
     CXXFLAGS += CONFIG["MOZ_PANGO_CFLAGS"]
+
+if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    CXXFLAGS += CONFIG['MOZ_QT_CFLAGS']
diff --git a/gfx/thebes/SharedFontList.cpp b/gfx/thebes/SharedFontList.cpp
index 23f07416304b..f44f8e5092ba 100644
--- a/gfx/thebes/SharedFontList.cpp
+++ b/gfx/thebes/SharedFontList.cpp
@@ -256,7 +256,7 @@ bool Family::FindAllFacesForStyleInternal(FontList* aList,
     Face* face = static_cast<Face*>(facePtrs[0].ToPtr(aList));
     if (face && face->HasValidDescriptor()) {
       aFaceList.AppendElement(face);
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
       if (face->mSize) {
         return true;
       }
@@ -287,7 +287,7 @@ bool Family::FindAllFacesForStyleInternal(FontList* aList,
     Face* face = static_cast<Face*>(facePtrs[faceIndex].ToPtr(aList));
     if (face && face->HasValidDescriptor()) {
       aFaceList.AppendElement(face);
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
       if (face->mSize) {
         return true;
       }
@@ -312,7 +312,7 @@ bool Family::FindAllFacesForStyleInternal(FontList* aList,
       face = static_cast<Face*>(facePtrs[order[trial]].ToPtr(aList));
       if (face && face->HasValidDescriptor()) {
         aFaceList.AppendElement(face);
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
         if (face->mSize) {
           return true;
         }
@@ -357,7 +357,7 @@ bool Family::FindAllFacesForStyleInternal(FontList* aList,
       } else if (distance == minDistance) {
         if (matched) {
           aFaceList.AppendElement(matched);
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
           if (matched->mSize) {
             anyNonScalable = true;
           }
@@ -371,7 +371,7 @@ bool Family::FindAllFacesForStyleInternal(FontList* aList,
   MOZ_ASSERT(matched, "didn't match a font within a family");
   if (matched) {
     aFaceList.AppendElement(matched);
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
     if (matched->mSize) {
       anyNonScalable = true;
     }
@@ -384,14 +384,14 @@ bool Family::FindAllFacesForStyleInternal(FontList* aList,
 void Family::FindAllFacesForStyle(FontList* aList, const gfxFontStyle& aStyle,
                                   nsTArray<Face*>& aFaceList,
                                   bool aIgnoreSizeTolerance) const {
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   bool anyNonScalable =
 #else
   Unused <<
 #endif
       FindAllFacesForStyleInternal(aList, aStyle, aFaceList);
 
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   // aFaceList now contains whatever faces are the best style match for
   // the requested style. If specifically-sized bitmap faces are supported,
   // we need to additionally filter the list to choose the appropriate size.
diff --git a/gfx/thebes/SharedFontList.h b/gfx/thebes/SharedFontList.h
index 534dbeef6e1b..308c8d9b1874 100644
--- a/gfx/thebes/SharedFontList.h
+++ b/gfx/thebes/SharedFontList.h
@@ -157,7 +157,7 @@ struct Face {
     nsCString mDescriptor;  // descriptor that can be used to instantiate a
                             // platform font reference
     uint16_t mIndex;        // an index used with descriptor (on some platforms)
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
     uint16_t mSize;  // pixel size if bitmap; zero indicates scalable
 #endif
     bool mFixedPitch;                  // is the face fixed-pitch (monospaced)?
@@ -172,7 +172,7 @@ struct Face {
   Face(FontList* aList, const InitData& aData)
       : mDescriptor(aList, aData.mDescriptor),
         mIndex(aData.mIndex),
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
         mSize(aData.mSize),
 #endif
         mFixedPitch(aData.mFixedPitch),
@@ -190,7 +190,7 @@ struct Face {
 
   String mDescriptor;
   uint16_t mIndex;
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   uint16_t mSize;
 #endif
   bool mFixedPitch;
diff --git a/gfx/thebes/gfxASurface.cpp b/gfx/thebes/gfxASurface.cpp
index 3a04b1f9c214..169103f5868a 100644
--- a/gfx/thebes/gfxASurface.cpp
+++ b/gfx/thebes/gfxASurface.cpp
@@ -140,6 +140,8 @@ already_AddRefed<gfxASurface> gfxASurface::Wrap(cairo_surface_t* csurf,
   /* No wrapper; figure out the surface type and create it */
   cairo_surface_type_t stype = cairo_surface_get_type(csurf);
 
+  MOZ_ASSERT(stype != CAIRO_SURFACE_TYPE_QT);
+
   if (stype == CAIRO_SURFACE_TYPE_IMAGE) {
     result = new gfxImageSurface(csurf);
   }
diff --git a/gfx/thebes/gfxFT2Fonts.cpp b/gfx/thebes/gfxFT2Fonts.cpp
index b4edd2edeeaf..bbfbbd46b4ba 100644
--- a/gfx/thebes/gfxFT2Fonts.cpp
+++ b/gfx/thebes/gfxFT2Fonts.cpp
@@ -6,6 +6,10 @@
 #if defined(MOZ_WIDGET_GTK)
 #  include "gfxPlatformGtk.h"
 #  define gfxToolkitPlatform gfxPlatformGtk
+#elif defined(MOZ_WIDGET_QT)
+#  include <qfontinfo.h>
+#  include "gfxQtPlatform.h"
+#  define gfxToolkitPlatform gfxQtPlatform
 #elif defined(XP_WIN)
 #  include "gfxWindowsPlatform.h"
 #  define gfxToolkitPlatform gfxWindowsPlatform
diff --git a/gfx/thebes/gfxFcPlatformFontList.cpp b/gfx/thebes/gfxFcPlatformFontList.cpp
index 1cd465119da1..d47f0f68b640 100644
--- a/gfx/thebes/gfxFcPlatformFontList.cpp
+++ b/gfx/thebes/gfxFcPlatformFontList.cpp
@@ -40,6 +40,8 @@
 #  include <gtk/gtk.h>
 #  include "gfxPlatformGtk.h"
 #  include "mozilla/WidgetUtilsGtk.h"
+#elif MOZ_WIDGET_QT
+#  include "gfxQtPlatform.h"
 #endif
 
 #ifdef MOZ_X11
@@ -1440,7 +1442,9 @@ nsresult gfxFcPlatformFontList::InitFontListForPlatform() {
   mLocalNames.Clear();
   mFcSubstituteCache.Clear();
 
+#ifdef MOZ_WIDGET_GTK
   ClearSystemFontOptions();
+#endif
 
   mAlwaysUseFontconfigGenerics = PrefFontListsUseOnlyGenerics();
   mOtherFamilyNamesInitialized = true;
@@ -1509,7 +1513,9 @@ nsresult gfxFcPlatformFontList::InitFontListForPlatform() {
     return NS_OK;
   }
 
+#ifdef MOZ_WIDGET_GTK
   UpdateSystemFontOptions();
+#endif
 
   UniquePtr<SandboxPolicy> policy;
 
@@ -2336,8 +2342,12 @@ gfxPlatformFontList::PrefFontList* gfxFcPlatformFontList::FindGenericFamilies(
           // -- select the fonts to be used for the generic
           auto prefFonts = MakeUnique<PrefFontList>();  // can be empty but in
                                                         // practice won't happen
+#if defined(MOZ_WIDGET_GTK)
           uint32_t limit =
               gfxPlatformGtk::GetPlatform()->MaxGenericSubstitions();
+#else
+          uint32_t limit = gfxQtPlatform::GetPlatform()->MaxGenericSubstitions();
+#endif
           bool foundFontWithLang = false;
           for (int i = 0; i < faces->nfont; i++) {
             FcPattern* font = faces->fonts[i];
diff --git a/gfx/thebes/gfxFont.h b/gfx/thebes/gfxFont.h
index 36d0d07e6b55..c029a5fd35e9 100644
--- a/gfx/thebes/gfxFont.h
+++ b/gfx/thebes/gfxFont.h
@@ -87,7 +87,7 @@ typedef struct _cairo_scaled_font cairo_scaled_font_t;
 // we use a platform-dependent value to harmonize with the platform's own APIs.
 #ifdef XP_WIN
 #  define OBLIQUE_SKEW_FACTOR 0.3f
-#elif defined(MOZ_WIDGET_GTK)
+#elif defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 #  define OBLIQUE_SKEW_FACTOR 0.2f
 #else
 #  define OBLIQUE_SKEW_FACTOR 0.25f
diff --git a/gfx/thebes/gfxPlatform.cpp b/gfx/thebes/gfxPlatform.cpp
index d620e75f6eaf..49a346d405fe 100644
--- a/gfx/thebes/gfxPlatform.cpp
+++ b/gfx/thebes/gfxPlatform.cpp
@@ -73,6 +73,8 @@
 #  include "nsCocoaFeatures.h"
 #elif defined(MOZ_WIDGET_GTK)
 #  include "gfxPlatformGtk.h"
+#elif defined(MOZ_WIDGET_QT)
+#  include "gfxQtPlatform.h"
 #elif defined(ANDROID)
 #  include "gfxAndroidPlatform.h"
 #endif
@@ -917,6 +919,8 @@ void gfxPlatform::Init() {
   gPlatform = new gfxPlatformMac;
 #elif defined(MOZ_WIDGET_GTK)
   gPlatform = new gfxPlatformGtk;
+#elif defined(MOZ_WIDGET_QT)
+  gPlatform = new gfxQtPlatform;
 #elif defined(ANDROID)
   gPlatform = new gfxAndroidPlatform;
 #else
@@ -1945,7 +1949,7 @@ BackendPrefsData gfxPlatform::GetBackendPrefs() const {
   data.mCanvasBitmask = BackendTypeBit(BackendType::SKIA);
   data.mContentBitmask = BackendTypeBit(BackendType::SKIA);
 
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   data.mCanvasBitmask |= BackendTypeBit(BackendType::CAIRO);
   data.mContentBitmask |= BackendTypeBit(BackendType::CAIRO);
 #endif
@@ -1985,7 +1989,7 @@ void gfxPlatform::InitBackendPrefs(BackendPrefsData&& aPrefsData) {
   }
 
   uint32_t swBackendBits = BackendTypeBit(BackendType::SKIA);
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   swBackendBits |= BackendTypeBit(BackendType::CAIRO);
 #endif
   mSoftwareBackend = GetContentBackendPref(swBackendBits);
diff --git a/gfx/thebes/gfxQtNativeRenderer.cpp b/gfx/thebes/gfxQtNativeRenderer.cpp
new file mode 100644
index 000000000000..f9ee28ead37d
--- /dev/null
+++ b/gfx/thebes/gfxQtNativeRenderer.cpp
@@ -0,0 +1,48 @@
+/* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "gfxQtNativeRenderer.h"
+#include "gfxContext.h"
+#include "gfxUtils.h"
+#include "gfxXlibSurface.h"
+
+nsresult
+gfxQtNativeRenderer::Draw(gfxContext* ctx, mozilla::gfx::IntSize size,
+                          uint32_t flags, Screen* screen, Visual* visual)
+{
+    Display *dpy = DisplayOfScreen(screen);
+    bool isOpaque = (flags & DRAW_IS_OPAQUE) ? true : false;
+    int screenNumber = screen - ScreenOfDisplay(dpy, 0);
+
+    if (!isOpaque) {
+        int depth = 32;
+        XVisualInfo vinfo;
+        int foundVisual = XMatchVisualInfo(dpy, screenNumber,
+                                           depth, TrueColor,
+                                           &vinfo);
+        if (!foundVisual)
+            return NS_ERROR_FAILURE;
+
+        visual = vinfo.visual;
+    }
+
+    RefPtr<gfxXlibSurface> xsurf =
+        gfxXlibSurface::Create(screen, visual,
+                               mozilla::gfx::IntSize(size.width, size.height));
+
+    if (!isOpaque) {
+        gfxUtils::ClearThebesSurface(xsurf);
+    }
+
+    nsresult rv = DrawWithXlib(xsurf->CairoSurface(), nsIntPoint(0, 0), nullptr, 0);
+
+    if (NS_FAILED(rv))
+        return rv;
+
+    ctx->SetSource(xsurf);
+    ctx->Paint();
+
+    return rv;
+}
diff --git a/gfx/thebes/gfxQtNativeRenderer.h b/gfx/thebes/gfxQtNativeRenderer.h
new file mode 100644
index 000000000000..23c138e11fc0
--- /dev/null
+++ b/gfx/thebes/gfxQtNativeRenderer.h
@@ -0,0 +1,68 @@
+/* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef GFXQTNATIVERENDER_H_
+#define GFXQTNATIVERENDER_H_
+
+#include "gfxContext.h"
+#include "gfxXlibSurface.h"
+#include "mozilla/gfx/Rect.h"
+
+/**
+ * This class lets us take code that draws into an Xlib surface drawable and lets us
+ * use it to draw into any Thebes context. The user should subclass this class,
+ * override NativeDraw, and then call Draw(). The drawing will be subjected
+ * to all Thebes transformations, clipping etc.
+ */
+class gfxQtNativeRenderer {
+public:
+    /**
+     * Perform the native drawing.
+     * @param offsetX draw at this offset into the given drawable
+     * @param offsetY draw at this offset into the given drawable
+     * @param clipRects an array of rects; clip to the union
+     * @param numClipRects the number of rects in the array, or zero if
+     * no clipping is required
+     */
+    virtual nsresult DrawWithXlib(cairo_surface_t* surface,
+                                  nsIntPoint offset,
+                                  mozilla::gfx::IntRect* clipRects,
+                                  uint32_t numClipRects) = 0;
+
+    enum {
+        // If set, then Draw() is opaque, i.e., every pixel in the intersection
+        // of the clipRect and (offset.x,offset.y,bounds.width,bounds.height)
+        // will be set and there is no dependence on what the existing pixels
+        // in the drawable are set to.
+        DRAW_IS_OPAQUE = 0x01,
+        // If set, then numClipRects can be zero or one
+        DRAW_SUPPORTS_CLIP_RECT = 0x04,
+        // If set, then numClipRects can be any value. If neither this
+        // nor CLIP_RECT are set, then numClipRects will be zero
+        DRAW_SUPPORTS_CLIP_LIST = 0x08,
+        // If set, then the visual passed in can be any visual, otherwise the
+        // visual passed in must be the default visual for dpy's default screen
+        DRAW_SUPPORTS_ALTERNATE_VISUAL = 0x10,
+        // If set, then the Screen 'screen' in the callback can be different
+        // from the default Screen of the display passed to 'Draw' and can be
+        // on a different display.
+        DRAW_SUPPORTS_ALTERNATE_SCREEN = 0x20
+    };
+
+    /**
+     * @param flags see above
+     * @param size Draw()'s drawing is guaranteed to be restricted to
+     * the rectangle (offset.x,offset.y,size.width,size.height)
+     * @param dpy a display to use for the drawing if ctx doesn't have one
+     * @param resultSurface if non-null, we will try to capture a copy of the
+     * rendered image into a surface similar to the surface of ctx; if
+     * successful, a pointer to the new gfxASurface is stored in *resultSurface,
+     * otherwise *resultSurface is set to nullptr.
+     */
+    nsresult Draw(gfxContext* ctx, mozilla::gfx::IntSize size,
+                  uint32_t flags, Screen* screen, Visual* visual);
+};
+
+#endif /*GFXQTNATIVERENDER_H_*/
diff --git a/gfx/thebes/gfxQtPlatform.cpp b/gfx/thebes/gfxQtPlatform.cpp
new file mode 100644
index 000000000000..d837cc2c2ca9
--- /dev/null
+++ b/gfx/thebes/gfxQtPlatform.cpp
@@ -0,0 +1,147 @@
+/* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <QPixmap>
+#include <QWindow>
+
+#include <QGuiApplication>
+#include <QScreen>
+
+#include "gfxQtPlatform.h"
+
+#include "mozilla/gfx/2D.h"
+
+#include "cairo.h"
+
+#include "gfxImageSurface.h"
+#include "nsUnicodeProperties.h"
+#include "gfxFcPlatformFontList.h"
+
+#include "gfxContext.h"
+#include "gfxUserFontSet.h"
+#include <gfxTextRun.h>
+
+#include "nsUnicharUtils.h"
+
+#include "nsMathUtils.h"
+#include "nsTArray.h"
+
+#include "qcms.h"
+
+#include "mozilla/Preferences.h"
+
+using namespace mozilla;
+using namespace mozilla::unicode;
+using namespace mozilla::gfx;
+
+static gfxImageFormat sOffscreenFormat = SurfaceFormat::X8R8G8B8_UINT32;
+static FT_Library gPlatformFTLibrary = nullptr;
+
+#define GFX_PREF_MAX_GENERIC_SUBSTITUTIONS \
+  "gfx.font_rendering.fontconfig.max_generic_substitutions"
+
+gfxQtPlatform::gfxQtPlatform()
+{
+    mMaxGenericSubstitutions = UNINITIALIZED_VALUE;
+
+    int32_t depth = GetScreenDepth();
+    if (depth == 16) {
+        sOffscreenFormat = SurfaceFormat::R5G6B5_UINT16;
+    }
+    InitBackendPrefs(GetBackendPrefs());
+
+    gPlatformFTLibrary = Factory::NewFTLibrary();
+    MOZ_ASSERT(gPlatformFTLibrary);
+    Factory::SetFTLibrary(gPlatformFTLibrary);
+}
+
+gfxQtPlatform::~gfxQtPlatform()
+{
+    Factory::ReleaseFTLibrary(gPlatformFTLibrary);
+    gPlatformFTLibrary = nullptr;
+}
+
+bool
+gfxQtPlatform::CheckVariationFontSupport()
+{
+  // Although there was some variation/multiple-master support in FreeType
+  // in older versions, it seems too incomplete/unstable for us to use
+  // until at least 2.7.1.
+  FT_Int major, minor, patch;
+  FT_Library_Version(Factory::GetFTLibrary(), &major, &minor, &patch);
+  return major * 1000000 + minor * 1000 + patch >= 2007001;
+}
+
+already_AddRefed<gfxASurface>
+gfxQtPlatform::CreateOffscreenSurface(const IntSize& aSize,
+                                      gfxImageFormat aFormat)
+{
+    RefPtr<gfxASurface> newSurface =
+        new gfxImageSurface(aSize, aFormat);
+
+    return newSurface.forget();
+}
+
+nsresult
+gfxQtPlatform::GetFontList(nsAtom *aLangGroup,
+                           const nsACString& aGenericFamily,
+                           nsTArray<nsString>& aListOfFonts)
+{
+    gfxPlatformFontList::PlatformFontList()->GetFontList(
+        aLangGroup, aGenericFamily, aListOfFonts);
+    return NS_OK;
+}
+
+nsresult
+gfxQtPlatform::UpdateFontList(bool aFullRebuild)
+{
+    gfxPlatformFontList::PlatformFontList()->UpdateFontList(aFullRebuild);
+    return NS_OK;
+}
+
+bool
+gfxQtPlatform::CreatePlatformFontList()
+{
+    return gfxPlatformFontList::Initialize(new gfxFcPlatformFontList);
+}
+
+int32_t
+gfxQtPlatform::GetDPI()
+{
+    return qApp->primaryScreen()->logicalDotsPerInch();
+}
+
+gfxImageFormat
+gfxQtPlatform::GetOffscreenFormat()
+{
+    return sOffscreenFormat;
+}
+
+void gfxQtPlatform::FontsPrefsChanged(const char *aPref)
+{
+    // only checking for generic substitions, pass other changes up
+    if (strcmp(GFX_PREF_MAX_GENERIC_SUBSTITUTIONS, aPref)) {
+      gfxPlatform::FontsPrefsChanged(aPref);
+      return;
+    }
+
+    mMaxGenericSubstitutions = UNINITIALIZED_VALUE;
+    gfxFcPlatformFontList* pfl = gfxFcPlatformFontList::PlatformFontList();
+    pfl->ClearGenericMappings();
+    FlushFontAndWordCaches();
+}
+
+uint32_t gfxQtPlatform::MaxGenericSubstitions()
+{
+    if (mMaxGenericSubstitutions == UNINITIALIZED_VALUE) {
+      mMaxGenericSubstitutions =
+          Preferences::GetInt(GFX_PREF_MAX_GENERIC_SUBSTITUTIONS, 3);
+      if (mMaxGenericSubstitutions < 0) {
+        mMaxGenericSubstitutions = 3;
+      }
+    }
+
+    return uint32_t(mMaxGenericSubstitutions);
+}
diff --git a/gfx/thebes/gfxQtPlatform.h b/gfx/thebes/gfxQtPlatform.h
new file mode 100644
index 000000000000..4369e16c7f5c
--- /dev/null
+++ b/gfx/thebes/gfxQtPlatform.h
@@ -0,0 +1,61 @@
+/* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef GFX_PLATFORM_QT_H
+#define GFX_PLATFORM_QT_H
+
+#include "gfxPlatform.h"
+#include "nsAutoRef.h"
+#include "nsTArray.h"
+#ifdef MOZ_X11
+#include "X11/Xlib.h"
+#endif
+
+class QWindow;
+
+class gfxQtPlatform : public gfxPlatform {
+public:
+    gfxQtPlatform();
+    virtual ~gfxQtPlatform();
+
+    static gfxQtPlatform *GetPlatform() {
+        return static_cast<gfxQtPlatform*>(gfxPlatform::GetPlatform());
+    }
+
+    virtual already_AddRefed<gfxASurface>
+      CreateOffscreenSurface(const IntSize& aSize,
+                             gfxImageFormat aFormat) override;
+
+    virtual nsresult GetFontList(nsAtom *aLangGroup,
+                                 const nsACString& aGenericFamily,
+                                 nsTArray<nsString>& aListOfFonts) override;
+
+    virtual nsresult UpdateFontList(bool aFullRebuild = true);
+
+    virtual bool CreatePlatformFontList() override;
+
+    static int32_t GetDPI();
+
+    virtual gfxImageFormat GetOffscreenFormat() override;
+
+    bool AccelerateLayersByDefault() override {
+      return true;
+    }
+
+    void FontsPrefsChanged(const char* aPref) override;
+
+    uint32_t MaxGenericSubstitions();
+
+protected:
+    int8_t mMaxGenericSubstitutions;
+
+    virtual bool CheckVariationFontSupport() override;
+
+private:
+    int mScreenDepth;
+};
+
+#endif /* GFX_PLATFORM_QT_H */
+
diff --git a/gfx/thebes/moz.build b/gfx/thebes/moz.build
index baa7005a8f82..3ce66923a3a1 100644
--- a/gfx/thebes/moz.build
+++ b/gfx/thebes/moz.build
@@ -144,6 +144,32 @@ elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
             "XlibDisplay.cpp",
         ]
 
+elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    EXPORTS += [
+        'gfxFT2FontBase.h',
+        'gfxQtNativeRenderer.h',
+        'gfxQtPlatform.h',
+    ]
+    EXPORTS.mozilla.gfx += [
+        'PrintTargetPDF.h',
+    ]
+    SOURCES += [
+        'gfxFcPlatformFontList.cpp',
+        'gfxFT2FontBase.cpp',
+        'gfxFT2Utils.cpp',
+        'gfxQtPlatform.cpp',
+        'PrintTargetPDF.cpp',
+    ]
+
+    if CONFIG['MOZ_X11']:
+        EXPORTS += [
+            'gfxXlibSurface.h',
+        ]
+        SOURCES += [
+            'gfxQtNativeRenderer.cpp',
+            'gfxXlibSurface.cpp',
+        ]
+
 elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "windows":
     EXPORTS += [
         "gfxDWriteFonts.h",
@@ -267,7 +293,7 @@ LOCAL_INCLUDES += [
     "/dom/xml",
 ]
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] in ("android", "gtk"):
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('android', 'gtk', 'qt'):
     DEFINES["MOZ_ENABLE_FREETYPE"] = True
 
 if CONFIG["MOZ_WIDGET_TOOLKIT"] == "windows":
@@ -283,7 +309,7 @@ CFLAGS += CONFIG["TK_CFLAGS"]
 if CONFIG["MOZ_WIDGET_TOOLKIT"] in ("android"):
     CXXFLAGS += CONFIG["CAIRO_FT_CFLAGS"]
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'qt'):
     CXXFLAGS += CONFIG["MOZ_PANGO_CFLAGS"]
 
 if CONFIG["MOZ_WAYLAND"]:
diff --git a/gfx/webrender_bindings/Moz2DImageRenderer.cpp b/gfx/webrender_bindings/Moz2DImageRenderer.cpp
index c14d75667967..b6e4a06a3207 100644
--- a/gfx/webrender_bindings/Moz2DImageRenderer.cpp
+++ b/gfx/webrender_bindings/Moz2DImageRenderer.cpp
@@ -179,7 +179,7 @@ void AddNativeFontHandle(WrFontKey aKey, void* aHandle, uint32_t aIndex) {
 #elif defined(XP_WIN)
     font.mUnscaledFont = new UnscaledFontDWrite(
         reinterpret_cast<IDWriteFontFace*>(aHandle), nullptr);
-#elif defined(ANDROID)
+#elif defined(ANDROID) || defined(MOZ_WIDGET_QT)
     font.mUnscaledFont = new UnscaledFontFreeType(
         reinterpret_cast<const char*>(aHandle), aIndex);
 #else
@@ -253,7 +253,7 @@ static RefPtr<UnscaledFont> GetUnscaledFont(Translator* aTranslator,
       FontType::MAC;
 #elif defined(XP_WIN)
       FontType::DWRITE;
-#elif defined(ANDROID)
+#elif defined(ANDROID) || defined(MOZ_WIDGET_QT)
       FontType::FREETYPE;
 #else
       FontType::FONTCONFIG;
diff --git a/gfx/webrender_bindings/moz.build b/gfx/webrender_bindings/moz.build
index ecbea00c12d8..ea2368b2b683 100644
--- a/gfx/webrender_bindings/moz.build
+++ b/gfx/webrender_bindings/moz.build
@@ -98,7 +98,7 @@ if CONFIG["MOZ_WAYLAND"]:
         "RenderDMABUFTextureHost.cpp",
     ]
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] in ("android", "gtk"):
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('android', 'gtk', 'qt'):
     CXXFLAGS += CONFIG["MOZ_CAIRO_CFLAGS"]
     CXXFLAGS += CONFIG["CAIRO_FT_CFLAGS"]
 
diff --git a/image/decoders/icon/moz.build b/image/decoders/icon/moz.build
index 96cf951b3bc2..daefa92c2630 100644
--- a/image/decoders/icon/moz.build
+++ b/image/decoders/icon/moz.build
@@ -26,6 +26,9 @@ platform = None
 if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
     platform = "gtk"
 
+if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    platform = 'qt'
+
 if CONFIG["OS_ARCH"] == "WINNT":
     platform = "win"
 
diff --git a/image/decoders/icon/qt/gtkqticonsconverter.js b/image/decoders/icon/qt/gtkqticonsconverter.js
new file mode 100644
index 000000000000..23afe8af77c8
--- /dev/null
+++ b/image/decoders/icon/qt/gtkqticonsconverter.js
@@ -0,0 +1,145 @@
+/* vim:set ts=2 sw=2 sts=2 cin et: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+Components.utils.import("resource://gre/modules/XPCOMUtils.jsm");
+
+
+function GtkQtIconsConverter()
+{ };
+
+#ifdef 0
+#endif
+
+GtkQtIconsConverter.prototype =
+{
+  classID:          Components.ID("{c0783c34-a831-40c6-8c03-98c9f74cca45}"),
+  QueryInterface: XPCOMUtils.generateQI(
+                                [Components.interfaces.nsIGtkQtIconsConverter]),
+  convert: function(icon) { return this._gtk_qt_icons_table[icon]; },
+  _gtk_qt_icons_table:
+  {
+    'about':
+    0,
+    'add':
+    0,
+    'apply':
+    44, // QStyle::SP_DialogApplyButton
+    'cancel':
+    39, // QStyle::SP_DialogCancelButton
+    'clear':
+    45, // QStyle::SP_DialogResetButton
+    'color-picker':
+    0,
+    'copy':
+    0,
+    'close':
+    43, // QStyle::SP_DialogCloseButton
+    'cut':
+    0,
+    'delete':
+    0,
+    'dialog-error':
+    0,
+    'dialog-info':
+    0,
+    'dialog-question':
+    12, // QStyle::SP_MessageBoxQuestion
+    'dialog-warning':
+    10, // QStyle::SP_MessageBoxWarning
+    'directory':
+    37, // QStyle::SP_DirIcon
+    'file':
+    24, // QStyle::SP_FileIcon
+    'find':
+    0,
+    'go-back-ltr':
+    53, // QStyle::SP_ArrowBack
+    'go-back-rtl':
+    53, // QStyle::SP_ArrowBack
+    'go-back':
+    53, // QStyle::SP_ArrowBack
+    'go-forward-ltr':
+    54, // QStyle::SP_ArrowForward
+    'go-forward-rtl':
+    54, // QStyle::SP_ArrowForward
+    'go-forward':
+    54, // QStyle::SP_ArrowForward
+    'go-up':
+    49, // QStyle::SP_ArrowUp
+    'goto-first':
+    0,
+    'goto-last':
+    0,
+    'help':
+    7, // QStyle::SP_TitleBarContextHelpButton
+    'home':
+    55, // QStyle::SP_DirHomeIcon
+    'info':
+    9, // QStyle::SP_MessageBoxInformation
+    'jump-to':
+    0,
+    'media-pause':
+    0,
+    'media-play':
+    0,
+    'network':
+    20, // QStyle::SP_DriveNetIcon
+    'no':
+    48, // QStyle::SP_DialogNoButton
+    'ok':
+    38, // QStyle::SP_DialogOkButton
+    'open':
+    21, // QStyle::SP_DirOpenIcon
+    'orientation-landscape':
+    0,
+    'orientation-portrait':
+    0,
+    'paste':
+    0,
+    'preferences':
+    34, // QStyle::SP_FileDialogContentsView
+    'print-preview':
+    0,
+    'print':
+    0,
+    'properties':
+    0,
+    'quit':
+    0,
+    'redo':
+    0,
+    'refresh':
+    58, // QStyle::SP_BrowserReload
+    'remove':
+    0,
+    'revert-to-saved':
+    0,
+    'save-as':
+    42, // QStyle::SP_DialogSaveButton
+    'save':
+    42, // QStyle::SP_DialogSaveButton
+    'select-all':
+    0,
+    'select-font':
+    0,
+    'stop':
+    59, // QStyle::SP_BrowserStop
+    'undelete':
+    0,
+    'undo':
+    0,
+    'yes':
+    47, // QStyle::SP_DialogYesButton
+    'zoom-100':
+    0,
+    'zoom-in':
+    0,
+    'zoom-out':
+    0
+  },
+}
+var components = [GtkQtIconsConverter];
+this.NSGetFactory = XPCOMUtils.generateNSGetFactory(components);
+
diff --git a/image/decoders/icon/qt/gtkqticonsconverter.manifest b/image/decoders/icon/qt/gtkqticonsconverter.manifest
new file mode 100644
index 000000000000..4d6ede281431
--- /dev/null
+++ b/image/decoders/icon/qt/gtkqticonsconverter.manifest
@@ -0,0 +1,2 @@
+component {c0783c34-a831-40c6-8c03-98c9f74cca45} gtkqticonsconverter.js
+contract @mozilla.org/gtkqticonsconverter;1 {c0783c34-a831-40c6-8c03-98c9f74cca45}
diff --git a/image/decoders/icon/qt/moz.build b/image/decoders/icon/qt/moz.build
new file mode 100644
index 000000000000..0cf20fdb6d40
--- /dev/null
+++ b/image/decoders/icon/qt/moz.build
@@ -0,0 +1,27 @@
+# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+XPIDL_SOURCES += [
+    'nsGtkQtIconsConverter.idl',
+]
+
+XPIDL_MODULE = 'gtkqticonsconverter'
+
+SOURCES += [
+    'nsIconChannel.cpp',
+]
+
+EXTRA_COMPONENTS += [
+    'gtkqticonsconverter.manifest',
+]
+
+EXTRA_PP_COMPONENTS += [
+    'gtkqticonsconverter.js',
+]
+
+FINAL_LIBRARY = 'xul'
+
+CXXFLAGS += CONFIG['MOZ_QT_CFLAGS']
diff --git a/image/decoders/icon/qt/nsGtkQtIconsConverter.idl b/image/decoders/icon/qt/nsGtkQtIconsConverter.idl
new file mode 100644
index 000000000000..958ae3394f69
--- /dev/null
+++ b/image/decoders/icon/qt/nsGtkQtIconsConverter.idl
@@ -0,0 +1,12 @@
+/* vim:set ts=2 sw=2 sts=2 cin et: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+[scriptable, uuid(c0783c34-a831-40c6-8c03-98c9f74cca45)]
+interface nsIGtkQtIconsConverter : nsISupports
+{
+  long convert(in string icon);
+};
diff --git a/image/decoders/icon/qt/nsIconChannel.cpp b/image/decoders/icon/qt/nsIconChannel.cpp
new file mode 100644
index 000000000000..edb6e86a9e7f
--- /dev/null
+++ b/image/decoders/icon/qt/nsIconChannel.cpp
@@ -0,0 +1,137 @@
+/* vim:set ts=2 sw=2 sts=2 cin et: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <QIcon>
+
+#include <stdlib.h>
+#include <unistd.h>
+
+#include "mozilla/EndianUtils.h"
+
+#include "nsMimeTypes.h"
+#include "nsIMIMEService.h"
+
+#include "nsIStringStream.h"
+#include "nsIStringBundle.h"
+
+#include "nsNetUtil.h"
+#include "mozilla/NullPrincipal.h"
+#include "nsIURL.h"
+
+#include "nsIconChannel.h"
+#include "nsGtkQtIconsConverter.h"
+
+#include "nsComponentManagerUtils.h"  // do_CreateInstance
+
+NS_IMPL_ISUPPORTS(nsIconChannel,
+                  nsIRequest,
+                  nsIChannel)
+
+static nsresult
+moz_qicon_to_channel(QImage* image, nsIURI* aURI,
+                     nsIChannel** aChannel)
+{
+  NS_ENSURE_ARG_POINTER(image);
+
+  int width = image->width();
+  int height = image->height();
+
+  NS_ENSURE_TRUE(height < 256 && width < 256 && height > 0 && width > 0,
+                 NS_ERROR_UNEXPECTED);
+
+  const int n_channels = 4;
+  long int buf_size = 2 + n_channels * height * width;
+  uint8_t* const buf = (uint8_t*)moz_xmalloc(buf_size);
+  NS_ENSURE_TRUE(buf, NS_ERROR_OUT_OF_MEMORY);
+  uint8_t* out = buf;
+
+  *(out++) = width;
+  *(out++) = height;
+
+  const uchar* const pixels = image->bits();
+  int rowextra = image->bytesPerLine() - width * n_channels;
+
+  // encode the RGB data and the A data
+  const uchar* in = pixels;
+  for (int y = 0; y < height; ++y, in += rowextra) {
+    for (int x = 0; x < width; ++x) {
+      uint8_t r = *(in++);
+      uint8_t g = *(in++);
+      uint8_t b = *(in++);
+      uint8_t a = *(in++);
+#define DO_PREMULTIPLY(c_) uint8_t(uint16_t(c_) * uint16_t(a) / uint16_t(255))
+#if MOZ_LITTLE_ENDIAN
+      *(out++) = DO_PREMULTIPLY(b);
+      *(out++) = DO_PREMULTIPLY(g);
+      *(out++) = DO_PREMULTIPLY(r);
+      *(out++) = a;
+#else
+      *(out++) = a;
+      *(out++) = DO_PREMULTIPLY(r);
+      *(out++) = DO_PREMULTIPLY(g);
+      *(out++) = DO_PREMULTIPLY(b);
+#endif
+#undef DO_PREMULTIPLY
+    }
+  }
+
+  NS_ASSERTION(out == buf + buf_size, "size miscalculation");
+
+  nsresult rv;
+  nsCOMPtr<nsIStringInputStream> stream =
+    do_CreateInstance("@mozilla.org/io/string-input-stream;1", &rv);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  rv = stream->AdoptData((char*)buf, buf_size);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  // nsIconProtocolHandler::NewChannel2 will provide the correct loadInfo for
+  // this iconChannel. Use the most restrictive security settings for the
+  // temporary loadInfo to make sure the channel can not be openend.
+  nsCOMPtr<nsIPrincipal> nullPrincipal =
+      mozilla::NullPrincipal::CreateWithoutOriginAttributes();
+  return NS_NewInputStreamChannel(aChannel,
+                                  aURI,
+                                  stream.forget(),
+                                  nullPrincipal,
+                                  nsILoadInfo::SEC_REQUIRE_SAME_ORIGIN_DATA_IS_BLOCKED,
+                                  nsIContentPolicy::TYPE_INTERNAL_IMAGE,
+                                  nsLiteralCString(IMAGE_ICON_MS));
+}
+
+nsresult
+nsIconChannel::Init(nsIURI* aURI)
+{
+
+  nsCOMPtr<nsIMozIconURI> iconURI = do_QueryInterface(aURI);
+  NS_ASSERTION(iconURI, "URI is not an nsIMozIconURI");
+
+  nsAutoCString stockIcon;
+  iconURI->GetStockIcon(stockIcon);
+
+  nsAutoCString iconSizeString;
+  iconURI->GetIconSize(iconSizeString);
+
+  uint32_t desiredImageSize;
+  iconURI->GetImageSize(&desiredImageSize);
+
+  nsAutoCString iconStateString;
+  iconURI->GetIconState(iconStateString);
+  bool disabled = iconStateString.EqualsLiteral("disabled");
+
+  // This is a workaround for
+  // https://bugzilla.mozilla.org/show_bug.cgi?id=662299
+  // Try to find corresponding freedesktop icon and fallback to empty QIcon
+  // if failed.
+  QIcon icon = QIcon::fromTheme(QString(stockIcon.get()).replace("gtk-",
+                                                                 "edit-"));
+  QPixmap pixmap = icon.pixmap(desiredImageSize, desiredImageSize,
+                               disabled ? QIcon::Disabled : QIcon::Normal);
+
+  QImage image = pixmap.toImage();
+
+  return moz_qicon_to_channel(&image, iconURI,
+                              getter_AddRefs(mRealChannel));
+}
diff --git a/image/decoders/icon/qt/nsIconChannel.h b/image/decoders/icon/qt/nsIconChannel.h
new file mode 100644
index 000000000000..059891a71fae
--- /dev/null
+++ b/image/decoders/icon/qt/nsIconChannel.h
@@ -0,0 +1,40 @@
+/* vim:set ts=2 sw=2 sts=2 cin et: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef mozilla_image_encoders_icon_qt_nsIconChannel_h
+#define mozilla_image_encoders_icon_qt_nsIconChannel_h
+
+#include "mozilla/Attributes.h"
+
+#include "nsIChannel.h"
+#include "nsIStreamListener.h"
+#include "nsIURI.h"
+#include "nsIIconURI.h"
+#include "nsCOMPtr.h"
+
+/// This class is the gnome implementation of nsIconChannel. It basically asks
+/// qt for an icon, and creates a new channel for
+/// that file to which all calls will be proxied.
+class nsIconChannel final : public nsIChannel {
+  public:
+    NS_DECL_ISUPPORTS
+    NS_FORWARD_NSIREQUEST(mRealChannel->)
+    NS_FORWARD_NSICHANNEL(mRealChannel->)
+
+    nsIconChannel() { };
+
+    /// Called by nsIconProtocolHandler after it creates this channel.
+    /// Must be called before calling any other function on this object.
+    /// If this method fails, no other function must be called on this object.
+    nsresult Init(nsIURI* aURI);
+  private:
+    ~nsIconChannel() { };
+
+    /// The channel to the temp icon file (e.g. to /tmp/2qy9wjqw.html).
+    /// Will always be non-null after a successful Init.
+    nsCOMPtr<nsIChannel> mRealChannel;
+};
+
+#endif // mozilla_image_encoders_icon_qt_nsIconChannel_h
diff --git a/image/decoders/moz.build b/image/decoders/moz.build
index 946f947bb8bc..8612d7c629a7 100644
--- a/image/decoders/moz.build
+++ b/image/decoders/moz.build
@@ -10,6 +10,8 @@ toolkit = CONFIG["MOZ_WIDGET_TOOLKIT"]
 # fix that another time.
 if toolkit == "gtk":
     DIRS += ["icon/gtk", "icon"]
+elif toolkit == 'qt':
+    DIRS += ['icon/qt', 'icon']
 
 if CONFIG["OS_ARCH"] == "WINNT":
     DIRS += ["icon/win", "icon"]
diff --git a/intl/locale/moz.build b/intl/locale/moz.build
index 28662541952f..27f0bdb07cb6 100644
--- a/intl/locale/moz.build
+++ b/intl/locale/moz.build
@@ -14,6 +14,8 @@ elif toolkit == "cocoa":
     DIRS += ["mac"]
 elif toolkit == "gtk":
     DIRS += ["gtk"]
+elif 'qt' in toolkit:
+    DIRS += ['gtk']
 elif toolkit == "android":
     DIRS += ["android"]
 
@@ -80,6 +82,9 @@ for prefix in prefixes:
 if CONFIG["ENABLE_TESTS"]:
     DIRS += ["tests/gtest"]
 
+if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    CXXFLAGS += CONFIG['MOZ_QT_CFLAGS']
+
 if CONFIG["COMPILE_ENVIRONMENT"]:
     CbindgenHeader(
         "fluent_langneg_ffi_generated.h",
diff --git a/ipc/chromium/moz.build b/ipc/chromium/moz.build
index a401245c8543..383d656b751d 100644
--- a/ipc/chromium/moz.build
+++ b/ipc/chromium/moz.build
@@ -117,6 +117,11 @@ if os_bsd or os_linux:
         SOURCES += [
             "src/base/message_pump_glib.cc",
         ]
+    if CONFIG['MOZ_ENABLE_QT']:
+        SOURCES += [
+            '!moc_message_pump_qt.cc',
+            'src/base/message_pump_qt.cc',
+        ]
 
 if os_solaris:
     SOURCES += [
diff --git a/ipc/glue/GeckoChildProcessHost.cpp b/ipc/glue/GeckoChildProcessHost.cpp
index fb0614add302..93d423c8b742 100644
--- a/ipc/glue/GeckoChildProcessHost.cpp
+++ b/ipc/glue/GeckoChildProcessHost.cpp
@@ -327,7 +327,7 @@ typedef AndroidProcessLauncher ProcessLauncher;
 // orthogonal IPC machinery there. Conversely, there are tier-3 non-Linux
 // platforms (BSD and Solaris) where we want the "linux" IPC machinery. So
 // we use MOZ_WIDGET_* to choose the platform backend.
-#  elif defined(MOZ_WIDGET_GTK)
+#  elif defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 class LinuxProcessLauncher : public PosixProcessLauncher {
  public:
   LinuxProcessLauncher(GeckoChildProcessHost* aHost,
@@ -1071,7 +1071,7 @@ void BaseProcessLauncher::MapChildLogging() {
   }
 }
 
-#if defined(MOZ_WIDGET_GTK)
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 bool LinuxProcessLauncher::DoSetup() {
   if (!PosixProcessLauncher::DoSetup()) {
     return false;
diff --git a/layout/base/nsPresContext.cpp b/layout/base/nsPresContext.cpp
index f211e7a7576b..30be2fc985bf 100644
--- a/layout/base/nsPresContext.cpp
+++ b/layout/base/nsPresContext.cpp
@@ -1760,6 +1760,11 @@ void nsPresContext::UserFontSetUpdated(gfxUserFontEntry* aUpdatedFont) {
     return;
   }
 
+  bool usePlatformFontList = true;
+#if defined(MOZ_WIDGET_QT)
+  usePlatformFontList = false;
+#endif
+
   // Note: this method is called without a font when rules in the userfont set
   // are updated.
   //
@@ -1769,7 +1774,7 @@ void nsPresContext::UserFontSetUpdated(gfxUserFontEntry* aUpdatedFont) {
   //
   // TODO(emilio): We could be more granular if we knew which families have
   // potentially changed.
-  if (!aUpdatedFont) {
+  if (!usePlatformFontList || !aUpdatedFont) {
     auto hint =
         UsesExChUnits() ? RestyleHint::RecascadeSubtree() : RestyleHint{0};
     PostRebuildAllStyleDataEvent(NS_STYLE_HINT_REFLOW, hint);
diff --git a/layout/generic/moz.build b/layout/generic/moz.build
index 54e42ddddb15..3a2af52efdd7 100644
--- a/layout/generic/moz.build
+++ b/layout/generic/moz.build
@@ -271,3 +271,7 @@ if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
 
 if CONFIG["CC_TYPE"] in ("clang", "gcc"):
     CXXFLAGS += ["-Wno-error=shadow"]
+
+if CONFIG['MOZ_ENABLE_QT']:
+    CXXFLAGS += CONFIG['MOZ_QT_CFLAGS']
+
diff --git a/netwerk/base/moz.build b/netwerk/base/moz.build
index 64295118f10b..bdf78492bf99 100644
--- a/netwerk/base/moz.build
+++ b/netwerk/base/moz.build
@@ -324,3 +324,12 @@ if CONFIG["MOZ_WIDGET_TOOLKIT"] == "cocoa":
 
 if CONFIG["CC_TYPE"] in ("clang", "gcc"):
     CXXFLAGS += ["-Wno-error=shadow"]
+
+if CONFIG['MOZ_ENABLE_QTNETWORK']:
+    LOCAL_INCLUDES += [
+        '/netwerk/system/qt',
+    ]
+
+if CONFIG['MOZ_ENABLE_QTNETWORK']:
+    CXXFLAGS += CONFIG['MOZ_QT_CFLAGS']
+
diff --git a/netwerk/ipc/NeckoChild.cpp b/netwerk/ipc/NeckoChild.cpp
index b6a91e713461..5b06f27d383e 100644
--- a/netwerk/ipc/NeckoChild.cpp
+++ b/netwerk/ipc/NeckoChild.cpp
@@ -12,7 +12,7 @@
 #include "mozilla/net/HttpChannelChild.h"
 #include "mozilla/net/CookieServiceChild.h"
 #include "mozilla/net/DataChannelChild.h"
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 #  include "mozilla/net/GIOChannelChild.h"
 #endif
 #include "mozilla/net/FileChannelChild.h"
@@ -127,7 +127,7 @@ bool NeckoChild::DeallocPAltDataOutputStreamChild(
   return true;
 }
 
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 PGIOChannelChild* NeckoChild::AllocPGIOChannelChild(
     PBrowserChild* aBrowser, const SerializedLoadContext& aSerialized,
     const GIOChannelCreationArgs& aOpenArgs) {
diff --git a/netwerk/ipc/NeckoChild.h b/netwerk/ipc/NeckoChild.h
index 3a1f187ccaa5..c884569ad888 100644
--- a/netwerk/ipc/NeckoChild.h
+++ b/netwerk/ipc/NeckoChild.h
@@ -38,7 +38,7 @@ class NeckoChild : public PNeckoChild {
 
   PCookieServiceChild* AllocPCookieServiceChild();
   bool DeallocPCookieServiceChild(PCookieServiceChild*);
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   PGIOChannelChild* AllocPGIOChannelChild(
       PBrowserChild* aBrowser, const SerializedLoadContext& aSerialized,
       const GIOChannelCreationArgs& aOpenArgs);
diff --git a/netwerk/ipc/NeckoParent.cpp b/netwerk/ipc/NeckoParent.cpp
index 93551b1c3e9e..fa7612a9abb9 100644
--- a/netwerk/ipc/NeckoParent.cpp
+++ b/netwerk/ipc/NeckoParent.cpp
@@ -17,7 +17,7 @@
 #include "mozilla/net/WebSocketChannelParent.h"
 #include "mozilla/net/WebSocketEventListenerParent.h"
 #include "mozilla/net/DataChannelParent.h"
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 #  include "mozilla/net/GIOChannelParent.h"
 #endif
 #include "mozilla/net/DocumentChannelParent.h"
@@ -358,7 +358,7 @@ mozilla::ipc::IPCResult NeckoParent::RecvPDataChannelConstructor(
   return IPC_OK();
 }
 
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 static already_AddRefed<nsIPrincipal> GetRequestingPrincipal(
     const GIOChannelCreationArgs& aArgs) {
   if (aArgs.type() != GIOChannelCreationArgs::TGIOChannelOpenArgs) {
diff --git a/netwerk/ipc/NeckoParent.h b/netwerk/ipc/NeckoParent.h
index 0300f31091f8..ccf8f22469b5 100644
--- a/netwerk/ipc/NeckoParent.h
+++ b/netwerk/ipc/NeckoParent.h
@@ -138,7 +138,7 @@ class NeckoParent : public PNeckoParent {
 
   virtual mozilla::ipc::IPCResult RecvPDataChannelConstructor(
       PDataChannelParent* aActor, const uint32_t& channelId) override;
-#  ifdef MOZ_WIDGET_GTK
+#  if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   PGIOChannelParent* AllocPGIOChannelParent(
       PBrowserParent* aBrowser, const SerializedLoadContext& aSerialized,
       const GIOChannelCreationArgs& aOpenArgs);
diff --git a/netwerk/ipc/PNecko.ipdl b/netwerk/ipc/PNecko.ipdl
index 2c5e87b93764..a1d242d0ed0e 100644
--- a/netwerk/ipc/PNecko.ipdl
+++ b/netwerk/ipc/PNecko.ipdl
@@ -9,7 +9,7 @@ include protocol PContent;
 include protocol PHttpChannel;
 include protocol PCookieService;
 include protocol PBrowser;
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 include protocol PGIOChannel;
 #endif
 include protocol PWebSocket;
@@ -61,7 +61,7 @@ nested(upto inside_cpow) sync protocol PNecko
   manages PUDPSocket;
   manages PDNSRequest;
   manages PDataChannel;
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   manages PGIOChannel;
 #endif
   manages PSimpleChannel;
@@ -114,7 +114,7 @@ parent:
    * the parent and the child when we're redirecting to a data: URI.
    */
   async PDataChannel(uint32_t channelId);
-#ifdef MOZ_WIDGET_GTK
+#if defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
   async PGIOChannel(nullable PBrowser browser, SerializedLoadContext loadContext, GIOChannelCreationArgs args);
 #endif
   async PSimpleChannel(uint32_t channelId);
diff --git a/netwerk/protocol/moz.build b/netwerk/protocol/moz.build
index e6f62c5fd089..a4be9fd86909 100644
--- a/netwerk/protocol/moz.build
+++ b/netwerk/protocol/moz.build
@@ -5,6 +5,6 @@
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 DIRS += ["about", "data", "file"]
-if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'qt'):
     DIRS += ["gio"]
 DIRS += ["http", "res", "viewsource", "websocket"]
diff --git a/old-configure.in b/old-configure.in
index bf86baaa5313..34a8187e48a7 100644
--- a/old-configure.in
+++ b/old-configure.in
@@ -997,6 +997,7 @@ if test -n "$MOZ_X11"; then
     AC_CHECK_LIB(Xext, XextAddDisplay, [XEXT_LIBS="-lXext"],
         [MISSING_X="$MISSING_X -lXext"], $XLIBS)
 
+    if test "$MOZ_WIDGET_TOOLKIT" != qt; then
     AC_CHECK_LIB(Xt, XtFree, [ XT_LIBS="-lXt"], [
         unset ac_cv_lib_Xt_XtFree
         AC_CHECK_LIB(ICE, IceFlush, [XT_LIBS="-lICE $XT_LIBS"],, $XT_LIBS $XLIBS)
@@ -1004,6 +1005,7 @@ if test -n "$MOZ_X11"; then
         AC_CHECK_LIB(Xt, XtFree, [ XT_LIBS="-lXt $XT_LIBS"],
             [MISSING_X="$MISSING_X -lXt"], $X_PRE_LIBS $XT_LIBS $XLIBS)
         ])
+    fi
 
     dnl ========================================================
     dnl = Check for xcb
@@ -1538,6 +1540,12 @@ dnl ========================================================
 
 case "$MOZ_WIDGET_TOOLKIT" in
 
+qt)
+    MOZ_ENABLE_QT=1
+
+    AC_DEFINE(QT_NO_KEYWORDS)
+    ;;
+
 cocoa)
     LDFLAGS="$LDFLAGS -framework Cocoa"
     # Use -Wl as a trick to avoid -framework and framework names from
@@ -1592,9 +1600,174 @@ fi # COMPILE_ENVIRONMENT
 
 AC_SUBST(MOZ_FS_LAYOUT)
 
+dnl ========================================================
+dnl = QT support
+dnl ========================================================
+if test "$MOZ_ENABLE_QT"
+then
+    MOZ_ARG_WITH_STRING(qtdir,
+    [  --with-qtdir=\$dir       Specify Qt directory ],
+    [ QTDIR=$withval])
+
+    if test -z "$QTDIR"; then
+        AC_CHECK_PROGS(HOST_QMAKE, $HOST_QMAKE qmake, "")
+    else
+        HOST_QMAKE="$QTDIR/bin/qmake"
+    fi
+    QT_VERSION=`$HOST_QMAKE -v | grep 'Using Qt version' | egrep -o '[[0-9]]+\.[[0-9]]+\.[[0-9]]+'`
+
+    if test -z "$QTDIR"; then
+        case $QT_VERSION in
+        5.*)
+            AC_MSG_RESULT("Using qt5: $QT_VERSION")
+            PKG_CHECK_MODULES(MOZ_QT, Qt5Gui Qt5Network Qt5Core Qt5Quick, ,
+            [
+              AC_MSG_ERROR([$MOZ_QT_PKG_ERRORS Need qtbase development packages, (On Ubuntu, you might try installing the packages qtbase5-dev libqt5opengl5-dev.)])
+            ])
+            QT5INCDIR=`pkg-config --variable=includedir Qt5Gui`
+            MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QT5INCDIR/QtGui/$QT_VERSION/QtGui"
+            if test "$NS_PRINTING"; then
+                PKG_CHECK_MODULES(MOZ_QT_WIDGETS, Qt5PrintSupport, ,
+                [
+                  AC_MSG_ERROR([$MOZ_QT_PKG_ERRORS Need qt5 printsupport development package])
+                ])
+                MOZ_QT_LIBS="$MOZ_QT_LIBS $MOZ_QT_WIDGETS_LIBS"
+                MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS $MOZ_QT_WIDGETS_CFLAGS"
+            fi
+            ;;
+        *)
+            AC_MSG_ERROR([* * * Unsupported Qt Version: $QT_VERSION])
+            ;;
+        esac
+
+        AC_CHECK_PROGS(HOST_MOC, $MOC moc, "")
+        AC_CHECK_PROGS(HOST_RCC, $RCC rcc, "")
+    else
+        MOZ_QT_CFLAGS="-DQT_SHARED"
+        MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include"
+        MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtGui"
+        MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtCore"
+        MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtNetwork"
+        MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtXml"
+        MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtDeclarative"
+        case $QT_VERSION in
+        5.*)
+            AC_MSG_RESULT("Using qt5: $QT_VERSION")
+            MOZ_QT_LIBS="$MOZ_QT_LIBS -L$QTDIR/lib/ -lQt5Gui -lQt5Network -lQt5Core -lQt5Xml"
+            MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtGui/$QT_VERSION/QtGui"
+            if test "$NS_PRINTING"; then
+                MOZ_QT_LIBS="$MOZ_QT_LIBS -lQt5Widgets -lQt5PrintSupport"
+                MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtPrintSupport"
+            fi
+            ;;
+        *)
+            AC_MSG_ERROR([* * * Unsupported Qt Version: $QT_VERSION])
+            ;;
+        esac
+
+        HOST_MOC="$QTDIR/bin/moc"
+        HOST_RCC="$QTDIR/bin/rcc"
+    fi
+    if test -z "$HOST_MOC"; then
+        AC_MSG_ERROR([No acceptable moc preprocessor found. Qt SDK is not installed or --with-qt is incorrect])
+    fi
+    if test -z "$HOST_RCC"; then
+        AC_MSG_ERROR([No acceptable rcc preprocessor found. Qt SDK is not installed or --with-qt is incorrect])
+    fi
+
+    MOC=$HOST_MOC
+    RCC=$HOST_RCC
+
+    MOZ_ENABLE_QMSYSTEM2=
+    PKG_CHECK_MODULES(_QMSYSTEM2, qmsystem2,
+                      MOZ_ENABLE_QMSYSTEM2=1,
+                      MOZ_ENABLE_QMSYSTEM2=)
+
+    if test "$MOZ_ENABLE_QMSYSTEM2"; then
+      MOZ_ENABLE_QMSYSTEM2=1
+      MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS $_QMSYSTEM2_CFLAGS"
+      MOZ_QT_LIBS="$MOZ_QT_LIBS $_QMSYSTEM2_LIBS"
+      AC_DEFINE(MOZ_ENABLE_QMSYSTEM2)
+    fi
+
+    MOZ_ENABLE_QTNETWORK=
+    PKG_CHECK_MODULES(_QTNETWORK, QtNetwork >= 4.7,
+                      MOZ_ENABLE_QTNETWORK=1,
+                      MOZ_ENABLE_QTNETWORK=)
+
+    if test "$MOZ_ENABLE_QTNETWORK"; then
+      MOZ_ENABLE_QTNETWORK=1
+      AC_DEFINE(MOZ_ENABLE_QTNETWORK)
+    fi
+
+    MOZ_ENABLE_QTMOBILITY=
+    PKG_CHECK_MODULES(_QTMOBILITY, QtSensors QtFeedback QtLocation,
+                      MOZ_ENABLE_QTMOBILITY=1,
+                      MOZ_ENABLE_QTMOBILITY=)
+    if test "$MOZ_ENABLE_QTMOBILITY"; then
+       MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS $_QTMOBILITY_CFLAGS"
+       MOZ_QT_LIBS="$MOZ_QT_LIBS $_QTMOBILITY_LIBS"
+    else
+       AC_CHECK_LIB(QtSensors, main, [
+          MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtMobility"
+          MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtSensors"
+          MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtFeedback"
+          MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS -I$QTDIR/include/QtLocation"
+          MOZ_QT_LIBS="$MOZ_QT_LIBS -lQtSensors -lQtFeedback -lQtLocation"
+       ])
+    fi
+
+    MOZ_ENABLE_QT5FEEDBACK=
+    PKG_CHECK_MODULES(_QT5FEEDBACK, Qt0Feedback,
+                      MOZ_ENABLE_QT5FEEDBACK=1,
+                      MOZ_ENABLE_QT5FEEDBACK=)
+    if test "$MOZ_ENABLE_QT5FEEDBACK"; then
+       MOZ_ENABLE_QT5FEEDBACK=1
+       MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS $_QT5FEEDBACK_CFLAGS"
+       MOZ_QT_LIBS="$MOZ_QT_LIBS $_QT5FEEDBACK_LIBS"
+       AC_DEFINE(MOZ_ENABLE_QT5FEEDBACK)
+       AC_SUBST(MOZ_ENABLE_QT5FEEDBACK)
+    fi
+
+    MOZ_ENABLE_QT5GEOPOSITION=
+    PKG_CHECK_MODULES(_QT5GEOPOSITION, Qt5Positioning,
+                      MOZ_ENABLE_QT5GEOPOSITION=1,
+                      MOZ_ENABLE_QT5GEOPOSITION=)
+    if test "$MOZ_ENABLE_QT5GEOPOSITION"; then
+       MOZ_ENABLE_QT5GEOPOSITION=1
+       MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS $_QT5GEOPOSITION_CFLAGS"
+       MOZ_QT_LIBS="$MOZ_QT_LIBS $_QT5GEOPOSITION_LIBS"
+       AC_DEFINE(MOZ_ENABLE_QT5GEOPOSITION)
+       AC_SUBST(MOZ_ENABLE_QT5GEOPOSITION)
+    fi
+
+    if test "$MOZ_ENABLE_CONTENTACTION"; then
+      MOZ_ENABLE_CONTENTACTION=1
+      AC_DEFINE(MOZ_ENABLE_CONTENTACTION)
+    fi
+
+    MOZ_ENABLE_CONTENTACTION=
+    PKG_CHECK_MODULES(LIBCONTENTACTION, contentaction-0.1, _LIB_FOUND=1, _LIB_FOUND=)
+    if test "$MOZ_ENABLE_CONTENTACTION"; then
+       MOZ_ENABLE_CONTENTACTION=1
+       MOZ_QT_CFLAGS="$MOZ_QT_CFLAGS $_CONTENTACTION_CFLAGS"
+       MOZ_QT_LIBS="$MOZ_QT_LIBS $_CONTENTACTION_LIBS"
+       AC_DEFINE(MOZ_ENABLE_CONTENTACTION)
+       AC_SUBST(MOZ_ENABLE_CONTENTACTION)
+    fi
+    TK_CFLAGS=$MOZ_QT_CFLAGS
+    TK_LIBS=$MOZ_QT_LIBS
+fi
+
 AC_SUBST_LIST(TK_CFLAGS)
 AC_SUBST_LIST(TK_LIBS)
 
+AC_SUBST(MOZ_ENABLE_QT)
+AC_SUBST(MOZ_ENABLE_QTNETWORK)
+AC_SUBST(MOZ_ENABLE_QMSYSTEM2)
+AC_SUBST_LIST(MOZ_QT_CFLAGS)
+AC_SUBST_LIST(MOZ_QT_LIBS)
+
 dnl ========================================================
 dnl =
 dnl = Components & Features
@@ -1647,7 +1820,7 @@ dnl ========================================================
 dnl = libproxy support
 dnl ========================================================
 
-if test "$MOZ_ENABLE_GTK"
+if test "$MOZ_ENABLE_GTK" -o "$MOZ_ENABLE_QT"
 then
     MOZ_ENABLE_LIBPROXY=
 
@@ -1668,7 +1841,7 @@ dnl ========================================================
 dnl = dbus support
 dnl ========================================================
 
-if test "$MOZ_ENABLE_GTK"
+if test "$MOZ_ENABLE_GTK" -o "$MOZ_ENABLE_QT"
 then
     MOZ_ENABLE_DBUS=1
 
@@ -2226,7 +2399,7 @@ dnl ========================================================
 
 if test -z "$SKIP_PATH_CHECKS"; then
 if test -z "${GLIB_CFLAGS}" -o -z "${GLIB_LIBS}" ; then
-    if test "$MOZ_ENABLE_GTK" ; then
+    if test "$MOZ_ENABLE_GTK" -o "$MOZ_ENABLE_QT"; then
         PKG_CHECK_MODULES(GLIB, glib-2.0 >= 1.3.7 gobject-2.0)
     fi
 fi
@@ -2336,6 +2509,9 @@ if test "$_HAVE_FREETYPE2"; then
 fi
 
 case "$MOZ_WIDGET_TOOLKIT" in
+  qt)
+    QT_SURFACE_FEATURE="#define CAIRO_HAS_QT_SURFACE 1"
+    ;;
   cocoa | uikit)
     QUARTZ_SURFACE_FEATURE="#define CAIRO_HAS_QUARTZ_SURFACE 1"
     QUARTZ_IMAGE_SURFACE_FEATURE="#define CAIRO_HAS_QUARTZ_IMAGE_SURFACE 1"
diff --git a/python/mozbuild/mozbuild/mach_commands.py b/python/mozbuild/mozbuild/mach_commands.py
index a5d518d7dd80..e8d867fdb1c8 100644
--- a/python/mozbuild/mozbuild/mach_commands.py
+++ b/python/mozbuild/mozbuild/mach_commands.py
@@ -2358,15 +2358,15 @@ class CreateMachEnvironment(MachCommandBase):
 
         # This can fail on some platforms. See
         # https://bugzilla.mozilla.org/show_bug.cgi?id=1660120
-        try:
-            manager.install_pip_requirements(
-                os.path.join(self.topsrcdir, "build", "glean_requirements.txt")
-            )
-        except subprocess.CalledProcessError:
-            print(
-                "Could not install glean_sdk, so telemetry will not be "
-                "collected. Continuing."
-            )
+#        try:
+#            manager.install_pip_requirements(
+#                os.path.join(self.topsrcdir, "build", "glean_requirements.txt")
+#            )
+#        except subprocess.CalledProcessError:
+#            print(
+#                "Could not install glean_sdk, so telemetry will not be "
+#                "collected. Continuing."
+#            )
         print("Mach environment created.")
 
 
diff --git a/toolkit/library/moz.build b/toolkit/library/moz.build
index bf771ca044bb..35bd9b8e9d79 100644
--- a/toolkit/library/moz.build
+++ b/toolkit/library/moz.build
@@ -184,7 +184,9 @@ if CONFIG["MOZ_JPROF"]:
         "jprof",
     ]
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk" or CONFIG["MOZ_TREE_FREETYPE"]:
+if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gtk' or CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt' or \
+         CONFIG['MOZ_TREE_FREETYPE']:
+
     USE_LIBS += [
         "freetype",
     ]
@@ -299,6 +301,13 @@ if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
         "gthread-2.0",
     ]
 
+if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    OS_LIBS += CONFIG['XLDFLAGS']
+    OS_LIBS += CONFIG['XLIBS']
+    OS_LIBS += CONFIG['XT_LIBS']
+    OS_LIBS += CONFIG['MOZ_QT_LIBS']
+    OS_LIBS += CONFIG['MOZ_PANGO_LIBS']
+
 if CONFIG["MOZ_ENABLE_LIBPROXY"]:
     OS_LIBS += CONFIG["MOZ_LIBPROXY_LIBS"]
 
@@ -358,6 +367,9 @@ if CONFIG["OS_ARCH"] == "WINNT":
             "oleacc",
         ]
 
+if CONFIG['MOZ_ENABLE_QT']:
+    OS_LIBS += CONFIG['XEXT_LIBS']
+
     # Prevent winapi-rs from statically linking
     LIBRARY_DEFINES["WINAPI_NO_BUNDLED_LIBRARIES"] = True
 
diff --git a/toolkit/modules/AppConstants.jsm b/toolkit/modules/AppConstants.jsm
index 9b3acf6ecc30..3a667f2e9df8 100644
--- a/toolkit/modules/AppConstants.jsm
+++ b/toolkit/modules/AppConstants.jsm
@@ -157,6 +157,8 @@ this.AppConstants = Object.freeze({
   platform:
 #ifdef MOZ_WIDGET_GTK
   "linux",
+#elif MOZ_WIDGET_QT
+  "linux",
 #elif XP_WIN
   "win",
 #elif XP_MACOSX
diff --git a/toolkit/moz.build b/toolkit/moz.build
index 14f4638b693e..310b0746b462 100644
--- a/toolkit/moz.build
+++ b/toolkit/moz.build
@@ -42,7 +42,7 @@ DIRS += ["xre"]
 
 if CONFIG["MOZ_WIDGET_TOOLKIT"] != "android":
     DIRS += ["mozapps/handling"]
-if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'qt'):
     DIRS += ["system/unixproxy"]
 elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "cocoa":
     DIRS += ["system/osxproxy"]
diff --git a/toolkit/moz.configure b/toolkit/moz.configure
index 026e7fa7ba51..f99be3fe07b4 100644
--- a/toolkit/moz.configure
+++ b/toolkit/moz.configure
@@ -265,8 +265,7 @@ def toolkit_choices(target):
     elif target.os == "Android":
         return ("cairo-android",)
     else:
-        return ("cairo-gtk3", "cairo-gtk3-wayland")
-
+        return ('cairo-gtk3', 'cairo-gtk3-wayland', 'cairo-qt')
 
 @depends(toolkit_choices)
 def toolkit_default(choices):
@@ -385,7 +384,7 @@ set_define(gl_provider_define, True)
 # ==============================================================
 @depends(toolkit)
 def pdf_printing(toolkit):
-    if toolkit in ("windows", "gtk", "android"):
+    if toolkit in ('windows', 'gtk', 'android', 'qt'):
         return True
 
 
@@ -426,7 +425,8 @@ option(env="USE_FC_FREETYPE", help="Force-enable the use of fontconfig freetype"
 
 @depends("USE_FC_FREETYPE", toolkit)
 def fc_freetype(value, toolkit):
-    if value or (toolkit == "gtk" and value.origin == "default"):
+    if value or (toolkit in ('gtk', 'qt') and
+                 value.origin == 'default'):
         return True
 
 
diff --git a/toolkit/themes/moz.build b/toolkit/themes/moz.build
index ac0a9798bb39..b534a0c5bdf9 100644
--- a/toolkit/themes/moz.build
+++ b/toolkit/themes/moz.build
@@ -20,7 +20,7 @@ app = CONFIG["MOZ_BUILD_APP"]
 
 if toolkit == "cocoa":
     DIRS += ["osx"]
-elif toolkit == "gtk":
+elif toolkit in ('gtk', 'qt'):
     DIRS += ["linux"]
 elif app == "mobile/android":
     DIRS += ["mobile"]
diff --git a/toolkit/xre/moz.build b/toolkit/xre/moz.build
index 90d06481ee9e..8bc8a0c5bc74 100644
--- a/toolkit/xre/moz.build
+++ b/toolkit/xre/moz.build
@@ -97,6 +97,13 @@ elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "uikit":
         "nsNativeAppSupportDefault.cpp",
         "UIKitDirProvider.mm",
     ]
+elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    EXPORTS += ['nsQAppInstance.h']
+    SOURCES += [
+        '!moc_nsNativeAppSupportQt.cpp',
+        'nsNativeAppSupportQt.cpp',
+        'nsQAppInstance.cpp',
+    ]
 elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
     UNIFIED_SOURCES += [
         "nsNativeAppSupportUnix.cpp",
diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
index d3bb8096ad02..345f85fed95a 100644
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -3,6 +3,12 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#if defined(MOZ_WIDGET_QT)
+#include <QGuiApplication>
+#include <QStringList>
+#include "nsQAppInstance.h"
+#endif // MOZ_WIDGET_QT
+
 #include "mozilla/dom/ContentParent.h"
 #include "mozilla/dom/ContentChild.h"
 #include "mozilla/ipc/GeckoChildProcessHost.h"
@@ -300,6 +306,11 @@ bool gIsGtest = false;
 
 nsString gAbsoluteArgv0Path;
 
+#ifdef MOZ_WIDGET_QT
+static int    gQtOnlyArgc;
+static char **gQtOnlyArgv;
+#endif
+
 #if defined(XP_WIN)
 nsString gProcessStartupShortcut;
 #endif
@@ -2219,8 +2230,14 @@ nsresult LaunchChild(bool aBlankCommandLine, bool aTryExec) {
 #endif
 
   if (aBlankCommandLine) {
+#if defined(MOZ_WIDGET_QT)
+    // Remove only arguments not given to Qt
+    gRestartArgc = gQtOnlyArgc;
+    gRestartArgv = gQtOnlyArgv;
+#else
     gRestartArgc = 1;
     gRestartArgv[gRestartArgc] = nullptr;
+#endif
   }
 
   SaveToEnv("MOZ_LAUNCHED_CHILD=1");
@@ -4255,6 +4272,25 @@ int XREMain::XRE_mainStartup(bool* aExitFlag) {
   }
 #endif /* XP_WIN */
 
+#if defined(MOZ_WIDGET_QT)
+  nsQAppInstance::AddRef(gArgc, gArgv, true);
+
+  QStringList nonQtArguments = qApp->arguments();
+  gQtOnlyArgc = 1;
+  gQtOnlyArgv = (char**) malloc(sizeof(char*)
+                * (gRestartArgc - nonQtArguments.size() + 2));
+
+  // copy binary path
+  gQtOnlyArgv[0] = gRestartArgv[0];
+
+  for (int i = 1; i < gRestartArgc; ++i) {
+    if (!nonQtArguments.contains(gRestartArgv[i])) {
+      // copy arguments used by Qt for later
+      gQtOnlyArgv[gQtOnlyArgc++] = gRestartArgv[i];
+    }
+  }
+  gQtOnlyArgv[gQtOnlyArgc] = nullptr;
+#endif
 #if defined(MOZ_WIDGET_GTK)
   // setup for private colormap.  Ideally we'd like to do this
   // in nsAppShell::Create, but we need to get in before gtk
@@ -5459,6 +5495,10 @@ int XREMain::XRE_main(int argc, char* argv[], const BootstrapConfig& aConfig) {
   mProfileLock->Unlock();
   gProfileLock = nullptr;
 
+#if defined(MOZ_WIDGET_QT)
+  nsQAppInstance::Release();
+#endif
+
   gLastAppVersion.Truncate();
   gLastAppBuildID.Truncate();
 
diff --git a/toolkit/xre/nsEmbedFunctions.cpp b/toolkit/xre/nsEmbedFunctions.cpp
index 82f5f640447e..32691e9967c8 100644
--- a/toolkit/xre/nsEmbedFunctions.cpp
+++ b/toolkit/xre/nsEmbedFunctions.cpp
@@ -4,6 +4,10 @@
 
 #include "mozilla/DebugOnly.h"
 
+#if defined(MOZ_WIDGET_QT)
+#include "nsQAppInstance.h"
+#endif
+
 #include "nsXULAppAPI.h"
 
 #include <stdlib.h>
@@ -549,6 +553,10 @@ nsresult XRE_InitChildProcess(int aArgc, char* aArgv[],
   g_set_prgname(aArgv[0]);
 #endif
 
+#if defined(MOZ_WIDGET_QT)
+  nsQAppInstance::AddRef();
+#endif
+
 #ifdef OS_POSIX
   if (PR_GetEnv("MOZ_DEBUG_CHILD_PROCESS") ||
       PR_GetEnv("MOZ_DEBUG_CHILD_PAUSE")) {
diff --git a/toolkit/xre/nsNativeAppSupportQt.cpp b/toolkit/xre/nsNativeAppSupportQt.cpp
new file mode 100644
index 000000000000..98ea4805e725
--- /dev/null
+++ b/toolkit/xre/nsNativeAppSupportQt.cpp
@@ -0,0 +1,118 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <stdlib.h>
+#include <QTimer>
+#include "mozilla/ipc/GeckoChildProcessHost.h"
+#include "nsNativeAppSupportQt.h"
+#include "nsCOMPtr.h"
+#include "nsIObserverService.h"
+#include "mozilla/Services.h"
+
+#ifdef MOZ_ENABLE_QMSYSTEM2
+void
+nsNativeAppSupportQt::activityChanged(MeeGo::QmActivity::Activity activity)
+{
+    nsCOMPtr<nsIObserverService> os = mozilla::services::GetObserverService();
+    if (!os)
+        return;
+
+    if (MeeGo::QmActivity::Inactive == activity) {
+        os->NotifyObservers(nullptr, "system-idle", nullptr);
+    } else {
+        os->NotifyObservers(nullptr, "system-active", nullptr);
+    }
+}
+
+void
+nsNativeAppSupportQt::displayStateChanged(MeeGo::QmDisplayState::DisplayState state)
+{
+    nsCOMPtr<nsIObserverService> os = mozilla::services::GetObserverService();
+    if (!os)
+        return;
+
+    switch (state) {
+    case MeeGo::QmDisplayState::On:
+        os->NotifyObservers(nullptr, "system-display-on", nullptr);
+        break;
+    case MeeGo::QmDisplayState::Off:
+        os->NotifyObservers(nullptr, "system-display-off", nullptr);
+        break;
+    case MeeGo::QmDisplayState::Dimmed:
+        os->NotifyObservers(nullptr, "system-display-dimmed", nullptr);
+        break;
+    default:
+        NS_WARNING("Unknown display state");
+        break;
+    }
+}
+
+void nsNativeAppSupportQt::deviceModeChanged(MeeGo::QmDeviceMode::DeviceMode mode)
+{
+    nsCOMPtr<nsIObserverService> os = mozilla::services::GetObserverService();
+    if (!os)
+        return;
+
+    switch (mode) {
+    case MeeGo::QmDeviceMode::DeviceMode::Normal:
+        os->NotifyObservers(nullptr, "profile-change-net-restore", nullptr);
+        break;
+    case MeeGo::QmDeviceMode::DeviceMode::Flight:
+        os->NotifyObservers(nullptr, "profile-change-net-teardown", nullptr);
+        break;
+    case MeeGo::QmDeviceMode::DeviceMode::Error:
+    default:
+        NS_WARNING("Unknown DeviceMode");
+        break;
+    }
+}
+
+void nsNativeAppSupportQt::RefreshStates()
+{
+  activityChanged(mActivity.get());
+  displayStateChanged(mDisplayState.get());
+  deviceModeChanged(mDeviceMode.getMode());
+}
+#endif
+
+NS_IMETHODIMP
+nsNativeAppSupportQt::Start(bool* aRetVal)
+{
+  NS_ASSERTION(gAppData, "gAppData must not be null.");
+
+#ifdef MOZ_ENABLE_QMSYSTEM2
+  connect(&mActivity, SIGNAL(activityChanged(MeeGo::QmActivity::Activity)), this, SLOT(activityChanged(MeeGo::QmActivity::Activity)));
+  connect(&mDeviceMode, SIGNAL(deviceModeChanged(MeeGo::QmDeviceMode::DeviceMode)), this, SLOT(deviceModeChanged(MeeGo::QmDeviceMode::DeviceMode)));
+  connect(&mDisplayState, SIGNAL(displayStateChanged(MeeGo::QmDisplayState::DisplayState)), this, SLOT(displayStateChanged(MeeGo::QmDisplayState::DisplayState)));
+  // Init states withing next event loop iteration
+  QTimer::singleShot(0, this, SLOT(RefreshStates()));
+#endif
+
+  *aRetVal = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsNativeAppSupportQt::Stop(bool* aResult)
+{
+  NS_ENSURE_ARG(aResult);
+  *aResult = true;
+
+  return NS_OK;
+}
+
+nsresult
+NS_CreateNativeAppSupport(nsINativeAppSupport** aResult)
+{
+  nsNativeAppSupportBase* native = new nsNativeAppSupportQt();
+  if (!native)
+    return NS_ERROR_OUT_OF_MEMORY;
+
+  *aResult = native;
+  NS_ADDREF(*aResult);
+
+  return NS_OK;
+}
diff --git a/toolkit/xre/nsNativeAppSupportQt.h b/toolkit/xre/nsNativeAppSupportQt.h
new file mode 100644
index 000000000000..b55db36a5dee
--- /dev/null
+++ b/toolkit/xre/nsNativeAppSupportQt.h
@@ -0,0 +1,37 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <stdlib.h>
+#include <QObject>
+#ifdef MOZ_ENABLE_QMSYSTEM2
+#include "qmdevicemode.h"
+#include "qmdisplaystate.h"
+#include "qmactivity.h"
+#endif
+#include "nsNativeAppSupportBase.h"
+#include "nsString.h"
+
+class nsNativeAppSupportQt : public QObject, public nsNativeAppSupportBase
+{
+  Q_OBJECT
+public:
+  NS_IMETHOD Start(bool* aRetVal);
+  NS_IMETHOD Stop(bool* aResult);
+
+#ifdef MOZ_ENABLE_QMSYSTEM2
+public Q_SLOTS:
+  void activityChanged(MeeGo::QmActivity::Activity activity);
+  void deviceModeChanged(MeeGo::QmDeviceMode::DeviceMode mode);
+  void displayStateChanged(MeeGo::QmDisplayState::DisplayState state);
+  void RefreshStates();
+
+private:
+  MeeGo::QmDeviceMode mDeviceMode;
+  MeeGo::QmDisplayState mDisplayState;
+  MeeGo::QmActivity mActivity;
+#endif
+};
+
diff --git a/toolkit/xre/nsQAppInstance.cpp b/toolkit/xre/nsQAppInstance.cpp
new file mode 100644
index 000000000000..79f0d79e1228
--- /dev/null
+++ b/toolkit/xre/nsQAppInstance.cpp
@@ -0,0 +1,31 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <QGuiApplication>
+#include "nsQAppInstance.h"
+#include "prenv.h"
+#include "nsXPCOMPrivate.h"
+#include <stdlib.h>
+
+QGuiApplication *nsQAppInstance::sQAppInstance = nullptr;
+int nsQAppInstance::sQAppRefCount = 0;
+
+void nsQAppInstance::AddRef(int& aArgc, char** aArgv, bool aDefaultProcess) {
+  if (qApp)
+    return;
+  if (!sQAppInstance) {
+    mozilla::SetICUMemoryFunctions();
+    sQAppInstance = new QGuiApplication(aArgc, aArgv);
+  }
+  sQAppRefCount++;
+}
+
+void nsQAppInstance::Release(void) {
+  if (sQAppInstance && !--sQAppRefCount) {
+    delete sQAppInstance;
+    sQAppInstance = nullptr;
+  }
+}
diff --git a/toolkit/xre/nsQAppInstance.h b/toolkit/xre/nsQAppInstance.h
new file mode 100644
index 000000000000..52e6a8ce2fa9
--- /dev/null
+++ b/toolkit/xre/nsQAppInstance.h
@@ -0,0 +1,28 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsQAppInstance_h
+#define nsQAppInstance_h
+
+// declared in nsAppRunner.cpp
+extern int    gArgc;
+extern char **gArgv;
+
+class QGuiApplication;
+class nsQAppInstance
+{
+public:
+  static void AddRef(int& aArgc = gArgc,
+                     char** aArgv = gArgv,
+                     bool aDefaultProcess = false);
+  static void Release(void);
+
+private:
+  static QGuiApplication *sQAppInstance;
+  static int sQAppRefCount;
+};
+
+#endif /* nsQAppInstance_h */
diff --git a/uriloader/exthandler/moz.build b/uriloader/exthandler/moz.build
index a5f1382cef81..a4ba118b9cfa 100644
--- a/uriloader/exthandler/moz.build
+++ b/uriloader/exthandler/moz.build
@@ -92,6 +92,14 @@ elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "android":
     UNIFIED_SOURCES += [
         "android/nsMIMEInfoAndroid.cpp",
     ]
+elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
+    SOURCES += [
+        'unix/nsMIMEInfoQt.cpp',
+    ]
+    UNIFIED_SOURCES += [
+        'unix/nsGNOMERegistry.cpp',
+        'unix/nsMIMEInfoUnix.cpp',
+    ]
 elif CONFIG["MOZ_WIDGET_TOOLKIT"] == "windows":
     UNIFIED_SOURCES += [
         "win/nsMIMEInfoWin.cpp",
@@ -139,6 +147,6 @@ if CONFIG["MOZ_ENABLE_DBUS"]:
     CXXFLAGS += CONFIG["TK_CFLAGS"]
     CXXFLAGS += CONFIG["MOZ_DBUS_CFLAGS"]
 
-if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
+if CONFIG['MOZ_WIDGET_TOOLKIT'] in ('gtk', 'qt'):
     CXXFLAGS += CONFIG["TK_CFLAGS"]
     CXXFLAGS += CONFIG["MOZ_DBUS_GLIB_CFLAGS"]
diff --git a/uriloader/exthandler/unix/nsMIMEInfoQt.cpp b/uriloader/exthandler/unix/nsMIMEInfoQt.cpp
new file mode 100644
index 000000000000..72020064660e
--- /dev/null
+++ b/uriloader/exthandler/unix/nsMIMEInfoQt.cpp
@@ -0,0 +1,30 @@
+/* -*- Mode: C++; tab-width: 3; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifdef MOZ_WIDGET_QT
+#include <QDesktopServices>
+#include <QUrl>
+#include <QString>
+#include <QStringList>
+#endif
+
+#include "nsMIMEInfoQt.h"
+#include "nsIURI.h"
+#include "nsString.h"
+
+nsresult
+nsMIMEInfoQt::LoadUriInternal(nsIURI * aURI)
+{
+#ifdef MOZ_WIDGET_QT
+  nsAutoCString spec;
+  aURI->GetAsciiSpec(spec);
+  if (QDesktopServices::openUrl(QUrl(spec.get()))) {
+    return NS_OK;
+  }
+#endif
+
+  return NS_ERROR_FAILURE;
+}
diff --git a/uriloader/exthandler/unix/nsMIMEInfoQt.h b/uriloader/exthandler/unix/nsMIMEInfoQt.h
new file mode 100644
index 000000000000..35df6b6aa162
--- /dev/null
+++ b/uriloader/exthandler/unix/nsMIMEInfoQt.h
@@ -0,0 +1,20 @@
+/* -*- Mode: C++; tab-width: 3; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsMIMEInfoQt_h_
+#define nsMIMEInfoQt_h_
+
+#include "nsCOMPtr.h"
+
+class nsIURI;
+
+class nsMIMEInfoQt
+{
+public:
+  static nsresult LoadUriInternal(nsIURI * aURI);
+};
+
+#endif // nsMIMEInfoQt_h_
diff --git a/uriloader/exthandler/unix/nsMIMEInfoUnix.cpp b/uriloader/exthandler/unix/nsMIMEInfoUnix.cpp
index 7cbefcce3e94..c2031408b5c1 100644
--- a/uriloader/exthandler/unix/nsMIMEInfoUnix.cpp
+++ b/uriloader/exthandler/unix/nsMIMEInfoUnix.cpp
@@ -4,6 +4,13 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#ifdef MOZ_WIDGET_QT
+#if (MOZ_ENABLE_CONTENTACTION)
+#include <contentaction/contentaction.h>
+#include "nsContentHandlerApp.h"
+#endif
+#endif
+
 #include "nsMIMEInfoUnix.h"
 #include "nsGNOMERegistry.h"
 #include "nsIGIOService.h"
@@ -12,9 +19,20 @@
 #ifdef MOZ_ENABLE_DBUS
 #  include "nsDBusHandlerApp.h"
 #endif
+#ifdef MOZ_WIDGET_QT
+#  include "nsMIMEInfoQt.h"
+#endif
 
 nsresult nsMIMEInfoUnix::LoadUriInternal(nsIURI* aURI) {
-  return nsGNOMERegistry::LoadURL(aURI);
+  nsresult rv = nsGNOMERegistry::LoadURL(aURI);
+
+#ifdef MOZ_WIDGET_QT
+  if (NS_FAILED(rv)) {
+    rv = nsMIMEInfoQt::LoadUriInternal(aURI);
+  }
+#endif
+
+  return rv;
 }
 
 NS_IMETHODIMP
diff --git a/widget/NativeKeyToDOMCodeName.h b/widget/NativeKeyToDOMCodeName.h
index 80f89d414b93..5a9871dfdcd1 100644
--- a/widget/NativeKeyToDOMCodeName.h
+++ b/widget/NativeKeyToDOMCodeName.h
@@ -36,7 +36,7 @@
 #  define CODE_MAP_MAC(aCPPCodeName, aNativeKey)     \
     NS_NATIVE_KEY_TO_DOM_CODE_NAME_INDEX(aNativeKey, \
                                          CODE_NAME_INDEX_##aCPPCodeName)
-#elif defined(MOZ_WIDGET_GTK)
+#elif defined(MOZ_WIDGET_GTK) || defined(MOZ_WIDGET_QT)
 #  undef CODE_MAP_X11
 // aNativeKey is hardware_keycode of GDKEvent or nativeScanCode of QKeyEvent.
 #  define CODE_MAP_X11(aCPPCodeName, aNativeKey)     \
diff --git a/widget/NativeKeyToDOMKeyName.h b/widget/NativeKeyToDOMKeyName.h
index c9c1623217b8..449895f61a33 100644
--- a/widget/NativeKeyToDOMKeyName.h
+++ b/widget/NativeKeyToDOMKeyName.h
@@ -25,6 +25,8 @@
 #define KEY_MAP_COCOA(aCPPKeyName, aNativeKey)
 // GTK
 #define KEY_MAP_GTK(aCPPKeyName, aNativeKey)
+// Qt
+#define KEY_MAP_QT(aCPPKeyName, aNativeKey)
 // Only for Android
 #define KEY_MAP_ANDROID(aCPPKeyName, aNativeKey)
 
@@ -75,6 +77,11 @@
 #  define KEY_MAP_GTK(aCPPKeyName, aNativeKey)      \
     NS_NATIVE_KEY_TO_DOM_KEY_NAME_INDEX(aNativeKey, \
                                         KEY_NAME_INDEX_##aCPPKeyName)
+#elif defined(MOZ_WIDGET_QT)
+#  undef KEY_MAP_QT
+#  define KEY_MAP_QT(aCPPKeyName, aNativeKey) \
+    NS_NATIVE_KEY_TO_DOM_KEY_NAME_INDEX(aNativeKey, \
+                                        KEY_NAME_INDEX_##aCPPKeyName)
 #elif defined(ANDROID)
 #  undef KEY_MAP_ANDROID
 #  define KEY_MAP_ANDROID(aCPPKeyName, aNativeKey)  \
@@ -94,6 +101,7 @@ KEY_MAP_COCOA(Alt, kVK_Option)
 KEY_MAP_COCOA(Alt, kVK_RightOption)
 KEY_MAP_GTK(Alt, GDK_Alt_L)
 KEY_MAP_GTK(Alt, GDK_Alt_R)
+KEY_MAP_QT(Alt, Qt::Key_Alt)
 KEY_MAP_ANDROID(Alt, AKEYCODE_ALT_LEFT)
 KEY_MAP_ANDROID(Alt, AKEYCODE_ALT_RIGHT)
 
@@ -110,11 +118,14 @@ KEY_MAP_GTK(AltGraph, GDK_ISO_Level3_Lock)
 KEY_MAP_GTK(AltGraph, GDK_ISO_Level5_Shift)
 KEY_MAP_GTK(AltGraph, GDK_ISO_Level5_Latch)
 KEY_MAP_GTK(AltGraph, GDK_ISO_Level5_Lock)
+KEY_MAP_QT(AltGraph, Qt::Key_AltGr)
+KEY_MAP_QT(AltGraph, Qt::Key_Mode_switch)
 
 // CapsLock
 KEY_MAP_WIN(CapsLock, VK_CAPITAL)
 KEY_MAP_COCOA(CapsLock, kVK_CapsLock)
 KEY_MAP_GTK(CapsLock, GDK_Caps_Lock)
+KEY_MAP_QT(CapsLock, Qt::Key_CapsLock)
 KEY_MAP_ANDROID(CapsLock, AKEYCODE_CAPS_LOCK)
 
 // Control
@@ -125,6 +136,7 @@ KEY_MAP_COCOA(Control, kVK_Control)
 KEY_MAP_COCOA(Control, kVK_RightControl)
 KEY_MAP_GTK(Control, GDK_Control_L)
 KEY_MAP_GTK(Control, GDK_Control_R)
+KEY_MAP_QT(Control, Qt::Key_Control)
 KEY_MAP_ANDROID(Control, AKEYCODE_CTRL_LEFT)
 KEY_MAP_ANDROID(Control, AKEYCODE_CTRL_RIGHT)
 
@@ -137,12 +149,14 @@ KEY_MAP_COCOA(Meta, kVK_Command)
 KEY_MAP_COCOA(Meta, kVK_RightCommand)
 KEY_MAP_GTK(Meta, GDK_Meta_L)
 KEY_MAP_GTK(Meta, GDK_Meta_R)
+KEY_MAP_QT(Meta, Qt::Key_Meta)
 KEY_MAP_ANDROID(Meta, AKEYCODE_META_LEFT)
 KEY_MAP_ANDROID(Meta, AKEYCODE_META_RIGHT)
 
 // NumLock
 KEY_MAP_WIN(NumLock, VK_NUMLOCK)
 KEY_MAP_GTK(NumLock, GDK_Num_Lock)
+KEY_MAP_QT(NumLock, Qt::Key_NumLock)
 KEY_MAP_ANDROID(NumLock, AKEYCODE_NUM_LOCK)
 
 // OS
@@ -152,10 +166,15 @@ KEY_MAP_GTK(OS, GDK_Super_L)
 KEY_MAP_GTK(OS, GDK_Super_R)
 KEY_MAP_GTK(OS, GDK_Hyper_L)
 KEY_MAP_GTK(OS, GDK_Hyper_R)
+KEY_MAP_QT(OS, Qt::Key_Super_L)
+KEY_MAP_QT(OS, Qt::Key_Super_R)
+KEY_MAP_QT(OS, Qt::Key_Hyper_L)
+KEY_MAP_QT(OS, Qt::Key_Hyper_R)
 
 // ScrollLock
 KEY_MAP_WIN(ScrollLock, VK_SCROLL)
 KEY_MAP_GTK(ScrollLock, GDK_Scroll_Lock)
+KEY_MAP_QT(ScrollLock, Qt::Key_ScrollLock)
 KEY_MAP_ANDROID(ScrollLock, AKEYCODE_SCROLL_LOCK)
 
 // Shift
@@ -167,6 +186,7 @@ KEY_MAP_COCOA(Shift, kVK_RightShift)
 KEY_MAP_GTK(Shift, GDK_Shift_L)
 KEY_MAP_GTK(Shift, GDK_Shift_R)
 KEY_MAP_GTK(Shift, GDK_Shift_Lock)  // Let's treat as Shift key (bug 769159)
+KEY_MAP_QT(Shift, Qt::Key_Shift)
 KEY_MAP_ANDROID(Shift, AKEYCODE_SHIFT_LEFT)
 KEY_MAP_ANDROID(Shift, AKEYCODE_SHIFT_RIGHT)
 
@@ -185,6 +205,8 @@ KEY_MAP_GTK(Enter, GDK_Return)
 KEY_MAP_GTK(Enter, GDK_KP_Enter)
 KEY_MAP_GTK(Enter, GDK_ISO_Enter)
 KEY_MAP_GTK(Enter, GDK_3270_Enter)
+KEY_MAP_QT(Enter, Qt::Key_Return)
+KEY_MAP_QT(Enter, Qt::Key_Enter)
 KEY_MAP_ANDROID(Enter, AKEYCODE_DPAD_CENTER)
 KEY_MAP_ANDROID(Enter, AKEYCODE_ENTER)
 KEY_MAP_ANDROID(Enter, AKEYCODE_NUMPAD_ENTER)
@@ -195,6 +217,7 @@ KEY_MAP_COCOA(Tab, kVK_Tab)
 KEY_MAP_GTK(Tab, GDK_Tab)
 KEY_MAP_GTK(Tab, GDK_ISO_Left_Tab)  // Shift+Tab
 KEY_MAP_GTK(Tab, GDK_KP_Tab)
+KEY_MAP_QT(Tab, Qt::Key_Tab)
 KEY_MAP_ANDROID(Tab, AKEYCODE_TAB)
 
 /******************************************************************************
@@ -205,6 +228,7 @@ KEY_MAP_WIN(ArrowDown, VK_DOWN)
 KEY_MAP_COCOA(ArrowDown, kVK_DownArrow)
 KEY_MAP_GTK(ArrowDown, GDK_Down)
 KEY_MAP_GTK(ArrowDown, GDK_KP_Down)
+KEY_MAP_QT(ArrowDown, Qt::Key_Down)
 KEY_MAP_ANDROID(ArrowDown, AKEYCODE_DPAD_DOWN)
 
 // ArrowLeft
@@ -212,6 +236,7 @@ KEY_MAP_WIN(ArrowLeft, VK_LEFT)
 KEY_MAP_COCOA(ArrowLeft, kVK_LeftArrow)
 KEY_MAP_GTK(ArrowLeft, GDK_Left)
 KEY_MAP_GTK(ArrowLeft, GDK_KP_Left)
+KEY_MAP_QT(ArrowLeft, Qt::Key_Left)
 KEY_MAP_ANDROID(ArrowLeft, AKEYCODE_DPAD_LEFT)
 
 // ArrowRight
@@ -219,6 +244,7 @@ KEY_MAP_WIN(ArrowRight, VK_RIGHT)
 KEY_MAP_COCOA(ArrowRight, kVK_RightArrow)
 KEY_MAP_GTK(ArrowRight, GDK_Right)
 KEY_MAP_GTK(ArrowRight, GDK_KP_Right)
+KEY_MAP_QT(ArrowRight, Qt::Key_Right)
 KEY_MAP_ANDROID(ArrowRight, AKEYCODE_DPAD_RIGHT)
 
 // ArrowUp
@@ -226,6 +252,7 @@ KEY_MAP_WIN(ArrowUp, VK_UP)
 KEY_MAP_COCOA(ArrowUp, kVK_UpArrow)
 KEY_MAP_GTK(ArrowUp, GDK_Up)
 KEY_MAP_GTK(ArrowUp, GDK_KP_Up)
+KEY_MAP_QT(ArrowUp, Qt::Key_Up)
 KEY_MAP_ANDROID(ArrowUp, AKEYCODE_DPAD_UP)
 
 // End
@@ -233,6 +260,7 @@ KEY_MAP_WIN(End, VK_END)
 KEY_MAP_COCOA(End, kVK_End)
 KEY_MAP_GTK(End, GDK_End)
 KEY_MAP_GTK(End, GDK_KP_End)
+KEY_MAP_QT(End, Qt::Key_End)
 KEY_MAP_ANDROID(End, AKEYCODE_MOVE_END)
 
 // Home
@@ -240,6 +268,7 @@ KEY_MAP_WIN(Home, VK_HOME)
 KEY_MAP_COCOA(Home, kVK_Home)
 KEY_MAP_GTK(Home, GDK_Home)
 KEY_MAP_GTK(Home, GDK_KP_Home)
+KEY_MAP_QT(Home, Qt::Key_Home)
 KEY_MAP_ANDROID(Home, AKEYCODE_MOVE_HOME)
 
 // PageDown
@@ -247,12 +276,14 @@ KEY_MAP_WIN(PageDown, VK_NEXT)
 KEY_MAP_COCOA(PageDown, kVK_PageDown)
 KEY_MAP_GTK(PageDown, GDK_Page_Down /* same as GDK_Next */)
 KEY_MAP_GTK(PageDown, GDK_KP_Page_Down /* same as GDK_KP_Next */)
+KEY_MAP_QT(PageDown, Qt::Key_PageDown)
 KEY_MAP_ANDROID(PageDown, AKEYCODE_PAGE_DOWN)
 
 // PageUp
 KEY_MAP_WIN(PageUp, VK_PRIOR)
 KEY_MAP_COCOA(PageUp, kVK_PageUp)
 KEY_MAP_GTK(PageUp, GDK_Page_Up /* same as GDK_Prior */)
+KEY_MAP_QT(PageUp, Qt::Key_PageUp)
 KEY_MAP_GTK(PageUp, GDK_KP_Page_Up /* same as GDK_KP_Prior */)
 KEY_MAP_ANDROID(PageUp, AKEYCODE_PAGE_UP)
 
@@ -263,6 +294,7 @@ KEY_MAP_ANDROID(PageUp, AKEYCODE_PAGE_UP)
 KEY_MAP_WIN(Backspace, VK_BACK)
 KEY_MAP_COCOA(Backspace, kVK_PC_Backspace)
 KEY_MAP_GTK(Backspace, GDK_BackSpace)
+KEY_MAP_QT(Backspace, Qt::Key_Backspace)
 KEY_MAP_ANDROID(Backspace, AKEYCODE_DEL)
 
 // Clear
@@ -270,11 +302,13 @@ KEY_MAP_WIN(Clear, VK_CLEAR)
 KEY_MAP_WIN(Clear, VK_OEM_CLEAR)
 KEY_MAP_COCOA(Clear, kVK_ANSI_KeypadClear)
 KEY_MAP_GTK(Clear, GDK_Clear)
+KEY_MAP_QT(Clear, Qt::Key_Clear)
 KEY_MAP_ANDROID(Clear, AKEYCODE_CLEAR)
 
 // Copy
 KEY_MAP_WIN_CMD(Copy, APPCOMMAND_COPY)
 KEY_MAP_GTK(Copy, GDK_Copy)
+KEY_MAP_QT(Copy, Qt::Key_Copy)
 KEY_MAP_ANDROID(Copy, AKEYCODE_COPY)
 
 // CrSel
@@ -284,6 +318,7 @@ KEY_MAP_GTK(CrSel, GDK_3270_CursorSelect)  // legacy IBM keyboard layout
 // Cut
 KEY_MAP_WIN_CMD(Cut, APPCOMMAND_CUT)
 KEY_MAP_GTK(Cut, GDK_Cut)
+KEY_MAP_QT(Cut, Qt::Key_Cut)
 KEY_MAP_ANDROID(Cut, AKEYCODE_CUT)
 
 // Delete
@@ -291,6 +326,7 @@ KEY_MAP_WIN(Delete, VK_DELETE)
 KEY_MAP_COCOA(Delete, kVK_PC_Delete)
 KEY_MAP_GTK(Delete, GDK_Delete)
 KEY_MAP_GTK(Delete, GDK_KP_Delete)
+KEY_MAP_QT(Delete, Qt::Key_Delete)
 KEY_MAP_ANDROID(Delete, AKEYCODE_FORWARD_DEL)
 
 // EraseEof
@@ -305,11 +341,13 @@ KEY_MAP_GTK(ExSel, GDK_3270_ExSelect)  // legacy IBM keyboard layout
 KEY_MAP_WIN(Insert, VK_INSERT)
 KEY_MAP_GTK(Insert, GDK_Insert)
 KEY_MAP_GTK(Insert, GDK_KP_Insert)
+KEY_MAP_QT(Insert, Qt::Key_Insert)
 KEY_MAP_ANDROID(Insert, AKEYCODE_INSERT)
 
 // Paste
 KEY_MAP_WIN_CMD(Paste, APPCOMMAND_PASTE)
 KEY_MAP_GTK(Paste, GDK_Paste)
+KEY_MAP_QT(Paste, Qt::Key_Paste)
 KEY_MAP_ANDROID(Paste, AKEYCODE_PASTE)
 
 // Redo
@@ -333,22 +371,26 @@ KEY_MAP_GTK(Attn, GDK_3270_Attn)  // legacy IBM keyboard layout
 // Cancel
 KEY_MAP_WIN(Cancel, VK_CANCEL)
 KEY_MAP_GTK(Cancel, GDK_Cancel)
+KEY_MAP_QT(Cancel, Qt::Key_Cancel)
 
 // ContextMenu
 KEY_MAP_WIN(ContextMenu, VK_APPS)
 KEY_MAP_COCOA(ContextMenu, kVK_PC_ContextMenu)
 KEY_MAP_GTK(ContextMenu, GDK_Menu)
+KEY_MAP_QT(ContextMenu, Qt::Key_Menu)
 KEY_MAP_ANDROID(ContextMenu, AKEYCODE_MENU)
 
 // Escape
 KEY_MAP_WIN(Escape, VK_ESCAPE)
 KEY_MAP_COCOA(Escape, kVK_Escape)
 KEY_MAP_GTK(Escape, GDK_Escape)
+KEY_MAP_QT(Escape, Qt::Key_Escape)
 KEY_MAP_ANDROID(Escape, AKEYCODE_ESCAPE)
 
 // Execute
 KEY_MAP_WIN(Execute, VK_EXECUTE)
 KEY_MAP_GTK(Execute, GDK_Execute)
+KEY_MAP_QT(Execute, Qt::Key_Execute)
 
 // Find
 KEY_MAP_WIN_CMD(Find, APPCOMMAND_FIND)
@@ -359,6 +401,7 @@ KEY_MAP_WIN(Help, VK_HELP)
 KEY_MAP_WIN_CMD(Help, APPCOMMAND_HELP)
 KEY_MAP_COCOA(Help, kVK_Help)
 KEY_MAP_GTK(Help, GDK_Help)
+KEY_MAP_QT(Help, Qt::Key_Help)
 KEY_MAP_ANDROID(Help, AKEYCODE_HELP)
 
 // Pause
@@ -366,11 +409,13 @@ KEY_MAP_WIN(Pause, VK_PAUSE)
 KEY_MAP_GTK(Pause, GDK_Pause)
 // Break is typically mapped to Alt+Pause or Ctrl+Pause on GTK.
 KEY_MAP_GTK(Pause, GDK_Break)
+KEY_MAP_QT(Pause, Qt::Key_Pause)
 KEY_MAP_ANDROID(Pause, AKEYCODE_BREAK)
 
 // Play
 KEY_MAP_WIN(Play, VK_PLAY)
 KEY_MAP_GTK(Play, GDK_3270_Play)  // legacy IBM keyboard layout
+KEY_MAP_QT(Play, Qt::Key_Play)
 
 // Select
 KEY_MAP_WIN(Select, VK_SELECT)
@@ -378,10 +423,12 @@ KEY_MAP_GTK(Select, GDK_Select)
 
 // ZoomIn
 KEY_MAP_GTK(ZoomIn, GDK_ZoomIn)
+KEY_MAP_QT(ZoomIn, Qt::Key_ZoomIn)
 KEY_MAP_ANDROID(ZoomIn, AKEYCODE_ZOOM_IN)
 
 // ZoomOut
 KEY_MAP_GTK(ZoomOut, GDK_ZoomOut)
+KEY_MAP_QT(ZoomOut, Qt::Key_ZoomOut)
 KEY_MAP_ANDROID(ZoomOut, AKEYCODE_ZOOM_OUT)
 
 /******************************************************************************
@@ -389,18 +436,22 @@ KEY_MAP_ANDROID(ZoomOut, AKEYCODE_ZOOM_OUT)
  ******************************************************************************/
 // BrightnessDown
 KEY_MAP_GTK(BrightnessDown, GDK_MonBrightnessDown)
+KEY_MAP_QT(BrightnessDown, Qt::Key_MonBrightnessDown)
 KEY_MAP_ANDROID(BrightnessDown, AKEYCODE_BRIGHTNESS_DOWN)
 
 // BrightnessUp
 KEY_MAP_GTK(BrightnessUp, GDK_MonBrightnessUp)
+KEY_MAP_QT(BrightnessUp, Qt::Key_MonBrightnessUp)
 KEY_MAP_ANDROID(BrightnessUp, AKEYCODE_BRIGHTNESS_UP)
 
 // Eject
 KEY_MAP_GTK(Eject, GDK_Eject)
+KEY_MAP_QT(Eject, Qt::Key_Eject)
 KEY_MAP_ANDROID(Eject, AKEYCODE_MEDIA_EJECT)
 
 // LogOff
 KEY_MAP_GTK(LogOff, GDK_LogOff)
+KEY_MAP_QT(LogOff, Qt::Key_LogOff)
 
 // Power
 KEY_MAP_ANDROID(Power, AKEYCODE_POWER)
@@ -408,26 +459,35 @@ KEY_MAP_ANDROID(Power, AKEYCODE_POWER)
 // PowerOff
 KEY_MAP_GTK(PowerOff, GDK_PowerDown)
 KEY_MAP_GTK(PowerOff, GDK_PowerOff)
+KEY_MAP_QT(PowerOff, Qt::Key_PowerDown)
+KEY_MAP_QT(PowerOff, Qt::Key_PowerOff)
 
 // PrintScreen
 KEY_MAP_WIN(PrintScreen, VK_SNAPSHOT)
 KEY_MAP_GTK(PrintScreen, GDK_3270_PrintScreen)
 KEY_MAP_GTK(PrintScreen, GDK_Print)
 KEY_MAP_GTK(PrintScreen, GDK_Sys_Req)
+KEY_MAP_QT(PrintScreen, Qt::Key_Print)
+KEY_MAP_QT(PrintScreen, Qt::Key_SysReq)
 KEY_MAP_ANDROID(PrintScreen, AKEYCODE_SYSRQ)
 
 // Hibernate
 KEY_MAP_GTK(Hibernate, GDK_Hibernate)
+KEY_MAP_QT(Hibernate, Qt::Key_Hibernate)
 
 // Standby
 KEY_MAP_WIN(Standby, VK_SLEEP)
 KEY_MAP_GTK(Standby, GDK_Standby)
 KEY_MAP_GTK(Standby, GDK_Suspend)
 KEY_MAP_GTK(Standby, GDK_Sleep)
+KEY_MAP_QT(Standby, Qt::Key_Standby)
+KEY_MAP_QT(Standby, Qt::Key_Suspend)
+KEY_MAP_QT(Standby, Qt::Key_Sleep)
 KEY_MAP_ANDROID(Standby, AKEYCODE_SLEEP)
 
 // WakeUp
 KEY_MAP_GTK(WakeUp, GDK_WakeUp)
+KEY_MAP_QT(WakeUp, Qt::Key_WakeUp)
 KEY_MAP_ANDROID(WakeUp, AKEYCODE_WAKEUP)
 
 /******************************************************************************
@@ -435,21 +495,27 @@ KEY_MAP_ANDROID(WakeUp, AKEYCODE_WAKEUP)
  ******************************************************************************/
 // AllCandidates
 KEY_MAP_GTK(AllCandidates, GDK_MultipleCandidate)  // OADG 109, Zen Koho
+KEY_MAP_QT(AllCandidates, Qt::Key_MultipleCandidate)
 
 // Alphanumeric
 KEY_MAP_WIN_JPN(Alphanumeric, VK_OEM_ATTN)
 KEY_MAP_GTK(Alphanumeric, GDK_Eisu_Shift)
 KEY_MAP_GTK(Alphanumeric, GDK_Eisu_toggle)
+KEY_MAP_QT(Alphanumeric, Qt::Key_Eisu_Shift)
+KEY_MAP_QT(Alphanumeric, Qt::Key_Eisu_toggle)
 
 // CodeInput
 KEY_MAP_GTK(CodeInput, GDK_Codeinput)  // OADG 109, Kanji Bangou
+KEY_MAP_QT(CodeInput, Qt::Key_Codeinput)
 
 // Compose
 KEY_MAP_GTK(Compose, GDK_Multi_key)  // "Multi Key" is "Compose key" on X
+KEY_MAP_QT(Compose, Qt::Key_Multi_key)
 
 // Convert
 KEY_MAP_WIN(Convert, VK_CONVERT)
 KEY_MAP_GTK(Convert, GDK_Henkan)
+KEY_MAP_QT(Convert, Qt::Key_Henkan)
 KEY_MAP_ANDROID(Convert, AKEYCODE_HENKAN)
 
 // Dead
@@ -498,6 +564,25 @@ KEY_MAP_GTK(Dead, GDK_dead_U)
 KEY_MAP_GTK(Dead, GDK_dead_small_schwa)
 KEY_MAP_GTK(Dead, GDK_dead_capital_schwa)
 KEY_MAP_GTK(Dead, GDK_dead_greek)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Grave)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Acute)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Circumflex)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Tilde)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Macron)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Breve)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Abovedot)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Diaeresis)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Abovering)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Doubleacute)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Caron)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Cedilla)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Ogonek)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Iota)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Voiced_Sound)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Semivoiced_Sound)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Belowdot)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Hook)
+KEY_MAP_QT(Dead, Qt::Key_Dead_Horn)
 
 // FinalMode
 KEY_MAP_WIN(FinalMode, VK_FINAL)
@@ -522,16 +607,19 @@ KEY_MAP_ANDROID(ModeChange, AKEYCODE_SWITCH_CHARSET)
 // NonConvert
 KEY_MAP_WIN(NonConvert, VK_NONCONVERT)
 KEY_MAP_GTK(NonConvert, GDK_Muhenkan)
+KEY_MAP_QT(NonConvert, Qt::Key_Muhenkan)
 KEY_MAP_ANDROID(NonConvert, AKEYCODE_MUHENKAN)
 
 // PreviousCandidate
 KEY_MAP_GTK(PreviousCandidate, GDK_PreviousCandidate)  // OADG 109, Mae Koho
+KEY_MAP_QT(PreviousCandidate, Qt::Key_PreviousCandidate)
 
 // Process
 KEY_MAP_WIN(Process, VK_PROCESSKEY)
 
 // SingleCandidate
 KEY_MAP_GTK(SingleCandidate, GDK_SingleCandidate)
+KEY_MAP_QT(SingleCandidate, Qt::Key_SingleCandidate)
 
 /******************************************************************************
  * Keys specific to Korean keyboards
@@ -555,13 +643,16 @@ KEY_MAP_ANDROID(Eisu, AKEYCODE_EISU)
 // Hankaku
 KEY_MAP_WIN_JPN(Hankaku, VK_OEM_AUTO)
 KEY_MAP_GTK(Hankaku, GDK_Hankaku)
+KEY_MAP_QT(Hankaku, Qt::Key_Hankaku)
 
 // Hiragana
 KEY_MAP_WIN_JPN(Hiragana, VK_OEM_COPY)
 KEY_MAP_GTK(Hiragana, GDK_Hiragana)
+KEY_MAP_QT(Hiragana, Qt::Key_Hiragana)
 
 // HiraganaKatakana
 KEY_MAP_GTK(HiraganaKatakana, GDK_Hiragana_Katakana)
+KEY_MAP_QT(HiraganaKatakana, Qt::Key_Hiragana_Katakana)
 KEY_MAP_ANDROID(HiraganaKatakana, AKEYCODE_KATAKANA_HIRAGANA)
 
 // KanaMode
@@ -571,28 +662,35 @@ KEY_MAP_WIN_JPN(KanaMode, VK_KANA /* same as VK_HANGUL */)
 KEY_MAP_WIN_JPN(KanaMode, VK_ATTN)
 KEY_MAP_GTK(KanaMode, GDK_Kana_Lock)
 KEY_MAP_GTK(KanaMode, GDK_Kana_Shift)
+KEY_MAP_QT(KanaMode, Qt::Key_Kana_Lock)
+KEY_MAP_QT(KanaMode, Qt::Key_Kana_Shift)
 
 // KanjiMode
 KEY_MAP_WIN_JPN(KanjiMode, VK_KANJI /* same as VK_HANJA */)
 KEY_MAP_COCOA(KanjiMode, kVK_JIS_Kana)  // Kana key opens IME
 KEY_MAP_GTK(KanjiMode, GDK_Kanji)       // Typically, Alt + Hankaku/Zenkaku key
+KEY_MAP_QT(KanjiMode, Qt::Key_Kanji)
 // Assuming that KANA key of Android is the Kana key on Mac keyboard.
 KEY_MAP_ANDROID(KanjiMode, AKEYCODE_KANA)
 
 // Katakana
 KEY_MAP_WIN_JPN(Katakana, VK_OEM_FINISH)
 KEY_MAP_GTK(Katakana, GDK_Katakana)
+KEY_MAP_QT(Katakana, Qt::Key_Katakana)
 
 // Romaji
 KEY_MAP_WIN_JPN(Romaji, VK_OEM_BACKTAB)
 KEY_MAP_GTK(Romaji, GDK_Romaji)
+KEY_MAP_QT(Romaji, Qt::Key_Romaji)
 
 // Zenkaku
 KEY_MAP_WIN_JPN(Zenkaku, VK_OEM_ENLW)
 KEY_MAP_GTK(Zenkaku, GDK_Zenkaku)
+KEY_MAP_QT(Zenkaku, Qt::Key_Zenkaku)
 
 // ZenkakuHankaku
 KEY_MAP_GTK(ZenkakuHankaku, GDK_Zenkaku_Hankaku)
+KEY_MAP_QT(ZenkakuHankaku, Qt::Key_Zenkaku_Hankaku)
 KEY_MAP_ANDROID(ZenkakuHankaku, AKEYCODE_ZENKAKU_HANKAKU)
 
 /******************************************************************************
@@ -603,6 +701,7 @@ KEY_MAP_WIN(F1, VK_F1)
 KEY_MAP_COCOA(F1, kVK_F1)
 KEY_MAP_GTK(F1, GDK_F1)
 KEY_MAP_GTK(F1, GDK_KP_F1)
+KEY_MAP_QT(F1, Qt::Key_F1)
 KEY_MAP_ANDROID(F1, AKEYCODE_F1)
 
 // F2
@@ -610,6 +709,7 @@ KEY_MAP_WIN(F2, VK_F2)
 KEY_MAP_COCOA(F2, kVK_F2)
 KEY_MAP_GTK(F2, GDK_F2)
 KEY_MAP_GTK(F2, GDK_KP_F2)
+KEY_MAP_QT(F2, Qt::Key_F2)
 KEY_MAP_ANDROID(F2, AKEYCODE_F2)
 
 // F3
@@ -617,6 +717,7 @@ KEY_MAP_WIN(F3, VK_F3)
 KEY_MAP_COCOA(F3, kVK_F3)
 KEY_MAP_GTK(F3, GDK_F3)
 KEY_MAP_GTK(F3, GDK_KP_F3)
+KEY_MAP_QT(F3, Qt::Key_F3)
 KEY_MAP_ANDROID(F3, AKEYCODE_F3)
 
 // F4
@@ -624,143 +725,175 @@ KEY_MAP_WIN(F4, VK_F4)
 KEY_MAP_COCOA(F4, kVK_F4)
 KEY_MAP_GTK(F4, GDK_F4)
 KEY_MAP_GTK(F4, GDK_KP_F4)
+KEY_MAP_QT(F4, Qt::Key_F4)
 KEY_MAP_ANDROID(F4, AKEYCODE_F4)
 
 // F5
 KEY_MAP_WIN(F5, VK_F5)
 KEY_MAP_COCOA(F5, kVK_F5)
 KEY_MAP_GTK(F5, GDK_F5)
+KEY_MAP_QT(F5, Qt::Key_F5)
 KEY_MAP_ANDROID(F5, AKEYCODE_F5)
 
 // F6
 KEY_MAP_WIN(F6, VK_F6)
 KEY_MAP_COCOA(F6, kVK_F6)
 KEY_MAP_GTK(F6, GDK_F6)
+KEY_MAP_QT(F6, Qt::Key_F6)
 KEY_MAP_ANDROID(F6, AKEYCODE_F6)
 
 // F7
 KEY_MAP_WIN(F7, VK_F7)
 KEY_MAP_COCOA(F7, kVK_F7)
 KEY_MAP_GTK(F7, GDK_F7)
+KEY_MAP_QT(F7, Qt::Key_F7)
 KEY_MAP_ANDROID(F7, AKEYCODE_F7)
 
 // F8
 KEY_MAP_WIN(F8, VK_F8)
 KEY_MAP_COCOA(F8, kVK_F8)
 KEY_MAP_GTK(F8, GDK_F8)
+KEY_MAP_QT(F8, Qt::Key_F8)
 KEY_MAP_ANDROID(F8, AKEYCODE_F8)
 
 // F9
 KEY_MAP_WIN(F9, VK_F9)
 KEY_MAP_COCOA(F9, kVK_F9)
 KEY_MAP_GTK(F9, GDK_F9)
+KEY_MAP_QT(F9, Qt::Key_F9)
 KEY_MAP_ANDROID(F9, AKEYCODE_F9)
 
 // F10
 KEY_MAP_WIN(F10, VK_F10)
 KEY_MAP_COCOA(F10, kVK_F10)
 KEY_MAP_GTK(F10, GDK_F10)
+KEY_MAP_QT(F10, Qt::Key_F10)
 KEY_MAP_ANDROID(F10, AKEYCODE_F10)
 
 // F11
 KEY_MAP_WIN(F11, VK_F11)
 KEY_MAP_COCOA(F11, kVK_F11)
 KEY_MAP_GTK(F11, GDK_F11 /* same as GDK_L1 */)
+KEY_MAP_QT(F11, Qt::Key_F11)
 KEY_MAP_ANDROID(F11, AKEYCODE_F11)
 
 // F12
 KEY_MAP_WIN(F12, VK_F12)
 KEY_MAP_COCOA(F12, kVK_F12)
 KEY_MAP_GTK(F12, GDK_F12 /* same as GDK_L2 */)
+KEY_MAP_QT(F12, Qt::Key_F12)
 KEY_MAP_ANDROID(F12, AKEYCODE_F12)
 
 // F13
 KEY_MAP_WIN(F13, VK_F13)
 KEY_MAP_COCOA(F13, kVK_F13)
 KEY_MAP_GTK(F13, GDK_F13 /* same as GDK_L3 */)
+KEY_MAP_QT(F13, Qt::Key_F13)
 
 // F14
 KEY_MAP_WIN(F14, VK_F14)
 KEY_MAP_COCOA(F14, kVK_F14)
 KEY_MAP_GTK(F14, GDK_F14 /* same as GDK_L4 */)
+KEY_MAP_QT(F14, Qt::Key_F14)
 
 // F15
 KEY_MAP_WIN(F15, VK_F15)
 KEY_MAP_COCOA(F15, kVK_F15)
 KEY_MAP_GTK(F15, GDK_F15 /* same as GDK_L5 */)
+KEY_MAP_QT(F15, Qt::Key_F15)
 
 // F16
 KEY_MAP_WIN(F16, VK_F16)
 KEY_MAP_COCOA(F16, kVK_F16)
 KEY_MAP_GTK(F16, GDK_F16 /* same as GDK_L6 */)
+KEY_MAP_QT(F16, Qt::Key_F16)
 
 // F17
 KEY_MAP_WIN(F17, VK_F17)
 KEY_MAP_COCOA(F17, kVK_F17)
 KEY_MAP_GTK(F17, GDK_F17 /* same as GDK_L7 */)
+KEY_MAP_QT(F17, Qt::Key_F17)
 
 // F18
 KEY_MAP_WIN(F18, VK_F18)
 KEY_MAP_COCOA(F18, kVK_F18)
 KEY_MAP_GTK(F18, GDK_F18 /* same as GDK_L8 */)
+KEY_MAP_QT(F18, Qt::Key_F18)
 
 // F19
 KEY_MAP_WIN(F19, VK_F19)
 KEY_MAP_COCOA(F19, kVK_F19)
 KEY_MAP_GTK(F19, GDK_F19 /* same as GDK_L9 */)
+KEY_MAP_QT(F19, Qt::Key_F19)
 
 // F20
 KEY_MAP_WIN(F20, VK_F20)
 KEY_MAP_GTK(F20, GDK_F20 /* same as GDK_L10 */)
+KEY_MAP_QT(F20, Qt::Key_F20)
 
 // F21
 KEY_MAP_WIN(F21, VK_F21)
 KEY_MAP_GTK(F21, GDK_F21 /* same as GDK_R1 */)
+KEY_MAP_QT(F21, Qt::Key_F21)
 
 // F22
 KEY_MAP_WIN(F22, VK_F22)
 KEY_MAP_GTK(F22, GDK_F22 /* same as GDK_R2 */)
+KEY_MAP_QT(F22, Qt::Key_F22)
 
 // F23
 KEY_MAP_WIN(F23, VK_F23)
 KEY_MAP_GTK(F23, GDK_F23 /* same as GDK_R3 */)
+KEY_MAP_QT(F23, Qt::Key_F23)
 
 // F24
 KEY_MAP_WIN(F24, VK_F24)
 KEY_MAP_GTK(F24, GDK_F24 /* same as GDK_R4 */)
+KEY_MAP_QT(F24, Qt::Key_F24)
 
 // F25
 KEY_MAP_GTK(F25, GDK_F25 /* same as GDK_R5 */)
+KEY_MAP_QT(F25, Qt::Key_F25)
 
 // F26
 KEY_MAP_GTK(F26, GDK_F26 /* same as GDK_R6 */)
+KEY_MAP_QT(F26, Qt::Key_F26)
 
 // F27
 KEY_MAP_GTK(F27, GDK_F27 /* same as GDK_R7 */)
+KEY_MAP_QT(F27, Qt::Key_F27)
 
 // F28
 KEY_MAP_GTK(F28, GDK_F28 /* same as GDK_R8 */)
+KEY_MAP_QT(F28, Qt::Key_F28)
 
 // F29
 KEY_MAP_GTK(F29, GDK_F29 /* same as GDK_R9 */)
+KEY_MAP_QT(F29, Qt::Key_F29)
 
 // F30
 KEY_MAP_GTK(F30, GDK_F30 /* same as GDK_R10 */)
+KEY_MAP_QT(F30, Qt::Key_F30)
 
 // F31
 KEY_MAP_GTK(F31, GDK_F31 /* same as GDK_R11 */)
+KEY_MAP_QT(F31, Qt::Key_F31)
 
 // F32
 KEY_MAP_GTK(F32, GDK_F32 /* same as GDK_R12 */)
+KEY_MAP_QT(F32, Qt::Key_F32)
 
 // F33
 KEY_MAP_GTK(F33, GDK_F33 /* same as GDK_R13 */)
+KEY_MAP_QT(F33, Qt::Key_F33)
 
 // F34
 KEY_MAP_GTK(F34, GDK_F34 /* same as GDK_R14 */)
+KEY_MAP_QT(F34, Qt::Key_F34)
 
 // F35
 KEY_MAP_GTK(F35, GDK_F35 /* same as GDK_R15 */)
+KEY_MAP_QT(F35, Qt::Key_F35)
 
 /******************************************************************************
  * Multimedia Keys
@@ -778,65 +911,78 @@ KEY_MAP_ANDROID(ChannelUp, AKEYCODE_CHANNEL_UP)
 //       or window.
 KEY_MAP_WIN_CMD(Close, APPCOMMAND_CLOSE)
 KEY_MAP_GTK(Close, GDK_Close)
+KEY_MAP_QT(Close, Qt::Key_Close)
 
 // MailForward
 KEY_MAP_WIN_CMD(MailForward, APPCOMMAND_FORWARD_MAIL)
 KEY_MAP_GTK(MailForward, GDK_MailForward)
+KEY_MAP_QT(MailForward, Qt::Key_MailForward)
 
 // MailReply
 KEY_MAP_WIN_CMD(MailReply, APPCOMMAND_REPLY_TO_MAIL)
 KEY_MAP_GTK(MailReply, GDK_Reply)
+KEY_MAP_QT(MailReply, Qt::Key_Reply)
 
 // MailSend
 KEY_MAP_WIN_CMD(MailSend, APPCOMMAND_SEND_MAIL)
 KEY_MAP_GTK(MailSend, GDK_Send)
+KEY_MAP_QT(MailSend, Qt::Key_Send)
 
 // MediaFastForward
 KEY_MAP_WIN_CMD(MediaFastForward, APPCOMMAND_MEDIA_FAST_FORWARD)
 KEY_MAP_GTK(MediaFastForward, GDK_AudioForward)
+KEY_MAP_QT(MediaFastForward, Qt::Key_AudioForward)
 KEY_MAP_ANDROID(MediaFastForward, AKEYCODE_MEDIA_FAST_FORWARD)
 
 // MediaPause
 KEY_MAP_WIN_CMD(MediaPause, APPCOMMAND_MEDIA_PAUSE)
 KEY_MAP_GTK(MediaPause, GDK_AudioPause)
+KEY_MAP_QT(MediaPause, Qt::Key_MediaPause)
 KEY_MAP_ANDROID(MediaPause, AKEYCODE_MEDIA_PAUSE)
 
 // MediaPlay
 KEY_MAP_WIN_CMD(MediaPlay, APPCOMMAND_MEDIA_PLAY)
 KEY_MAP_GTK(MediaPlay, GDK_AudioPlay)
+KEY_MAP_QT(MediaPlay, Qt::Key_MediaPlay)
 KEY_MAP_ANDROID(MediaPlay, AKEYCODE_MEDIA_PLAY)
 
 // MediaPlayPause
 KEY_MAP_WIN(MediaPlayPause, VK_MEDIA_PLAY_PAUSE)
 KEY_MAP_WIN_CMD(MediaPlayPause, APPCOMMAND_MEDIA_PLAY_PAUSE)
+KEY_MAP_QT(MediaPlayPause, Qt::Key_MediaTogglePlayPause)
 KEY_MAP_ANDROID(MediaPlayPause, AKEYCODE_MEDIA_PLAY_PAUSE)
 
 // MediaRecord
 KEY_MAP_WIN_CMD(MediaRecord, APPCOMMAND_MEDIA_RECORD)
 KEY_MAP_GTK(MediaRecord, GDK_AudioRecord)
+KEY_MAP_QT(MediaRecord, Qt::Key_MediaRecord)
 KEY_MAP_ANDROID(MediaRecord, AKEYCODE_MEDIA_RECORD)
 
 // MediaRewind
 KEY_MAP_WIN_CMD(MediaRewind, APPCOMMAND_MEDIA_REWIND)
 KEY_MAP_GTK(MediaRewind, GDK_AudioRewind)
+KEY_MAP_QT(MediaRewind, Qt::Key_AudioRewind)
 KEY_MAP_ANDROID(MediaRewind, AKEYCODE_MEDIA_REWIND)
 
 // MediaStop
 KEY_MAP_WIN(MediaStop, VK_MEDIA_STOP)
 KEY_MAP_WIN_CMD(MediaStop, APPCOMMAND_MEDIA_STOP)
 KEY_MAP_GTK(MediaStop, GDK_AudioStop)
+KEY_MAP_QT(MediaStop, Qt::Key_MediaStop)
 KEY_MAP_ANDROID(MediaStop, AKEYCODE_MEDIA_STOP)
 
 // MediaTrackNext
 KEY_MAP_WIN(MediaTrackNext, VK_MEDIA_NEXT_TRACK)
 KEY_MAP_WIN_CMD(MediaTrackNext, APPCOMMAND_MEDIA_NEXTTRACK)
 KEY_MAP_GTK(MediaTrackNext, GDK_AudioNext)
+KEY_MAP_QT(MediaTrackNext, Qt::Key_MediaNext)
 KEY_MAP_ANDROID(MediaTrackNext, AKEYCODE_MEDIA_NEXT)
 
 // MediaTrackPrevious
 KEY_MAP_WIN(MediaTrackPrevious, VK_MEDIA_PREV_TRACK)
 KEY_MAP_WIN_CMD(MediaTrackPrevious, APPCOMMAND_MEDIA_PREVIOUSTRACK)
 KEY_MAP_GTK(MediaTrackPrevious, GDK_AudioPrev)
+KEY_MAP_QT(MediaTrackPrevious, Qt::Key_MediaPrevious)
 KEY_MAP_ANDROID(MediaTrackPrevious, AKEYCODE_MEDIA_PREVIOUS)
 
 // New
@@ -849,29 +995,35 @@ KEY_MAP_GTK(Open, GDK_Open)
 
 // Print
 KEY_MAP_WIN_CMD(Print, APPCOMMAND_PRINT)
+KEY_MAP_QT(Print, Qt::Key_Printer)
 
 // Save
 KEY_MAP_WIN_CMD(Save, APPCOMMAND_SAVE)
 KEY_MAP_GTK(Save, GDK_Save)
+KEY_MAP_QT(Save, Qt::Key_Save)
 
 // SpellCheck
 KEY_MAP_WIN_CMD(SpellCheck, APPCOMMAND_SPELL_CHECK)
 KEY_MAP_GTK(SpellCheck, GDK_Spell)
+KEY_MAP_QT(SpellCheck, Qt::Key_Spell)
 
 /******************************************************************************
  * Audio Keys
  *****************************************************************************/
 // AudioBassBoostDown
 KEY_MAP_WIN_CMD(AudioBassBoostDown, APPCOMMAND_BASS_DOWN)
+KEY_MAP_QT(AudioBassBoostDown, Qt::Key_BassDown)
 
 // AudioBassBoostUp
 KEY_MAP_WIN_CMD(AudioBassBoostUp, APPCOMMAND_BASS_UP)
+KEY_MAP_QT(AudioBassBoostUp, Qt::Key_BassUp)
 
 // AudioVolumeDown
 KEY_MAP_WIN(AudioVolumeDown, VK_VOLUME_DOWN)
 KEY_MAP_WIN_CMD(AudioVolumeDown, APPCOMMAND_VOLUME_DOWN)
 KEY_MAP_COCOA(AudioVolumeDown, kVK_VolumeDown)
 KEY_MAP_GTK(AudioVolumeDown, GDK_AudioLowerVolume)
+KEY_MAP_QT(AudioVolumeDown, Qt::Key_VolumeDown)
 KEY_MAP_ANDROID(AudioVolumeDown, AKEYCODE_VOLUME_DOWN)
 
 // AudioVolumeUp
@@ -879,6 +1031,7 @@ KEY_MAP_WIN(AudioVolumeUp, VK_VOLUME_UP)
 KEY_MAP_WIN_CMD(AudioVolumeUp, APPCOMMAND_VOLUME_UP)
 KEY_MAP_COCOA(AudioVolumeUp, kVK_VolumeUp)
 KEY_MAP_GTK(AudioVolumeUp, GDK_AudioRaiseVolume)
+KEY_MAP_QT(AudioVolumeUp, Qt::Key_VolumeUp)
 KEY_MAP_ANDROID(AudioVolumeUp, AKEYCODE_VOLUME_UP)
 
 // AudioVolumeMute
@@ -886,6 +1039,7 @@ KEY_MAP_WIN(AudioVolumeMute, VK_VOLUME_MUTE)
 KEY_MAP_WIN_CMD(AudioVolumeMute, APPCOMMAND_VOLUME_MUTE)
 KEY_MAP_COCOA(AudioVolumeMute, kVK_Mute)
 KEY_MAP_GTK(AudioVolumeMute, GDK_AudioMute)
+KEY_MAP_QT(AudioVolumeMute, Qt::Key_VolumeMute)
 KEY_MAP_ANDROID(AudioVolumeMute, AKEYCODE_VOLUME_MUTE)
 
 // MicrophoneVolumeMute
@@ -896,10 +1050,12 @@ KEY_MAP_ANDROID(MicrophoneVolumeMute, AKEYCODE_MUTE)
  ******************************************************************************/
 // LaunchCalculator
 KEY_MAP_GTK(LaunchCalculator, GDK_Calculator)
+KEY_MAP_QT(LaunchCalculator, Qt::Key_Calculator)
 KEY_MAP_ANDROID(LaunchCalculator, AKEYCODE_CALCULATOR)
 
 // LaunchCalendar
 KEY_MAP_GTK(LaunchCalendar, GDK_Calendar)
+KEY_MAP_QT(LaunchCalendar, Qt::Key_Calendar)
 KEY_MAP_ANDROID(LaunchCalendar, AKEYCODE_CALENDAR)
 
 // LaunchContacts
@@ -909,6 +1065,7 @@ KEY_MAP_ANDROID(LaunchContacts, AKEYCODE_CONTACTS)
 KEY_MAP_WIN(LaunchMail, VK_LAUNCH_MAIL)
 KEY_MAP_WIN_CMD(LaunchMail, APPCOMMAND_LAUNCH_MAIL)
 KEY_MAP_GTK(LaunchMail, GDK_Mail)
+KEY_MAP_QT(LaunchMail, Qt::Key_LaunchMail)
 KEY_MAP_ANDROID(LaunchMail, AKEYCODE_ENVELOPE)
 
 // LaunchMediaPlayer
@@ -919,86 +1076,114 @@ KEY_MAP_WIN_CMD(LaunchMediaPlayer, APPCOMMAND_LAUNCH_MEDIA_SELECT)
 KEY_MAP_GTK(LaunchMediaPlayer, GDK_CD)
 KEY_MAP_GTK(LaunchMediaPlayer, GDK_Video)
 KEY_MAP_GTK(LaunchMediaPlayer, GDK_AudioMedia)
+KEY_MAP_QT(LaunchMediaPlayer, Qt::Key_LaunchMedia)
+KEY_MAP_QT(LaunchMediaPlayer, Qt::Key_CD)
+KEY_MAP_QT(LaunchMediaPlayer, Qt::Key_Video)
 
 // LaunchMusicPlayer
 KEY_MAP_GTK(LaunchMusicPlayer, GDK_Music)
+KEY_MAP_QT(LaunchMusicPlayer, Qt::Key_Music)
 KEY_MAP_ANDROID(LaunchMusicPlayer, AKEYCODE_MUSIC)
 
 // LaunchMyComputer
 KEY_MAP_GTK(LaunchMyComputer, GDK_MyComputer)
 KEY_MAP_GTK(LaunchMyComputer, GDK_Explorer)
+KEY_MAP_QT(LaunchMyComputer, Qt::Key_Explorer)
 
 // LaunchScreenSaver
 KEY_MAP_GTK(LaunchScreenSaver, GDK_ScreenSaver)
+KEY_MAP_QT(LaunchScreenSaver, Qt::Key_ScreenSaver)
 
 // LaunchSpreadsheet
 KEY_MAP_GTK(LaunchSpreadsheet, GDK_Excel)
+KEY_MAP_QT(LaunchSpreadsheet, Qt::Key_Excel)
 
 // LaunchWebBrowser
 KEY_MAP_GTK(LaunchWebBrowser, GDK_WWW)
+KEY_MAP_QT(LaunchWebBrowser, Qt::Key_WWW)
 KEY_MAP_ANDROID(LaunchWebBrowser, AKEYCODE_EXPLORER)
 
 // LaunchWebCam
 KEY_MAP_GTK(LaunchWebCam, GDK_WebCam)
+KEY_MAP_QT(LaunchWebCam, Qt::Key_WebCam)
 
 // LaunchWordProcessor
 KEY_MAP_GTK(LaunchWordProcessor, GDK_Word)
+KEY_MAP_QT(LaunchWordProcessor, Qt::Key_Word)
 
 // LaunchApplication1
 KEY_MAP_WIN(LaunchApplication1, VK_LAUNCH_APP1)
 KEY_MAP_WIN_CMD(LaunchApplication1, APPCOMMAND_LAUNCH_APP1)
 KEY_MAP_GTK(LaunchApplication1, GDK_Launch0)
+KEY_MAP_QT(LaunchApplication1, Qt::Key_Launch0)
 
 // LaunchApplication2
 KEY_MAP_WIN(LaunchApplication2, VK_LAUNCH_APP2)
 KEY_MAP_WIN_CMD(LaunchApplication2, APPCOMMAND_LAUNCH_APP2)
 KEY_MAP_GTK(LaunchApplication2, GDK_Launch1)
+KEY_MAP_QT(LaunchApplication2, Qt::Key_Launch1)
 
 // LaunchApplication3
 KEY_MAP_GTK(LaunchApplication3, GDK_Launch2)
+KEY_MAP_QT(LaunchApplication3, Qt::Key_Launch2)
 
 // LaunchApplication4
 KEY_MAP_GTK(LaunchApplication4, GDK_Launch3)
+KEY_MAP_QT(LaunchApplication4, Qt::Key_Launch3)
 
 // LaunchApplication5
 KEY_MAP_GTK(LaunchApplication5, GDK_Launch4)
+KEY_MAP_QT(LaunchApplication5, Qt::Key_Launch4)
 
 // LaunchApplication6
 KEY_MAP_GTK(LaunchApplication6, GDK_Launch5)
+KEY_MAP_QT(LaunchApplication6, Qt::Key_Launch5)
 
 // LaunchApplication7
 KEY_MAP_GTK(LaunchApplication7, GDK_Launch6)
+KEY_MAP_QT(LaunchApplication7, Qt::Key_Launch6)
 
 // LaunchApplication8
 KEY_MAP_GTK(LaunchApplication8, GDK_Launch7)
+KEY_MAP_QT(LaunchApplication8, Qt::Key_Launch7)
 
 // LaunchApplication9
 KEY_MAP_GTK(LaunchApplication9, GDK_Launch8)
+KEY_MAP_QT(LaunchApplication9, Qt::Key_Launch8)
 
 // LaunchApplication10
 KEY_MAP_GTK(LaunchApplication10, GDK_Launch9)
+KEY_MAP_QT(LaunchApplication10, Qt::Key_Launch9)
 
 // LaunchApplication11
 KEY_MAP_GTK(LaunchApplication11, GDK_LaunchA)
+KEY_MAP_QT(LaunchApplication11, Qt::Key_LaunchA)
 
 // LaunchApplication12
 KEY_MAP_GTK(LaunchApplication12, GDK_LaunchB)
+KEY_MAP_QT(LaunchApplication12, Qt::Key_LaunchB)
 
 // LaunchApplication13
 KEY_MAP_GTK(LaunchApplication13, GDK_LaunchC)
+KEY_MAP_QT(LaunchApplication13, Qt::Key_LaunchC)
 
 // LaunchApplication14
 KEY_MAP_GTK(LaunchApplication14, GDK_LaunchD)
+KEY_MAP_QT(LaunchApplication14, Qt::Key_LaunchD)
 
 // LaunchApplication15
 KEY_MAP_GTK(LaunchApplication15, GDK_LaunchE)
+KEY_MAP_QT(LaunchApplication15, Qt::Key_LaunchE)
 
 // LaunchApplication16
 KEY_MAP_GTK(LaunchApplication16, GDK_LaunchF)
+KEY_MAP_QT(LaunchApplication16, Qt::Key_LaunchF)
 
 // LaunchApplication17
+KEY_MAP_QT(LaunchApplication17, Qt::Key_LaunchG)
 
 // LaunchApplication18
+KEY_MAP_QT(LaunchApplication18, Qt::Key_LaunchH)
 
 /******************************************************************************
  * Browser Keys
@@ -1007,39 +1192,47 @@ KEY_MAP_GTK(LaunchApplication16, GDK_LaunchF)
 KEY_MAP_WIN(BrowserBack, VK_BROWSER_BACK)
 KEY_MAP_WIN_CMD(BrowserBack, APPCOMMAND_BROWSER_BACKWARD)
 KEY_MAP_GTK(BrowserBack, GDK_Back)
+KEY_MAP_QT(BrowserBack, Qt::Key_Back)
 
 // BrowserFavorites
 KEY_MAP_WIN(BrowserFavorites, VK_BROWSER_FAVORITES)
 KEY_MAP_WIN_CMD(BrowserFavorites, APPCOMMAND_BROWSER_FAVORITES)
+KEY_MAP_QT(BrowserFavorites, Qt::Key_Favorites)
 KEY_MAP_ANDROID(BrowserFavorites, AKEYCODE_BOOKMARK)
 
 // BrowserForward
 KEY_MAP_WIN(BrowserForward, VK_BROWSER_FORWARD)
 KEY_MAP_WIN_CMD(BrowserForward, APPCOMMAND_BROWSER_FORWARD)
 KEY_MAP_GTK(BrowserForward, GDK_Forward)
+KEY_MAP_QT(BrowserForward, Qt::Key_Forward)
 KEY_MAP_ANDROID(BrowserForward, AKEYCODE_FORWARD)
 
 // BrowserHome
 KEY_MAP_WIN(BrowserHome, VK_BROWSER_HOME)
 KEY_MAP_WIN_CMD(BrowserHome, APPCOMMAND_BROWSER_HOME)
 KEY_MAP_GTK(BrowserHome, GDK_HomePage)
+KEY_MAP_QT(BrowserHome, Qt::Key_HomePage)
 
 // BrowserRefresh
 KEY_MAP_WIN(BrowserRefresh, VK_BROWSER_REFRESH)
 KEY_MAP_WIN_CMD(BrowserRefresh, APPCOMMAND_BROWSER_REFRESH)
 KEY_MAP_GTK(BrowserRefresh, GDK_Refresh)
 KEY_MAP_GTK(BrowserRefresh, GDK_Reload)
+KEY_MAP_QT(BrowserRefresh, Qt::Key_Refresh)
+KEY_MAP_QT(BrowserRefresh, Qt::Key_Reload)
 
 // BrowserSearch
 KEY_MAP_WIN(BrowserSearch, VK_BROWSER_SEARCH)
 KEY_MAP_WIN_CMD(BrowserSearch, APPCOMMAND_BROWSER_SEARCH)
 KEY_MAP_GTK(BrowserSearch, GDK_Search)
+KEY_MAP_QT(BrowserSearch, Qt::Key_Search)
 KEY_MAP_ANDROID(BrowserSearch, AKEYCODE_SEARCH)
 
 // BrowserStop
 KEY_MAP_WIN(BrowserStop, VK_BROWSER_STOP)
 KEY_MAP_WIN_CMD(BrowserStop, APPCOMMAND_BROWSER_STOP)
 KEY_MAP_GTK(BrowserStop, GDK_Stop)
+KEY_MAP_QT(BrowserStop, Qt::Key_Stop)
 
 /******************************************************************************
  * Mobile Phone Keys
@@ -1051,9 +1244,11 @@ KEY_MAP_ANDROID(AppSwitch, AKEYCODE_APP_SWITCH)
 KEY_MAP_ANDROID(Call, AKEYCODE_CALL)
 
 // Camera
+KEY_MAP_QT(Camera, Qt::Key_Camera)
 KEY_MAP_ANDROID(Camera, AKEYCODE_CAMERA)
 
 // CameraFocus
+KEY_MAP_QT(CameraFocus, Qt::Key_CameraFocus)
 KEY_MAP_ANDROID(CameraFocus, AKEYCODE_FOCUS)
 
 // EndCall
@@ -1176,18 +1371,22 @@ KEY_MAP_ANDROID(AVRPower, AKEYCODE_AVR_POWER)
 
 // ColorF0Red
 KEY_MAP_GTK(ColorF0Red, GDK_Red)
+KEY_MAP_QT(ColorF0Red, Qt::Key_Red)
 KEY_MAP_ANDROID(ColorF0Red, AKEYCODE_PROG_RED)
 
 // ColorF1Green
 KEY_MAP_GTK(ColorF1Green, GDK_Green)
+KEY_MAP_QT(ColorF1Green, Qt::Key_Green)
 KEY_MAP_ANDROID(ColorF1Green, AKEYCODE_PROG_GREEN)
 
 // ColorF2Yellow
 KEY_MAP_GTK(ColorF2Yellow, GDK_Yellow)
+KEY_MAP_QT(ColorF2Yellow, Qt::Key_Yellow)
 KEY_MAP_ANDROID(ColorF2Yellow, AKEYCODE_PROG_YELLOW)
 
 // ColorF3Blue
 KEY_MAP_GTK(ColorF3Blue, GDK_Blue)
+KEY_MAP_QT(ColorF3Blue, Qt::Key_Blue)
 KEY_MAP_ANDROID(ColorF3Blue, AKEYCODE_PROG_BLUE)
 
 // ClosedCaptionToggle
@@ -1195,6 +1394,7 @@ KEY_MAP_ANDROID(ClosedCaptionToggle, AKEYCODE_CAPTIONS)
 
 // Dimmer
 KEY_MAP_GTK(Dimmer, GDK_BrightnessAdjust)
+KEY_MAP_QT(Dimmer, Qt::Key_BrightnessAdjust)
 
 // DVR
 KEY_MAP_ANDROID(DVR, AKEYCODE_DVR)
@@ -1210,6 +1410,7 @@ KEY_MAP_ANDROID(MediaAudioTrack, AKEYCODE_MEDIA_AUDIO_TRACK)
 
 // MediaLast
 KEY_MAP_ANDROID(MediaLast, AKEYCODE_LAST_CHANNEL)
+KEY_MAP_QT(MediaLast, Qt::Key_MediaLast)
 
 // MediaTopMenu
 KEY_MAP_ANDROID(MediaTopMenu, AKEYCODE_MEDIA_TOP_MENU)
@@ -1246,6 +1447,7 @@ KEY_MAP_ANDROID(PinPToggle, AKEYCODE_WINDOW)
 
 // RandomToggle
 KEY_MAP_GTK(RandomToggle, GDK_AudioRandomPlay)
+KEY_MAP_QT(RandomToggle, Qt::Key_AudioRandomPlay)
 
 // Settings
 KEY_MAP_ANDROID(Settings, AKEYCODE_SETTINGS)
@@ -1258,6 +1460,7 @@ KEY_MAP_ANDROID(STBPower, AKEYCODE_STB_POWER)
 
 // Subtitle
 KEY_MAP_GTK(Subtitle, GDK_Subtitle)
+KEY_MAP_QT(Subtitle, Qt::Key_Subtitle)
 
 // Teletext
 KEY_MAP_ANDROID(Teletext, AKEYCODE_TV_TELETEXT)
@@ -1267,6 +1470,7 @@ KEY_MAP_GTK(VideoModeNext, GDK_Next_VMode)
 
 // ZoomToggle
 KEY_MAP_WIN(ZoomToggle, VK_ZOOM)
+KEY_MAP_QT(ZoomToggle, Qt::Key_Zoom)
 KEY_MAP_ANDROID(ZoomToggle, AKEYCODE_TV_ZOOM_MODE)
 
 /******************************************************************************
@@ -1285,4 +1489,5 @@ KEY_MAP_ANDROID(SoftRight, AKEYCODE_SOFT_RIGHT)
 #undef KEY_MAP_WIN_CMD
 #undef KEY_MAP_COCOA
 #undef KEY_MAP_GTK
+#undef KEY_MAP_QT
 #undef KEY_MAP_ANDROID
diff --git a/widget/headless/HeadlessWidget.h b/widget/headless/HeadlessWidget.h
index 225f9636dd5c..9b6182e7bf32 100644
--- a/widget/headless/HeadlessWidget.h
+++ b/widget/headless/HeadlessWidget.h
@@ -15,6 +15,13 @@
 // in the platform specific widget code.
 #if defined(MOZ_WIDGET_GTK)
 #  define MOZ_HEADLESS_SCROLL_MULTIPLIER 3
+#  define MOZ_HEADLESS_SCROLL_DELTA_MODE \
+    mozilla::dom::WheelEvent_Binding::DOM_DELTA_LINE
+#elif defined(MOZ_WIDGET_QT)
+#  define MOZ_HEADLESS_MOUSE_MOVE 5  // QEvent::MouseMove
+#  define MOZ_HEADLESS_MOUSE_DOWN 2  // QEvent::MouseButtonPress
+#  define MOZ_HEADLESS_MOUSE_UP 3    // QEvent::MouseButtonRelease
+#  define MOZ_HEADLESS_SCROLL_MULTIPLIER 3
 #  define MOZ_HEADLESS_SCROLL_DELTA_MODE \
     mozilla::dom::WheelEvent_Binding::DOM_DELTA_LINE
 #elif defined(XP_WIN)
diff --git a/widget/moz.build b/widget/moz.build
index 07e6970e5621..e22cfcff292a 100644
--- a/widget/moz.build
+++ b/widget/moz.build
@@ -33,7 +33,7 @@ with Files("*FontRange*"):
 
 toolkit = CONFIG["MOZ_WIDGET_TOOLKIT"]
 
-if toolkit in ("android", "cocoa", "gtk", "uikit", "windows"):
+if toolkit in ("android", "cocoa", "gtk", "qt", "uikit", "windows"):
     DIRS += [toolkit]
 
 if toolkit == "cocoa":
@@ -266,12 +266,12 @@ if toolkit in ("cocoa", "windows"):
         "nsBaseClipboard.cpp",
     ]
 
-if toolkit in {"gtk", "cocoa", "windows", "android", "uikit"}:
+if toolkit in {"gtk", "cocoa", "windows", "android", "uikit", "qt"}:
     UNIFIED_SOURCES += [
         "nsBaseFilePicker.cpp",
     ]
 
-if toolkit in ("gtk", "windows", "cocoa", "android"):
+if toolkit in ("gtk", "windows", "cocoa", "android", "qt"):
     UNIFIED_SOURCES += [
         "nsNativeTheme.cpp",
     ]
diff --git a/widget/qt/GfxInfo.cpp b/widget/qt/GfxInfo.cpp
new file mode 100644
index 000000000000..9cb59c59438a
--- /dev/null
+++ b/widget/qt/GfxInfo.cpp
@@ -0,0 +1,268 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <QScreen>
+#include <QGuiApplication>
+
+#include "GfxInfo.h"
+
+using namespace mozilla::widget;
+
+/* GetD2DEnabled and GetDwriteEnabled shouldn't be called until after gfxPlatform initialization
+ * has occurred because they depend on it for information. (See bug 591561) */
+nsresult
+GfxInfo::GetD2DEnabled(bool *aEnabled)
+{
+  return NS_ERROR_FAILURE;
+}
+
+nsresult
+GfxInfo::GetDWriteEnabled(bool *aEnabled)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetHasBattery(bool* aHasBattery) {
+  return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetDWriteVersion(nsAString & aDwriteVersion)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetCleartypeParameters(nsAString & aCleartypeParams)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetWindowProtocol(nsAString& aWindowProtocol) {
+  return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetDesktopEnvironment(nsAString& aDesktopEnvironment) {
+  return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDescription(nsAString & aAdapterDescription)
+{
+  aAdapterDescription.Truncate();
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDescription2(nsAString & aAdapterDescription)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterRAM(uint32_t* aAdapterRAM)
+{
+  *aAdapterRAM = 0;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterRAM2(uint32_t* aAdapterRAM)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDriver(nsAString & aAdapterDriver)
+{
+  aAdapterDriver.Truncate();
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDriver2(nsAString & aAdapterDriver)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDriverVendor(nsAString& aAdapterDriverVendor) {
+  aAdapterDriverVendor.Truncate();
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDriverVendor2(nsAString& aAdapterDriverVendor) {
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDriverVersion(nsAString & aAdapterDriverVersion)
+{
+  aAdapterDriverVersion.Truncate();
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDriverVersion2(nsAString & aAdapterDriverVersion)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDriverDate(nsAString & aAdapterDriverDate)
+{
+  aAdapterDriverDate.Truncate();
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDriverDate2(nsAString & aAdapterDriverDate)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterVendorID(nsAString & aAdapterVendorID)
+{
+  aAdapterVendorID.Truncate();
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterVendorID2(nsAString & aAdapterVendorID)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDeviceID(nsAString & aAdapterDeviceID)
+{
+  aAdapterDeviceID.Truncate();
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterDeviceID2(nsAString & aAdapterDeviceID)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterSubsysID(nsAString & aAdapterSubsysID)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetAdapterSubsysID2(nsAString & aAdapterSubsysID)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetIsGPU2Active(bool* aIsGPU2Active)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetDisplayInfo(nsTArray<nsString>& aDisplayInfo) {
+  for (QScreen *screen : QGuiApplication::screens()) {
+    nsString value;
+    value.AppendPrintf("%dx%d@%dHz",
+                       screen->size().width(),
+                       screen->size().height(),
+                       screen->refreshRate());
+
+    aDisplayInfo.AppendElement(value);
+  }
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetDisplayWidth(nsTArray<uint32_t>& aDisplayWidth) {
+  for (QScreen *screen : QGuiApplication::screens()) {
+    aDisplayWidth.AppendElement((uint32_t)screen->size().width());
+  }
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+GfxInfo::GetDisplayHeight(nsTArray<uint32_t>& aDisplayHeight) {
+  for (QScreen *screen : QGuiApplication::screens()) {
+    aDisplayHeight.AppendElement((uint32_t)screen->size().height());
+  }
+  return NS_OK;
+}
+
+const nsTArray<GfxDriverInfo>&
+GfxInfo::GetGfxDriverInfo()
+{
+  return *sDriverInfo;
+}
+
+uint32_t GfxInfo::OperatingSystemVersion()
+{
+  return 0;
+}
+
+nsresult
+GfxInfo::GetFeatureStatusImpl(int32_t /*aFeature*/, 
+                              int32_t *aStatus, 
+                              nsAString & /*aSuggestedDriverVersion*/,
+                              const nsTArray<GfxDriverInfo>& /*aDriverInfo*/, 
+                              nsACString & /*aFailureId*/,
+                              OperatingSystem* /*aOS*/ /* = nullptr */)
+{
+  NS_ENSURE_ARG_POINTER(aStatus);
+  *aStatus = nsIGfxInfo::FEATURE_STATUS_OK;
+
+  return NS_OK;
+}
+
+NS_IMETHODIMP GfxInfo::GetEmbeddedInFirefoxReality(bool *aEmbeddedInFirefoxReality)
+{
+  return NS_ERROR_FAILURE;
+}
+
+NS_IMETHODIMP GfxInfo::GetTestType(nsAString& aTestType)
+{
+  return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+NS_IMETHODIMP GfxInfo::GetDrmRenderDevice(nsACString& aDrmRenderDevice)
+{
+  return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+#ifdef DEBUG
+
+// Implement nsIGfxInfoDebug
+
+NS_IMETHODIMP GfxInfo::SpoofVendorID(const nsAString &)
+{
+  return NS_OK;
+}
+
+NS_IMETHODIMP GfxInfo::SpoofDeviceID(const nsAString &)
+{
+  return NS_OK;
+}
+
+NS_IMETHODIMP GfxInfo::SpoofDriverVersion(const nsAString &)
+{
+  return NS_OK;
+}
+
+NS_IMETHODIMP GfxInfo::SpoofOSVersion(uint32_t)
+{
+  return NS_OK;
+}
+
+#endif
diff --git a/widget/qt/GfxInfo.h b/widget/qt/GfxInfo.h
new file mode 100644
index 000000000000..dcd6a39488fc
--- /dev/null
+++ b/widget/qt/GfxInfo.h
@@ -0,0 +1,79 @@
+/* vim: se cin sw=2 ts=2 et : */
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef __mozilla_widget_GfxInfo_h__
+#define __mozilla_widget_GfxInfo_h__
+
+#include "GfxInfoBase.h"
+#include "GfxDriverInfo.h"
+
+#include "nsString.h"
+
+namespace mozilla {
+namespace widget {
+
+class GfxInfo : public GfxInfoBase
+{
+public:
+  // We only declare the subset of nsIGfxInfo that we actually implement. The
+  // rest is brought forward from GfxInfoBase.
+  NS_IMETHOD GetD2DEnabled(bool *aD2DEnabled) override;
+  NS_IMETHOD GetDWriteEnabled(bool *aDWriteEnabled) override;
+  NS_IMETHOD GetDWriteVersion(nsAString & aDwriteVersion) override;
+  NS_IMETHOD GetHasBattery(bool* aHasBattery) override;
+  NS_IMETHOD GetCleartypeParameters(nsAString & aCleartypeParams) override;
+  NS_IMETHOD GetWindowProtocol(nsAString& aWindowProtocol) override;
+  NS_IMETHOD GetDesktopEnvironment(nsAString& aDesktopEnvironment) override;
+  NS_IMETHOD GetAdapterDescription(nsAString & aAdapterDescription) override;
+  NS_IMETHOD GetAdapterDriver(nsAString & aAdapterDriver) override;
+  NS_IMETHOD GetAdapterVendorID(nsAString & aAdapterVendorID) override;
+  NS_IMETHOD GetAdapterDeviceID(nsAString & aAdapterDeviceID) override;
+  NS_IMETHOD GetAdapterSubsysID(nsAString & aAdapterSubsysID) override;
+  NS_IMETHOD GetAdapterRAM(uint32_t* aAdapterRAM) override;
+  NS_IMETHOD GetAdapterDriverVendor(nsAString& aAdapterDriverVendor) override;
+  NS_IMETHOD GetAdapterDriverVersion(nsAString & aAdapterDriverVersion) override;
+  NS_IMETHOD GetAdapterDriverDate(nsAString & aAdapterDriverDate) override;
+  NS_IMETHOD GetAdapterDescription2(nsAString & aAdapterDescription) override;
+  NS_IMETHOD GetAdapterDriver2(nsAString & aAdapterDriver) override;
+  NS_IMETHOD GetAdapterVendorID2(nsAString & aAdapterVendorID) override;
+  NS_IMETHOD GetAdapterDeviceID2(nsAString & aAdapterDeviceID) override;
+  NS_IMETHOD GetAdapterSubsysID2(nsAString & aAdapterSubsysID) override;
+  NS_IMETHOD GetAdapterRAM2(uint32_t* aAdapterRAM) override;
+  NS_IMETHOD GetAdapterDriverVendor2(nsAString& aAdapterDriverVendor) override;
+  NS_IMETHOD GetAdapterDriverVersion2(nsAString & aAdapterDriverVersion) override;
+  NS_IMETHOD GetAdapterDriverDate2(nsAString & aAdapterDriverDate) override;
+  NS_IMETHOD GetIsGPU2Active(bool *aIsGPU2Active) override;
+  NS_IMETHOD GetDisplayInfo(nsTArray<nsString>& aDisplayInfo) override;
+  NS_IMETHOD GetDisplayWidth(nsTArray<uint32_t>& aDisplayWidth) override;
+  NS_IMETHOD GetDisplayHeight(nsTArray<uint32_t>& aDisplayHeight) override;
+
+  NS_IMETHOD GetEmbeddedInFirefoxReality(bool *aEmbeddedInFirefoxReality) override;
+  NS_IMETHOD GetTestType(nsAString& aTestType) override;
+  NS_IMETHOD GetDrmRenderDevice(nsACString& aDrmRenderDevice) override;
+
+  using GfxInfoBase::GetFeatureStatus;
+  using GfxInfoBase::GetFeatureSuggestedDriverVersion;
+
+  virtual uint32_t OperatingSystemVersion() override;
+
+#ifdef DEBUG
+  NS_DECL_NSIGFXINFODEBUG
+#endif
+
+protected:
+  virtual nsresult GetFeatureStatusImpl(int32_t aFeature,
+                                        int32_t *aStatus,
+                                        nsAString & aSuggestedDriverVersion,
+                                        const nsTArray<GfxDriverInfo>& aDriverInfo, nsACString &aFailureId,
+                                        OperatingSystem* aOS = nullptr) override;
+  virtual const nsTArray<GfxDriverInfo>& GetGfxDriverInfo() override;
+};
+
+} // namespace widget
+} // namespace mozilla
+
+#endif /* __mozilla_widget_GfxInfo_h__ */
diff --git a/widget/qt/MediaKeysEventSourceFactory.cpp b/widget/qt/MediaKeysEventSourceFactory.cpp
new file mode 100644
index 000000000000..4fe66e717511
--- /dev/null
+++ b/widget/qt/MediaKeysEventSourceFactory.cpp
@@ -0,0 +1,13 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "MediaKeysEventSourceFactory.h"
+
+namespace mozilla::widget {
+
+mozilla::dom::MediaControlKeySource* CreateMediaControlKeySource() {
+  return nullptr;
+}
+
+}  // namespace mozilla::widget
diff --git a/widget/qt/ProcInfo.cpp b/widget/qt/ProcInfo.cpp
new file mode 100644
index 000000000000..1538b561b4c2
--- /dev/null
+++ b/widget/qt/ProcInfo.cpp
@@ -0,0 +1,285 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=8 sts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "mozilla/ProcInfo.h"
+#include "mozilla/Sprintf.h"
+#include "mozilla/Logging.h"
+#include "mozilla/ipc/GeckoChildProcessHost.h"
+#include "nsAutoRef.h"
+#include "nsLocalFile.h"
+#include "nsNetCID.h"
+#include "nsWhitespaceTokenizer.h"
+
+#include <cstdio>
+#include <cstring>
+#include <unistd.h>
+#include <dirent.h>
+
+#define NANOPERSEC 1000000000.
+
+template <>
+class nsAutoRefTraits<DIR> : public nsPointerRefTraits<DIR> {
+ public:
+  static void Release(DIR* dirHandle) { closedir(dirHandle); }
+};
+
+namespace mozilla {
+
+// StatReader can parse and tokenize a POSIX stat file.
+// see http://man7.org/linux/man-pages/man5/proc.5.html
+//
+// Its usage is quite simple:
+//
+// StatReader reader(pid);
+// ProcInfo info;
+// rv = reader.ParseProc(info);
+// if (NS_FAILED(rv)) {
+//     // the reading of the file or its parsing failed.
+// }
+//
+class StatReader {
+ public:
+  explicit StatReader(const base::ProcessId aPid)
+      : mPid(aPid), mMaxIndex(53), mTicksPerSec(sysconf(_SC_CLK_TCK)) {
+    mFilepath.AppendPrintf("/proc/%u/stat", mPid);
+  }
+
+  nsresult ParseProc(ProcInfo& aInfo) {
+    nsAutoString fileContent;
+    nsresult rv = ReadFile(fileContent);
+    NS_ENSURE_SUCCESS(rv, rv);
+    // We first extract the filename
+    int32_t startPos = fileContent.RFindChar('(');
+    if (startPos == -1) {
+      return NS_ERROR_FAILURE;
+    }
+    int32_t endPos = fileContent.RFindChar(')');
+    if (endPos == -1) {
+      return NS_ERROR_FAILURE;
+    }
+    int32_t len = endPos - (startPos + 1);
+    aInfo.filename.Assign(Substring(fileContent, startPos + 1, len));
+
+    // now we can use the tokenizer for the rest of the file
+    nsWhitespaceTokenizer tokenizer(Substring(fileContent, endPos + 2));
+    int32_t index = 2;  // starting at third field
+    while (tokenizer.hasMoreTokens() && index < mMaxIndex) {
+      const nsAString& token = tokenizer.nextToken();
+      rv = UseToken(index, token, aInfo);
+      NS_ENSURE_SUCCESS(rv, rv);
+      index++;
+    }
+    return NS_OK;
+  }
+
+ protected:
+  // Called for each token found in the stat file.
+  nsresult UseToken(int32_t aIndex, const nsAString& aToken, ProcInfo& aInfo) {
+    // We're using a subset of what stat has to offer for now.
+    nsresult rv = NS_OK;
+    // see the proc documentation for fields index references.
+    switch (aIndex) {
+      case 13:
+        // Amount of time that this process has been scheduled
+        // in user mode, measured in clock ticks
+        aInfo.cpuUser = GetCPUTime(aToken, &rv);
+        NS_ENSURE_SUCCESS(rv, rv);
+        break;
+      case 14:
+        // Amount of time that this process has been scheduled
+        // in kernel mode, measured in clock ticks
+        aInfo.cpuKernel = GetCPUTime(aToken, &rv);
+        NS_ENSURE_SUCCESS(rv, rv);
+        break;
+      case 22:
+        // Virtual memory size in bytes.
+        aInfo.virtualMemorySize = Get64Value(aToken, &rv);
+        NS_ENSURE_SUCCESS(rv, rv);
+        break;
+      case 23:
+        // Resident Set Size: number of pages the process has
+        // in real memory.
+        uint64_t pageCount = Get64Value(aToken, &rv);
+        NS_ENSURE_SUCCESS(rv, rv);
+        uint64_t pageSize = sysconf(_SC_PAGESIZE);
+        aInfo.residentSetSize = pageCount * pageSize;
+        break;
+    }
+    return rv;
+  }
+
+  // Converts a token into a int64_t
+  uint64_t Get64Value(const nsAString& aToken, nsresult* aRv) {
+    // We can't use aToken.ToInteger64() since it returns a signed 64.
+    // and that can result into an overflow.
+    nsresult rv = NS_OK;
+    uint64_t out = 0;
+    if (sscanf(NS_ConvertUTF16toUTF8(aToken).get(), "%" PRIu64, &out) == 0) {
+      rv = NS_ERROR_FAILURE;
+    }
+    *aRv = rv;
+    return out;
+  }
+
+  // Converts a token into CPU time in nanoseconds.
+  uint64_t GetCPUTime(const nsAString& aToken, nsresult* aRv) {
+    nsresult rv;
+    uint64_t value = Get64Value(aToken, &rv);
+    *aRv = rv;
+    if (NS_FAILED(rv)) {
+      return 0;
+    }
+    if (value) {
+      value = (value * NANOPERSEC) / mTicksPerSec;
+    }
+    return value;
+  }
+
+  base::ProcessId mPid;
+  int32_t mMaxIndex;
+  nsCString mFilepath;
+  ProcInfo mProcInfo;
+
+ private:
+  // Reads the stat file and puts its content in a nsString.
+  nsresult ReadFile(nsAutoString& aFileContent) {
+    RefPtr<nsLocalFile> file = new nsLocalFile(mFilepath);
+    bool exists;
+    nsresult rv = file->Exists(&exists);
+    NS_ENSURE_SUCCESS(rv, rv);
+    if (!exists) {
+      return NS_ERROR_FAILURE;
+    }
+    // /proc is a virtual file system and all files are
+    // of size 0, so GetFileSize() and related functions will
+    // return 0 - so the way to read the file is to fill a buffer
+    // of an arbitrary big size and look for the end of line char.
+    FILE* fstat;
+    if (NS_FAILED(file->OpenANSIFileDesc("r", &fstat)) || !fstat) {
+      return NS_ERROR_FAILURE;
+    }
+    char buffer[2048];
+    char* end;
+    char* start = fgets(buffer, 2048, fstat);
+    fclose(fstat);
+    if (start == nullptr) {
+      return NS_ERROR_FAILURE;
+    }
+    // let's find the end
+    end = strchr(buffer, '\n');
+    if (!end) {
+      return NS_ERROR_FAILURE;
+    }
+    aFileContent.AssignASCII(buffer, size_t(end - start));
+    return NS_OK;
+  }
+
+  int64_t mTicksPerSec;
+};
+
+// Threads have the same stat file. The only difference is its path
+// and we're getting less info in the ThreadInfo structure.
+class ThreadInfoReader final : public StatReader {
+ public:
+  ThreadInfoReader(const base::ProcessId aPid, const base::ProcessId aTid)
+      : StatReader(aPid), mTid(aTid) {
+    // Adding the thread path
+    mFilepath.Truncate();
+    mFilepath.AppendPrintf("/proc/%u/task/%u/stat", aPid, mTid);
+    mMaxIndex = 17;
+  }
+
+  nsresult ParseThread(ThreadInfo& aInfo) {
+    ProcInfo info;
+    nsresult rv = StatReader::ParseProc(info);
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    aInfo.tid = mTid;
+    // Copying over the data we got from StatReader::ParseProc()
+    aInfo.cpuKernel = info.cpuKernel;
+    aInfo.cpuUser = info.cpuUser;
+    aInfo.name.Assign(info.filename);
+    return NS_OK;
+  }
+
+ private:
+  base::ProcessId mTid;
+};
+
+RefPtr<ProcInfoPromise> GetProcInfo(base::ProcessId pid, int32_t childId,
+                                    const ProcType& type,
+                                    const nsAString& origin) {
+  auto holder = MakeUnique<MozPromiseHolder<ProcInfoPromise>>();
+  RefPtr<ProcInfoPromise> promise = holder->Ensure(__func__);
+  nsresult rv = NS_OK;
+  nsCOMPtr<nsIEventTarget> target =
+      do_GetService(NS_STREAMTRANSPORTSERVICE_CONTRACTID, &rv);
+  if (NS_FAILED(rv)) {
+    NS_WARNING("Failed to get stream transport service");
+    holder->Reject(rv, __func__);
+    return promise;
+  }
+
+  // Ensure that the string is still alive when the runnable is called.
+  nsString originCopy(origin);
+  RefPtr<nsIRunnable> r = NS_NewRunnableFunction(
+      __func__, [holder = std::move(holder), pid, type,
+                 originCopy = std::move(originCopy), childId]() {
+        // opening the stat file and reading its content
+        StatReader reader(pid);
+        ProcInfo info;
+        nsresult rv = reader.ParseProc(info);
+        if (NS_FAILED(rv)) {
+          holder->Reject(rv, __func__);
+          return;
+        }
+        // Extra info
+        info.pid = pid;
+        info.childId = childId;
+        info.type = type;
+        info.origin = originCopy;
+
+        // Let's look at the threads
+        nsCString taskPath;
+        taskPath.AppendPrintf("/proc/%u/task", pid);
+        nsAutoRef<DIR> dirHandle(opendir(taskPath.get()));
+        if (!dirHandle) {
+          // No threads ? Let's stop here and ignore the problem.
+          holder->Resolve(info, __func__);
+          return;
+        }
+
+        // If we can't read some thread info, we ignore that thread.
+        dirent* entry;
+        while ((entry = readdir(dirHandle)) != nullptr) {
+          if (entry->d_name[0] == '.') {
+            continue;
+          }
+          // Threads have a stat file, like processes.
+          nsAutoCString entryName(entry->d_name);
+          int32_t tid = entryName.ToInteger(&rv);
+          if (NS_FAILED(rv)) {
+            continue;
+          }
+          ThreadInfoReader reader(pid, tid);
+          ThreadInfo threadInfo;
+          rv = reader.ParseThread(threadInfo);
+          if (NS_FAILED(rv)) {
+            continue;
+          }
+          info.threads.AppendElement(threadInfo);
+        }
+        holder->Resolve(info, __func__);
+      });
+
+  rv = target->Dispatch(r.forget(), NS_DISPATCH_NORMAL);
+  if (NS_FAILED(rv)) {
+    NS_WARNING("Failed to dispatch the LoadDataRunnable.");
+  }
+  return promise;
+}
+
+}  // namespace mozilla
diff --git a/widget/qt/components.conf b/widget/qt/components.conf
new file mode 100644
index 000000000000..49f61dbd8a80
--- /dev/null
+++ b/widget/qt/components.conf
@@ -0,0 +1,98 @@
+# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+Headers = [
+    '/widget/qt/nsWidgetFactory.h',
+]
+
+InitFunc = 'nsWidgetQtModuleCtor'
+UnloadFunc = 'nsWidgetQtModuleDtor'
+
+Classes = [
+    {
+        'cid': '{2d96b3df-c051-11d1-a827-0040959a28c9}',
+        'contract_ids': ['@mozilla.org/widget/appshell/qt;1'],
+        'headers': ['/widget/qt/nsWidgetFactory.h'],
+        'legacy_constructor': 'nsAppShellConstructor',
+        'processes': ProcessSelector.ALLOW_IN_GPU_RDD_VR_AND_SOCKET_PROCESS,
+    },
+    {
+        'cid': '{c401eb80-f9ea-11d3-bb6f-e732b73ebe7c}',
+        'contract_ids': ['@mozilla.org/gfx/screenmanager;1'],
+        'singleton': True,
+        'type': 'mozilla::widget::ScreenManager',
+        'constructor': 'mozilla::widget::ScreenManager::GetAddRefedSingleton',
+        'headers': ['/widget/ScreenManager.h'],
+        'processes': ProcessSelector.MAIN_PROCESS_ONLY,
+    },
+    {
+        'cid': '{948a0023-e3a7-11d2-96cf-0060b0fb9956}',
+        'contract_ids': ['@mozilla.org/widget/htmlformatconverter;1'],
+        'type': 'nsHTMLFormatConverter',
+        'headers': ['/widget/nsHTMLFormatConverter.h'],
+    },
+    {
+        'cid': '{8b5314bc-db01-11d2-96ce-0060b0fb9956}',
+        'contract_ids': ['@mozilla.org/widget/transferable;1'],
+        'type': 'nsTransferable',
+        'headers': ['/widget/nsTransferable.h'],
+    },
+    {
+        'cid': '{77221d5a-1dd2-11b2-8c69-c710f15d2ed5}',
+        'contract_ids': ['@mozilla.org/widget/clipboardhelper;1'],
+        'type': 'nsClipboardHelper',
+        'headers': ['/widget/nsClipboardHelper.h'],
+    },
+    {
+        'name': 'GfxInfo',
+        'cid': '{d755a760-9f27-11df-0800-200c9a664242}',
+        'contract_ids': ['@mozilla.org/gfx/info;1'],
+        'type': 'mozilla::widget::GfxInfo',
+        'headers': ['/widget/qt/GfxInfo.h'],
+        'init_method': 'Init',
+        'processes': ProcessSelector.ALLOW_IN_GPU_RDD_AND_SOCKET_PROCESS,
+    },
+    {
+        'cid': '{6987230e-0098-4e78-bc5f-1493ee7519fa}',
+        'contract_ids': ['@mozilla.org/widget/useridleservice;1'],
+        'singleton': True,
+        'type': 'nsUserIdleServiceQt',
+        'constructor': 'nsUserIdleServiceQt::GetInstance',
+        'headers': ['/widget/qt/nsUserIdleServiceQt.h', 'nsUserIdleService.h'],
+    },
+]
+
+if defined('NS_PRINTING'):
+    Classes += [
+        {
+            'cid': '{d3f69889-e13a-4321-980c-a39332e21f34}',
+            'contract_ids': ['@mozilla.org/gfx/devicecontextspec;1'],
+            'type': 'nsDeviceContextSpecQt',
+            'headers': ['/widget/qt/nsDeviceContextSpecQt.h'],
+        },
+        {
+            'cid': '{06beec76-a183-4d9f-85dd-085f26da565a}',
+            'contract_ids': ['@mozilla.org/widget/printdialog-service;1'],
+            'type': 'nsPrintDialogServiceQt',
+            'headers': ['/widget/qt/nsPrintDialogQt.h'],
+            'init_method': 'Init',
+            'processes': ProcessSelector.MAIN_PROCESS_ONLY,
+        },
+        {
+            'cid': '{2f977d53-5485-11d4-87e2-0010a4e75ef2}',
+            'contract_ids': ['@mozilla.org/gfx/printsession;1'],
+            'type': 'nsPrintSession',
+            'headers': ['/widget/nsPrintSession.h'],
+            'init_method': 'Init',
+        },
+        {
+            'cid': '{841387c8-72e6-484b-9296-bf6eea80d58a}',
+            'contract_ids': ['@mozilla.org/gfx/printsettings-service;1'],
+            'type': 'nsPrintOptionsQt',
+            'headers': ['/widget/qt/nsPrintOptionsQt.h'],
+            'init_method': 'Init',
+        },
+    ]
diff --git a/widget/qt/moz.build b/widget/qt/moz.build
new file mode 100644
index 000000000000..5e4f4dcca23c
--- /dev/null
+++ b/widget/qt/moz.build
@@ -0,0 +1,71 @@
+# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
+# vim: set filetype=python:
+# This Source Code Form is subject to the terms of the Mozilla Public
+# License, v. 2.0. If a copy of the MPL was not distributed with this
+# file, You can obtain one at http://mozilla.org/MPL/2.0/.
+
+SOURCES += [
+    '!moc_nsAppShell.cpp',
+    'MediaKeysEventSourceFactory.cpp',
+    'nsAppShell.cpp',
+    'nsBidiKeyboard.cpp',
+    'nsLookAndFeel.cpp',
+    'nsNativeBasicThemeQt.cpp',
+    'nsNativeThemeQt.cpp',
+    'nsScreenManagerQt.cpp',
+    'nsScreenQt.cpp',
+    'nsUserIdleServiceQt.cpp',
+    'nsWidgetFactory.cpp',
+    'ProcInfo.cpp',
+]
+
+
+if CONFIG['NS_PRINTING']:
+    SOURCES += [
+        'nsDeviceContextSpecQt.cpp',
+        'nsPrintDialogQt.cpp',
+        'nsPrintOptionsQt.cpp',
+        'nsPrintSettingsQt.cpp',
+    ]
+
+XPCOM_MANIFESTS += [
+    'components.conf',
+]
+
+include('/ipc/chromium/chromium-config.mozbuild')
+
+FINAL_LIBRARY = 'xul'
+
+LOCAL_INCLUDES += [
+    '/gfx/2d',
+    '/layout/painting',
+    '/widget',
+]
+
+if CONFIG['MOZ_X11']:
+    LOCAL_INCLUDES += [
+        '../x11',
+    ]
+else:
+    SOURCES += [
+        'GfxInfo.cpp',
+    ]
+
+
+#DEFINES['DEBUG_WIDGETS'] = True
+
+if CONFIG['OS_ARCH'] == 'Linux':
+    DEFINES['_BSD_SOURCE'] = True
+
+if CONFIG['OS_ARCH'] == 'SunOS' and not CONFIG['GNU_CC']:
+    # When using Sun's WorkShop compiler, including
+    # /wherever/workshop-5.0/SC5.0/include/CC/std/time.h
+    # causes most of these compiles to fail with:
+    # line 29: Error: Multiple declaration for std::tm.
+    # So, this gets around the problem.
+    DEFINES['_TIME_H'] = 1
+
+CXXFLAGS += CONFIG['MOZ_QT_CFLAGS']
+CXXFLAGS += CONFIG['MOZ_CAIRO_CFLAGS']
+CFLAGS += CONFIG['MOZ_QT_CFLAGS']
+CFLAGS += CONFIG['MOZ_CAIRO_CFLAGS']
diff --git a/widget/qt/nsAppShell.cpp b/widget/qt/nsAppShell.cpp
new file mode 100644
index 000000000000..a7a06a4f528d
--- /dev/null
+++ b/widget/qt/nsAppShell.cpp
@@ -0,0 +1,80 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* vim:expandtab:shiftwidth=4:tabstop=4:
+ */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsAppShell.h"
+#include <QGuiApplication>
+#include <unistd.h>
+#include <fcntl.h>
+#include <errno.h>
+
+#include <qabstracteventdispatcher.h>
+#include <qthread.h>
+
+#include "prenv.h"
+#include "nsQAppInstance.h"
+
+#ifdef MOZ_LOGGING
+#include "mozilla/Logging.h"
+#endif
+
+using mozilla::LazyLogModule;
+
+LazyLogModule gWidgetLog("Widget");
+LazyLogModule gWidgetFocusLog("WidgetFocus");
+LazyLogModule gWidgetDragLog("WidgetDrag");
+LazyLogModule gWidgetDrawLog("WidgetDraw");
+
+static int sPokeEvent;
+
+nsAppShell::~nsAppShell()
+{
+    nsQAppInstance::Release();
+}
+
+nsresult
+nsAppShell::Init()
+{
+    sPokeEvent = QEvent::registerEventType();
+
+    nsQAppInstance::AddRef();
+
+    return nsBaseAppShell::Init();
+}
+
+void
+nsAppShell::ScheduleNativeEventCallback()
+{
+    QCoreApplication::postEvent(this,
+                                new QEvent((QEvent::Type) sPokeEvent));
+}
+
+
+bool
+nsAppShell::ProcessNextNativeEvent(bool mayWait)
+{
+    QEventLoop::ProcessEventsFlags flags = QEventLoop::AllEvents;
+
+    if (mayWait)
+        flags |= QEventLoop::WaitForMoreEvents;
+
+    QAbstractEventDispatcher *dispatcher =  QAbstractEventDispatcher::instance(QThread::currentThread());
+    if (!dispatcher)
+        return false;
+
+    return dispatcher->processEvents(flags) ? true : false;
+}
+
+bool
+nsAppShell::event (QEvent *e)
+{
+    if (e->type() == sPokeEvent) {
+        NativeEventCallback();
+        return true;
+    }
+
+    return false;
+}
diff --git a/widget/qt/nsBidiKeyboard.cpp b/widget/qt/nsBidiKeyboard.cpp
new file mode 100644
index 000000000000..8dc57fd2f0bc
--- /dev/null
+++ b/widget/qt/nsBidiKeyboard.cpp
@@ -0,0 +1,54 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* vim:expandtab:shiftwidth=4:tabstop=4:
+ */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <Qt>
+#include <QGuiApplication>
+#include "nsBidiKeyboard.h"
+#include "nsIWidget.h"
+
+NS_IMPL_ISUPPORTS(nsBidiKeyboard, nsIBidiKeyboard)
+
+nsBidiKeyboard::nsBidiKeyboard() : nsIBidiKeyboard()
+{
+  Reset();
+}
+
+nsBidiKeyboard::~nsBidiKeyboard()
+{
+}
+
+NS_IMETHODIMP nsBidiKeyboard::Reset()
+{
+  return NS_OK;
+}
+
+NS_IMETHODIMP nsBidiKeyboard::IsLangRTL(bool *aIsRTL)
+{
+    *aIsRTL = false;
+
+    QInputMethod* input = qApp->inputMethod();
+    Qt::LayoutDirection layoutDir = input ? input->inputDirection() : Qt::LeftToRight;
+
+    if (layoutDir == Qt::RightToLeft) {
+        *aIsRTL = true;
+    }
+
+    return NS_OK;
+}
+
+NS_IMETHODIMP nsBidiKeyboard::GetHaveBidiKeyboards(bool* aResult)
+{
+  // not implemented yet
+  return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+// static
+already_AddRefed<nsIBidiKeyboard>
+nsIWidget::CreateBidiKeyboardInner()
+{
+  return do_AddRef(new nsBidiKeyboard());
+}
diff --git a/widget/qt/nsBidiKeyboard.h b/widget/qt/nsBidiKeyboard.h
new file mode 100644
index 000000000000..c22bf4ab8c10
--- /dev/null
+++ b/widget/qt/nsBidiKeyboard.h
@@ -0,0 +1,25 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* vim:expandtab:shiftwidth=4:tabstop=4:
+ */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef __nsBidiKeyboard
+#define __nsBidiKeyboard
+#include "nsIBidiKeyboard.h"
+
+class nsBidiKeyboard : public nsIBidiKeyboard
+{
+public:
+    NS_DECL_ISUPPORTS
+    NS_DECL_NSIBIDIKEYBOARD
+
+    nsBidiKeyboard();
+
+protected:
+    virtual ~nsBidiKeyboard();
+};
+
+
+#endif // __nsBidiKeyboard
diff --git a/widget/qt/nsDeviceContextSpecQt.cpp b/widget/qt/nsDeviceContextSpecQt.cpp
new file mode 100644
index 000000000000..926f0af1cfee
--- /dev/null
+++ b/widget/qt/nsDeviceContextSpecQt.cpp
@@ -0,0 +1,190 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+
+#include <QTemporaryFile>
+
+#define SET_PRINTER_FEATURES_VIA_PREFS 1
+#define PRINTERFEATURES_PREF "print.tmp.printerfeatures"
+
+#include "mozilla/gfx/PrintTargetPDF.h"
+#include "mozilla/Logging.h"
+
+#include "plstr.h"
+
+#include "nsDeviceContextSpecQt.h"
+
+#include "prenv.h" /* for PR_GetEnv */
+
+#include "nsReadableUtils.h"
+#include "nsStringEnumerator.h"
+#include "nsIServiceManager.h"
+#include "nsPrintSettingsQt.h"
+#include "nsIFileStreams.h"
+#include "nsIFile.h"
+#include "nsTArray.h"
+
+#include <unistd.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+
+using namespace mozilla;
+using namespace mozilla::gfx;
+
+static LazyLogModule DeviceContextSpecQtLM("DeviceContextSpecQt");
+/* Macro to make lines shorter */
+#define DO_PR_DEBUG_LOG(x) MOZ_LOG(DeviceContextSpecQtLM, mozilla::LogLevel::Debug, x)
+
+nsDeviceContextSpecQt::nsDeviceContextSpecQt()
+{
+    DO_PR_DEBUG_LOG(("nsDeviceContextSpecQt::nsDeviceContextSpecQt()\n"));
+}
+
+nsDeviceContextSpecQt::~nsDeviceContextSpecQt()
+{
+    DO_PR_DEBUG_LOG(("nsDeviceContextSpecQt::~nsDeviceContextSpecQt()\n"));
+}
+
+NS_IMPL_ISUPPORTS(nsDeviceContextSpecQt,
+        nsIDeviceContextSpec)
+
+already_AddRefed<PrintTarget> nsDeviceContextSpecQt::MakePrintTarget()
+{
+    double width, height;
+    mPrintSettings->GetEffectivePageSize(&width, &height);
+
+    // If we're in landscape mode, we'll be rotating the output --
+    // need to swap width & height.
+    int32_t orientation;
+    mPrintSettings->GetOrientation(&orientation);
+    if (nsIPrintSettings::kLandscapeOrientation == orientation) {
+        double tmp = width;
+        width = height;
+        height = tmp;
+    }
+
+    // convert twips to points
+    width  /= TWIPS_PER_POINT_FLOAT;
+    height /= TWIPS_PER_POINT_FLOAT;
+
+    DO_PR_DEBUG_LOG(("\"%s\", %f, %f\n", mPath, width, height));
+
+    QTemporaryFile file;
+    if(!file.open()) {
+        return nullptr;
+    }
+    file.setAutoRemove(false);
+
+    nsresult rv = NS_NewNativeLocalFile(
+            nsDependentCString(file.fileName().toUtf8().constData()),
+            false,
+            getter_AddRefs(mSpoolFile));
+    if (NS_FAILED(rv)) {
+        file.remove();
+        return nullptr;
+    }
+
+    mSpoolName = file.fileName().toUtf8().constData();
+
+    mSpoolFile->SetPermissions(0600);
+
+    nsCOMPtr<nsIFileOutputStream> stream =
+        do_CreateInstance("@mozilla.org/network/file-output-stream;1");
+
+    rv = stream->Init(mSpoolFile, -1, -1, 0);
+    if (NS_FAILED(rv))
+        return nullptr;
+
+    int16_t format;
+    mPrintSettings->GetOutputFormat(&format);
+
+    if (format == nsIPrintSettings::kOutputFormatNative) {
+        if (mIsPPreview) {
+            // There is nothing to detect on Print Preview, use PS.
+            // TODO: implement for Qt?
+            //format = nsIPrintSettings::kOutputFormatPS;
+            return nullptr;
+        }
+        format = nsIPrintSettings::kOutputFormatPDF;
+    }
+
+    IntSize size = IntSize::Truncate(width, height);
+
+    if (format == nsIPrintSettings::kOutputFormatPDF) {
+        return PrintTargetPDF::CreateOrNull(stream, size);
+    }
+
+    return nullptr;
+}
+
+NS_IMETHODIMP nsDeviceContextSpecQt::Init(nsIWidget* aWidget,
+        nsIPrintSettings* aPS,
+        bool aIsPrintPreview)
+{
+    DO_PR_DEBUG_LOG(("nsDeviceContextSpecQt::Init(aPS=%p)\n", aPS));
+
+    mPrintSettings = aPS;
+    mIsPPreview = aIsPrintPreview;
+
+    // This is only set by embedders
+    bool toFile;
+    aPS->GetPrintToFile(&toFile);
+
+    mToPrinter = !toFile && !aIsPrintPreview;
+
+    nsCOMPtr<nsPrintSettingsQt> printSettingsQt(do_QueryInterface(aPS));
+    if (!printSettingsQt)
+        return NS_ERROR_NO_INTERFACE;
+    return NS_OK;
+}
+
+NS_IMETHODIMP nsDeviceContextSpecQt::BeginDocument(
+        const nsAString& aTitle,
+        const nsAString& aPrintToFileName,
+        int32_t aStartPage,
+        int32_t aEndPage)
+{
+    if (mToPrinter) {
+        return NS_ERROR_NOT_IMPLEMENTED;
+    }
+    return NS_OK;
+}
+
+NS_IMETHODIMP nsDeviceContextSpecQt::EndDocument()
+{
+    if (mToPrinter) {
+        return NS_ERROR_NOT_IMPLEMENTED;
+    }
+    // Handle print-to-file ourselves for the benefit of embedders
+    nsString targetPath;
+    nsCOMPtr<nsIFile> destFile;
+    mPrintSettings->GetToFileName(targetPath);
+
+    nsresult rv = NS_NewLocalFile(targetPath, false, getter_AddRefs(destFile));
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    nsAutoString destLeafName;
+    rv = destFile->GetLeafName(destLeafName);
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    nsCOMPtr<nsIFile> destDir;
+    rv = destFile->GetParent(getter_AddRefs(destDir));
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    rv = mSpoolFile->MoveTo(destDir, destLeafName);
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    // This is the standard way to get the UNIX umask. Ugh.
+    mode_t mask = umask(0);
+    umask(mask);
+    // If you're not familiar with umasks, they contain the bits of what NOT
+    // to set in the permissions
+    // (thats because files and directories have different numbers of bits
+    // for their permissions)
+    destFile->SetPermissions(0666 & ~(mask));
+
+    return NS_OK;
+}
+
diff --git a/widget/qt/nsDeviceContextSpecQt.h b/widget/qt/nsDeviceContextSpecQt.h
new file mode 100644
index 000000000000..ed2be80b218a
--- /dev/null
+++ b/widget/qt/nsDeviceContextSpecQt.h
@@ -0,0 +1,48 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+
+#ifndef nsDeviceContextSpecQt_h___
+#define nsDeviceContextSpecQt_h___
+
+#include "nsIDeviceContextSpec.h"
+#include "nsIPrintSettings.h"
+#include "nsCOMPtr.h"
+
+#include "nsString.h"
+#include "nsCRT.h" /* should be <limits.h>? */
+
+class nsDeviceContextSpecQt : public nsIDeviceContextSpec
+{
+public:
+    nsDeviceContextSpecQt();
+
+    NS_DECL_ISUPPORTS
+
+    virtual already_AddRefed<PrintTarget> MakePrintTarget() final;
+
+    NS_IMETHOD Init(nsIWidget* aWidget,
+                    nsIPrintSettings* aPS,
+                    bool aIsPrintPreview) override;
+    NS_IMETHOD BeginDocument(const nsAString& aTitle,
+                             const nsAString& aPrintToFileName,
+                             int32_t aStartPage, int32_t aEndPage) override;
+    NS_IMETHOD EndDocument() override;
+    NS_IMETHOD BeginPage() override { return NS_OK; }
+    NS_IMETHOD EndPage() override { return NS_OK; }
+
+protected:
+    virtual ~nsDeviceContextSpecQt();
+
+    nsCOMPtr<nsIPrintSettings> mPrintSettings;
+    bool mToPrinter : 1;      /* If true, print to printer */
+    bool mIsPPreview : 1;     /* If true, is print preview */
+    char   mPath[PATH_MAX];     /* If toPrinter = false, dest file */
+    char   mPrinter[256];       /* Printer name */
+    nsCString         mSpoolName;
+    nsCOMPtr<nsIFile> mSpoolFile;
+};
+
+#endif /* !nsDeviceContextSpecQt_h___ */
diff --git a/widget/qt/nsLookAndFeel.cpp b/widget/qt/nsLookAndFeel.cpp
new file mode 100644
index 000000000000..fd2904370fb6
--- /dev/null
+++ b/widget/qt/nsLookAndFeel.cpp
@@ -0,0 +1,550 @@
+/* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* Copyright 2012 Mozilla Foundation and Mozilla contributors
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include <QGuiApplication>
+#include <QFont>
+#include <QScreen>
+#include <QPalette>
+
+#include "nsLookAndFeel.h"
+#include "nsStyleConsts.h"
+#include "gfxFont.h"
+#include "gfxFontConstants.h"
+#include "mozilla/gfx/2D.h"
+#include "mozilla/FontPropertyTypes.h"
+#include "mozilla/StaticPrefs_widget.h"
+#include "mozilla/Services.h"
+#include "mozilla/Logging.h"
+#include "nsIObserver.h"
+
+using namespace mozilla;
+
+LazyLogModule sLookAndFeel("LookAndFeel");
+
+class nsLookAndFeel::Observer final : public nsIObserver
+{
+public:
+    NS_DECL_ISUPPORTS
+
+    explicit Observer() : mDarkAmbience(false) {}
+
+    NS_IMETHOD Observe(nsISupports*, const char* aTopic,
+                       const char16_t* aData) override;
+
+    bool GetDarkAmbience();
+private:
+    virtual ~Observer() = default;
+
+public:
+    bool mDarkAmbience;
+};
+
+NS_IMPL_ISUPPORTS(nsLookAndFeel::Observer, nsIObserver)
+
+static const char16_t UNICODE_BULLET = 0x2022;
+
+#define QCOLOR_TO_NS_RGB(c)                     \
+  ((nscolor)NS_RGB(c.red(),c.green(),c.blue()))
+
+nsLookAndFeel::nsLookAndFeel()
+    : nsXPLookAndFeel()
+{
+    mObserver = new nsLookAndFeel::Observer();
+    nsCOMPtr<nsIObserverService> os = mozilla::services::GetObserverService();
+    if (os) {
+        os->AddObserver(mObserver, "ambience-theme-changed", false);
+    }
+}
+
+nsLookAndFeel::~nsLookAndFeel()
+{
+    nsCOMPtr<nsIObserverService> os = mozilla::services::GetObserverService();
+    if (os) {
+        os->RemoveObserver(mObserver, "ambience-theme-changed");
+    }
+    mObserver = nullptr;
+}
+
+NS_IMETHODIMP nsLookAndFeel::Observer::Observe(nsISupports*, const char* aTopic, const char16_t* aData) {
+    MOZ_ASSERT(!strcmp(aTopic, "ambience-theme-changed"));
+
+    bool darkAmbience = false;
+    nsDependentString data(aData);
+    if (data.EqualsLiteral("dark")) {
+        darkAmbience = true;
+    }
+
+    if (mDarkAmbience != darkAmbience) {
+        mDarkAmbience = darkAmbience;
+        MOZ_LOG(sLookAndFeel, LogLevel::Info, ("Ambience set to %s", mDarkAmbience ? "dark" : "light"));
+        if (nsCOMPtr<nsIObserverService> obs = services::GetObserverService()) {
+            NotifyChangedAllWindows(widget::ThemeChangeKind::StyleAndLayout);
+        }
+    }
+
+    return NS_OK;
+}
+
+bool nsLookAndFeel::Observer::GetDarkAmbience()
+{
+    return mDarkAmbience;
+}
+
+
+void nsLookAndFeel::NativeInit() { }
+
+nsresult
+nsLookAndFeel::NativeGetColor(ColorID aID, ColorScheme, nscolor &aResult)
+{
+    nsresult rv = NS_OK;
+
+#define BG_PRELIGHT_COLOR     NS_RGB(0xee,0xee,0xee)
+#define FG_PRELIGHT_COLOR     NS_RGB(0x77,0x77,0x77)
+#define RED_COLOR             NS_RGB(0xff,0x00,0x00)
+
+    QPalette palette = QGuiApplication::palette();
+
+    switch (aID) {
+        // These colors don't seem to be used for anything anymore in Mozilla
+        // (except here at least TextSelectBackground and TextSelectForeground)
+        // The CSS2 colors below are used.
+    case ColorID::WindowBackground:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::WindowForeground:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::WindowText));
+        break;
+    case ColorID::WidgetBackground:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::WidgetForeground:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::WindowText));
+        break;
+    case ColorID::WidgetSelectBackground:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::WidgetSelectForeground:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::WindowText));
+        break;
+    case ColorID::Widget3DHighlight:
+        aResult = NS_RGB(0xa0,0xa0,0xa0);
+        break;
+    case ColorID::Widget3DShadow:
+        aResult = NS_RGB(0x40,0x40,0x40);
+        break;
+    case ColorID::TextBackground:
+        // not used?
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::TextForeground:
+        // not used?
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::WindowText));
+        break;
+    case ColorID::TextSelectBackground:
+    case ColorID::IMESelectedRawTextBackground:
+    case ColorID::IMESelectedConvertedTextBackground:
+        // still used
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Highlight));
+        break;
+    case ColorID::TextSelectForeground:
+    case ColorID::IMESelectedRawTextForeground:
+    case ColorID::IMESelectedConvertedTextForeground:
+        // still used
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::HighlightedText));
+        break;
+    case ColorID::IMERawInputBackground:
+    case ColorID::IMEConvertedTextBackground:
+        aResult = NS_TRANSPARENT;
+        break;
+    case ColorID::IMERawInputForeground:
+    case ColorID::IMEConvertedTextForeground:
+        aResult = NS_SAME_AS_FOREGROUND_COLOR;
+        break;
+    case ColorID::IMERawInputUnderline:
+    case ColorID::IMEConvertedTextUnderline:
+        aResult = NS_SAME_AS_FOREGROUND_COLOR;
+        break;
+    case ColorID::IMESelectedRawTextUnderline:
+    case ColorID::IMESelectedConvertedTextUnderline:
+        aResult = NS_TRANSPARENT;
+        break;
+    case ColorID::SpellCheckerUnderline:
+        aResult = RED_COLOR;
+        break;
+
+        // css2  http://www.w3.org/TR/REC-CSS2/ui.html#system-colors
+    case ColorID::Activeborder:
+        // active window border
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::Activecaption:
+        // active window caption background
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::Appworkspace:
+        // MDI background color
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::Background:
+        // desktop background
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::Captiontext:
+        // text in active window caption, size box, and scrollbar arrow box (!)
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Text));
+        break;
+    case ColorID::Graytext:
+        // disabled text in windows, menus, etc.
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Disabled, QPalette::Text));
+        break;
+    case ColorID::Highlight:
+        // background of selected item
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Highlight));
+        break;
+    case ColorID::Highlighttext:
+        // text of selected item
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::HighlightedText));
+        break;
+    case ColorID::Inactiveborder:
+        // inactive window border
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Disabled, QPalette::Window));
+        break;
+    case ColorID::Inactivecaption:
+        // inactive window caption
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Disabled, QPalette::Window));
+        break;
+    case ColorID::Inactivecaptiontext:
+        // text in inactive window caption
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Disabled, QPalette::Text));
+        break;
+    case ColorID::Infobackground:
+        // tooltip background color
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::ToolTipBase));
+        break;
+    case ColorID::Infotext:
+        // tooltip text color
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::ToolTipText));
+        break;
+    case ColorID::Menu:
+        // menu background
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::Menutext:
+        // menu text
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Text));
+        break;
+    case ColorID::Scrollbar:
+        // scrollbar gray area
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Mid));
+        break;
+
+    case ColorID::Threedface:
+    case ColorID::Buttonface:
+        // 3-D face color
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Button));
+        break;
+
+    case ColorID::Buttontext:
+        // text on push buttons
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::ButtonText));
+        break;
+
+    case ColorID::Buttonhighlight:
+        // 3-D highlighted edge color
+    case ColorID::Threedhighlight:
+        // 3-D highlighted outer edge color
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Dark));
+        break;
+
+    case ColorID::Threedlightshadow:
+        // 3-D highlighted inner edge color
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Light));
+        break;
+
+    case ColorID::Buttonshadow:
+        // 3-D shadow edge color
+    case ColorID::Threedshadow:
+        // 3-D shadow inner edge color
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Dark));
+        break;
+
+    case ColorID::Threeddarkshadow:
+        // 3-D shadow outer edge color
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Shadow));
+        break;
+
+    case ColorID::Window:
+    case ColorID::Windowframe:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+
+    case ColorID::Windowtext:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Text));
+        break;
+
+    case ColorID::MozEventreerow:
+    case ColorID::Field:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Base));
+        break;
+    case ColorID::Fieldtext:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Text));
+        break;
+    case ColorID::MozDialog:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::MozDialogtext:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::WindowText));
+        break;
+    case ColorID::MozDragtargetzone:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Window));
+        break;
+    case ColorID::MozButtondefault:
+        // default button border color
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Button));
+        break;
+    case ColorID::MozButtonhoverface:
+        aResult = BG_PRELIGHT_COLOR;
+        break;
+    case ColorID::MozButtonhovertext:
+        aResult = FG_PRELIGHT_COLOR;
+        break;
+    case ColorID::MozCellhighlight:
+    case ColorID::MozHtmlCellhighlight:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Highlight));
+        break;
+    case ColorID::MozCellhighlighttext:
+    case ColorID::MozHtmlCellhighlighttext:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::HighlightedText));
+        break;
+    case ColorID::MozMenuhover:
+        aResult = BG_PRELIGHT_COLOR;
+        break;
+    case ColorID::MozMenuhovertext:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Text));
+        break;
+    case ColorID::MozOddtreerow:
+        aResult = NS_TRANSPARENT;
+        break;
+    case ColorID::MozNativehyperlinktext:
+        aResult = NS_SAME_AS_FOREGROUND_COLOR;
+        break;
+    case ColorID::MozComboboxtext:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Text));
+        break;
+    case ColorID::MozCombobox:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Base));
+        break;
+    case ColorID::MozMenubartext:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Text));
+        break;
+    case ColorID::MozMenubarhovertext:
+        aResult = QCOLOR_TO_NS_RGB(palette.color(QPalette::Normal, QPalette::Text));
+        break;
+    default:
+        /* default color is BLACK */
+        aResult = 0;
+        rv = NS_ERROR_FAILURE;
+        break;
+    }
+
+    return rv;
+}
+
+nsresult
+nsLookAndFeel::NativeGetInt(IntID aID, int32_t &aResult)
+{
+    nsresult rv = NS_OK;
+
+    switch (aID) {
+        case IntID::ScrollButtonLeftMouseButtonAction:
+          aResult = 0;
+          break;
+
+        case IntID::ScrollButtonMiddleMouseButtonAction:
+        case IntID::ScrollButtonRightMouseButtonAction:
+          aResult = 3;
+          break;
+
+        case IntID::CaretBlinkTime:
+            aResult = 500;
+            break;
+
+        case IntID::CaretWidth:
+            aResult = 1;
+            break;
+
+        case IntID::ShowCaretDuringSelection:
+            aResult = 0;
+            break;
+
+        case IntID::SelectTextfieldsOnKeyFocus:
+            // Select textfield content when focused by kbd
+            // used by EventStateManager::sTextfieldSelectModel
+            aResult = 1;
+            break;
+
+        case IntID::SubmenuDelay:
+            aResult = 200;
+            break;
+
+        case IntID::TooltipDelay:
+            aResult = 500;
+            break;
+
+        case IntID::MenusCanOverlapOSBar:
+            // we want XUL popups to be able to overlap the task bar.
+            aResult = 1;
+            break;
+
+        case IntID::ScrollArrowStyle:
+            aResult = eScrollArrowStyle_Single;
+            break;
+
+        case IntID::ScrollSliderStyle:
+            aResult = eScrollThumbStyle_Proportional;
+            break;
+
+        case IntID::WindowsDefaultTheme:
+        case IntID::WindowsThemeIdentifier:
+        case IntID::OperatingSystemVersionIdentifier:
+            aResult = 0;
+            rv = NS_ERROR_NOT_IMPLEMENTED;
+            break;
+
+        case IntID::IMERawInputUnderlineStyle:
+        case IntID::IMEConvertedTextUnderlineStyle:
+            aResult = NS_STYLE_TEXT_DECORATION_STYLE_SOLID;
+            break;
+
+        case IntID::IMESelectedRawTextUnderlineStyle:
+        case IntID::IMESelectedConvertedTextUnderline:
+            aResult = NS_STYLE_TEXT_DECORATION_STYLE_NONE;
+            break;
+
+        case IntID::SpellCheckerUnderlineStyle:
+            aResult = NS_STYLE_TEXT_DECORATION_STYLE_WAVY;
+            break;
+
+        case IntID::ScrollbarButtonAutoRepeatBehavior:
+            aResult = 0;
+            break;
+
+        case IntID::ContextMenuOffsetVertical:
+        case IntID::ContextMenuOffsetHorizontal:
+            aResult = 2;
+            break;
+
+        case IntID::SystemUsesDarkTheme:
+            // Choose theme based on ambience
+            aResult = mObserver->GetDarkAmbience() ? 1 : 0;
+            break;
+
+        case IntID::DragThresholdX:
+        case IntID::DragThresholdY:
+          // Threshold where a tap becomes a drag, in 1/240" reference pixels.
+          aResult = 25;
+          break;
+
+        default:
+            aResult = 0;
+            rv = NS_ERROR_FAILURE;
+    }
+
+    return rv;
+}
+
+nsresult
+nsLookAndFeel::NativeGetFloat(FloatID aID, float &aResult)
+{
+  nsresult res = NS_OK;
+
+  switch (aID) {
+    case FloatID::IMEUnderlineRelativeSize:
+        aResult = 1.0f;
+        break;
+
+    case FloatID::SpellCheckerUnderlineRelativeSize:
+        aResult = 1.0f;
+        break;
+
+    default:
+        aResult = -1.0;
+        res = NS_ERROR_FAILURE;
+  }
+  return res;
+}
+
+/*virtual*/
+bool
+nsLookAndFeel::NativeGetFont(FontID aID, nsString& aFontName,
+                           gfxFontStyle& aFontStyle)
+{
+  QFont qFont = QGuiApplication::font();
+
+  constexpr auto quote = u"\""_ns;
+  nsString family((char16_t*)qFont.family().data());
+  aFontName = quote + family + quote;
+
+  aFontStyle.systemFont = true;
+  switch (qFont.style()) {
+      case QFont::StyleNormal:
+          aFontStyle.style = mozilla::FontSlantStyle::Normal();
+          break;
+      case QFont::StyleItalic:
+          aFontStyle.style = mozilla::FontSlantStyle::Italic();
+          break;
+      case QFont::StyleOblique:
+          aFontStyle.style = mozilla::FontSlantStyle::Oblique();
+          break;
+      default:
+          aFontStyle.style = mozilla::FontSlantStyle::Normal();
+          break;
+  }
+
+  aFontStyle.weight = mozilla::FontWeight::Normal();
+  aFontStyle.stretch = mozilla::FontStretch((float)qFont.stretch());
+  // Scaling to CSS pixels needed in esr78 (323b5be77a649)
+  float scaleFactor = mozilla::StaticPrefs::layout_css_devPixelsPerPx();
+  // use pixel size directly if it is set, otherwise compute from point size
+  if (qFont.pixelSize() != -1) {
+    aFontStyle.size = qFont.pixelSize() / scaleFactor;
+  } else {
+    aFontStyle.size = qFont.pointSizeF() * qApp->primaryScreen()->logicalDotsPerInch() / 72.0f / scaleFactor;
+  }
+
+  return true;
+}
+
+/*virtual*/
+bool
+nsLookAndFeel::GetEchoPasswordImpl() {
+    return true;
+}
+
+/*virtual*/
+uint32_t
+nsLookAndFeel::GetPasswordMaskDelayImpl()
+{
+    // Same value on Android framework
+    return 1500;
+}
+
+/* virtual */
+char16_t
+nsLookAndFeel::GetPasswordCharacterImpl()
+{
+    return UNICODE_BULLET;
+}
diff --git a/widget/qt/nsLookAndFeel.h b/widget/qt/nsLookAndFeel.h
new file mode 100644
index 000000000000..ab40124f1609
--- /dev/null
+++ b/widget/qt/nsLookAndFeel.h
@@ -0,0 +1,44 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* Copyright 2012 Mozilla Foundation and Mozilla contributors
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#ifndef __nsLookAndFeel
+#define __nsLookAndFeel
+
+#include "nsXPLookAndFeel.h"
+
+class nsLookAndFeel : public nsXPLookAndFeel
+{
+    class Observer;
+public:
+    nsLookAndFeel();
+    virtual ~nsLookAndFeel();
+
+    void NativeInit() final;
+
+    virtual nsresult NativeGetInt(IntID aID, int32_t& aResult) override;
+    virtual nsresult NativeGetFloat(FloatID aID, float& aResult) override;
+    virtual nsresult NativeGetColor(ColorID, ColorScheme, nscolor& aResult) override;
+    virtual bool NativeGetFont(FontID aID, nsString& aName, gfxFontStyle& aStyle) override;
+
+    virtual bool GetEchoPasswordImpl() override;
+    virtual uint32_t GetPasswordMaskDelayImpl() override;
+    virtual char16_t GetPasswordCharacterImpl() override;
+
+private:
+    RefPtr<Observer> mObserver;
+};
+
+#endif
diff --git a/widget/qt/nsNativeBasicThemeQt.cpp b/widget/qt/nsNativeBasicThemeQt.cpp
new file mode 100644
index 000000000000..36214624724f
--- /dev/null
+++ b/widget/qt/nsNativeBasicThemeQt.cpp
@@ -0,0 +1,17 @@
+/* -*- Mode: C++; tab-width: 40; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsNativeBasicThemeQt.h"
+
+#include "mozilla/ClearOnShutdown.h"
+
+already_AddRefed<nsITheme> do_GetBasicNativeThemeDoNotUseDirectly() {
+  static mozilla::StaticRefPtr<nsITheme> gInstance;
+  if (MOZ_UNLIKELY(!gInstance)) {
+    gInstance = new nsNativeBasicThemeQt();
+    ClearOnShutdown(&gInstance);
+  }
+  return do_AddRef(gInstance);
+}
diff --git a/widget/qt/nsNativeBasicThemeQt.h b/widget/qt/nsNativeBasicThemeQt.h
new file mode 100644
index 000000000000..04e4f4925264
--- /dev/null
+++ b/widget/qt/nsNativeBasicThemeQt.h
@@ -0,0 +1,20 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsNativeBasicThemeQt_h
+#define nsNativeBasicThemeQt_h
+
+#include "nsNativeBasicTheme.h"
+
+class nsNativeBasicThemeQt : public nsNativeBasicTheme {
+ public:
+  nsNativeBasicThemeQt() = default;
+
+ protected:
+  virtual ~nsNativeBasicThemeQt() = default;
+};
+
+#endif
diff --git a/widget/qt/nsPrintDialogQt.cpp b/widget/qt/nsPrintDialogQt.cpp
new file mode 100644
index 000000000000..825863f66ec7
--- /dev/null
+++ b/widget/qt/nsPrintDialogQt.cpp
@@ -0,0 +1,42 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsPrintSettingsQt.h"
+#include "nsPrintDialogQt.h"
+
+// For Qt, we only support printing to PDF, and that doesn't need a
+// print dialog at this point.  So, this class's methods are left
+// un-implemented for now.
+
+NS_IMPL_ISUPPORTS(nsPrintDialogServiceQt, nsIPrintDialogService)
+
+nsPrintDialogServiceQt::nsPrintDialogServiceQt()
+{
+}
+
+nsPrintDialogServiceQt::~nsPrintDialogServiceQt()
+{
+}
+
+NS_IMETHODIMP
+nsPrintDialogServiceQt::Init()
+{
+    return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+NS_IMETHODIMP
+nsPrintDialogServiceQt::Show(nsPIDOMWindowOuter *aParent,
+                             nsIPrintSettings* aSettings)
+{
+    return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+NS_IMETHODIMP
+nsPrintDialogServiceQt::ShowPageSetup(nsPIDOMWindowOuter* aParent,
+                                      nsIPrintSettings* aNSSettings)
+{
+    return NS_ERROR_NOT_IMPLEMENTED;
+}
diff --git a/widget/qt/nsPrintDialogQt.h b/widget/qt/nsPrintDialogQt.h
new file mode 100644
index 000000000000..96b867c14225
--- /dev/null
+++ b/widget/qt/nsPrintDialogQt.h
@@ -0,0 +1,31 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsPrintDialogQt_h__
+#define nsPrintDialogQt_h__
+
+#include "nsIPrintDialogService.h"
+
+class nsIPrintSettings;
+
+class nsPrintDialogServiceQt : public nsIPrintDialogService
+{
+public:
+    nsPrintDialogServiceQt();
+
+    NS_DECL_ISUPPORTS
+
+    NS_IMETHODIMP Init() override;
+    NS_IMETHODIMP Show(nsPIDOMWindowOuter* aParent,
+                       nsIPrintSettings* aSettings) override;
+    NS_IMETHODIMP ShowPageSetup(nsPIDOMWindowOuter *aParent,
+                                nsIPrintSettings* aSettings) override;
+
+protected:
+    virtual ~nsPrintDialogServiceQt();
+};
+
+#endif
diff --git a/widget/qt/nsPrintOptionsQt.cpp b/widget/qt/nsPrintOptionsQt.cpp
new file mode 100644
index 000000000000..89673dd74d79
--- /dev/null
+++ b/widget/qt/nsPrintOptionsQt.cpp
@@ -0,0 +1,23 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+#include "nsPrintSettingsQt.h"
+#include "nsPrintOptionsQt.h"
+
+nsPrintOptionsQt::nsPrintOptionsQt()
+{
+}
+
+nsPrintOptionsQt::~nsPrintOptionsQt()
+{
+}
+
+nsresult nsPrintOptionsQt::_CreatePrintSettings(nsIPrintSettings** _retval)
+{
+    nsPrintSettingsQt* printSettings =
+        new nsPrintSettingsQt(); // does not initially ref count
+    NS_ADDREF(*_retval = printSettings); // ref count
+    return NS_OK;
+}
diff --git a/widget/qt/nsPrintOptionsQt.h b/widget/qt/nsPrintOptionsQt.h
new file mode 100644
index 000000000000..72e189567039
--- /dev/null
+++ b/widget/qt/nsPrintOptionsQt.h
@@ -0,0 +1,20 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsPrintOptionsQt_h__
+#define nsPrintOptionsQt_h__
+
+#include "nsPrintSettingsService.h"
+
+class nsPrintOptionsQt : public nsPrintSettingsService
+{
+public:
+    nsPrintOptionsQt();
+    virtual ~nsPrintOptionsQt();
+    virtual nsresult _CreatePrintSettings(nsIPrintSettings** _retval);
+};
+
+#endif /* nsPrintOptionsQt_h__ */
diff --git a/widget/qt/nsPrintSettingsQt.cpp b/widget/qt/nsPrintSettingsQt.cpp
new file mode 100644
index 000000000000..f8393c7e78a9
--- /dev/null
+++ b/widget/qt/nsPrintSettingsQt.cpp
@@ -0,0 +1,414 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <QPageLayout>
+#include <QRectF>
+#include <QDebug>
+#include "nsPrintSettingsQt.h"
+#include "nsIFile.h"
+#include "nsCRTGlue.h"
+
+NS_IMPL_ISUPPORTS_INHERITED(nsPrintSettingsQt,
+                            nsPrintSettings,
+                            nsPrintSettingsQt)
+
+nsPrintSettingsQt::nsPrintSettingsQt():
+    mPageLayout(new QPageLayout(QPageSize(QPageSize::A4), QPageLayout::Portrait, QMarginsF()))
+{
+}
+
+nsPrintSettingsQt::~nsPrintSettingsQt()
+{
+    //smart pointer should take care of cleanup
+}
+
+nsPrintSettingsQt::nsPrintSettingsQt(const nsPrintSettingsQt& aPS):
+    mPageLayout(aPS.mPageLayout),
+    mFilename(aPS.mFilename),
+    mPrinterName(aPS.mPrinterName),
+    mNumCopies(aPS.mNumCopies),
+    mPrintInColor(aPS.mPrintInColor),
+    mPrintReversed(aPS.mPrintReversed),
+    mPageRanges(aPS.mPageRanges.Clone()),
+    mResolution(aPS.mResolution),
+    mDuplex(aPS.mDuplex),
+    mOutputFormat(aPS.mOutputFormat)
+{
+}
+
+nsPrintSettingsQt& 
+nsPrintSettingsQt::operator=(const nsPrintSettingsQt& rhs)
+{
+    if (this == &rhs) {
+        return *this;
+    }
+
+    nsPrintSettings::operator=(rhs);
+    mPageLayout = rhs.mPageLayout;
+    mFilename = rhs.mFilename;
+    mPrinterName = rhs.mPrinterName;
+    mNumCopies = rhs.mNumCopies;
+    mPrintInColor = rhs.mPrintInColor;
+    mPrintReversed = rhs.mPrintReversed;
+    mPageRanges = rhs.mPageRanges.Clone();
+    mResolution = rhs.mResolution;
+    mDuplex = rhs.mDuplex;
+    mOutputFormat = rhs.mOutputFormat;
+
+    return *this;
+}
+
+nsresult 
+nsPrintSettingsQt::_Clone(nsIPrintSettings** _retval)
+{
+    NS_ENSURE_ARG_POINTER(_retval);
+
+    nsPrintSettingsQt* newSettings = new nsPrintSettingsQt(*this);
+    *_retval = newSettings;
+    NS_ADDREF(*_retval);
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::_Assign(nsIPrintSettings* aPS)
+{
+    nsPrintSettingsQt* printSettingsQt = static_cast<nsPrintSettingsQt*>(aPS);
+    if (!printSettingsQt)
+        return NS_ERROR_UNEXPECTED;
+    *this = *printSettingsQt;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetPageRanges(const nsTArray<int32_t>& aRanges)
+{
+    if (aRanges.Length() % 2 != 0) {
+        return NS_ERROR_FAILURE;
+    }
+    mPageRanges = aRanges.Clone();
+    return NS_OK;
+}
+
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetPageRanges(nsTArray<int32_t>& aRanges)
+{
+    aRanges = mPageRanges.Clone();
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetPrintReversed(bool* aPrintReversed)
+{
+    NS_ENSURE_ARG_POINTER(aPrintReversed);
+    *aPrintReversed = mPrintReversed;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetPrintReversed(bool aPrintReversed)
+{
+    mPrintReversed = aPrintReversed;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetPrintInColor(bool* aPrintInColor)
+{
+    NS_ENSURE_ARG_POINTER(aPrintInColor);
+    *aPrintInColor = mPrintInColor;
+    return NS_OK;
+}
+NS_IMETHODIMP
+nsPrintSettingsQt::SetPrintInColor(bool aPrintInColor)
+{
+    mPrintInColor = aPrintInColor;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetOrientation(int32_t* aOrientation)
+{
+    NS_ENSURE_ARG_POINTER(aOrientation);
+    *aOrientation = (mPageLayout->orientation() == QPageLayout::Landscape) ?
+                kLandscapeOrientation :
+                kPortraitOrientation;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetOrientation(int32_t aOrientation)
+{
+    if (aOrientation == kLandscapeOrientation) {
+        mPageLayout->setOrientation(QPageLayout::Landscape);
+    } else {
+        mPageLayout->setOrientation(QPageLayout::Portrait);
+    }
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetToFileName(nsAString &aToFileName)
+{
+    aToFileName = nsDependentString((char16_t*)mFilename.data());
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetToFileName(const nsAString &aToFileName)
+{
+    nsCOMPtr<nsIFile> file;
+    nsresult rv = NS_NewLocalFile(aToFileName, true,
+                                getter_AddRefs(file));
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    NS_ConvertUTF16toUTF8 fileNameCStr(aToFileName);
+    mFilename = QString(fileNameCStr.get());
+
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetPrinterName(nsAString &aPrinter)
+{
+    aPrinter = nsDependentString((const char16_t*)mPrinterName.constData());
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetPrinterName(const nsAString &aPrinter)
+{
+    NS_ConvertUTF16toUTF8 printer(aPrinter);
+    mPrinterName = QString(printer.get());
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetNumCopies(int32_t* aNumCopies)
+{
+    NS_ENSURE_ARG_POINTER(aNumCopies);
+    *aNumCopies = mNumCopies;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetNumCopies(int32_t aNumCopies)
+{
+    mNumCopies = aNumCopies;
+    if (mNumCopies < 1) {
+        qWarning() << "nsPrintSettingsQt::SetNumCopies: 'NumCopies' must be greater than 0";
+        mNumCopies = 1;
+    }
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetScaling(double* aScaling)
+{
+    NS_ENSURE_ARG_POINTER(aScaling);
+    qDebug() << Q_FUNC_INFO;
+    qDebug() << "Scaling not implemented in Qt port";
+    *aScaling = 1.0; //FIXME
+    return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetScaling(double aScaling)
+{
+    qDebug() << Q_FUNC_INFO;
+    qDebug() << "Scaling not implemented in Qt port"; //FIXME
+    return NS_ERROR_NOT_IMPLEMENTED;
+}
+
+static const char* const indexToPaperName[] =
+{ "a4", "b5", "letter", "legal", "executive",
+  "a0", "a1", "a2", "a3", "a5", "a6", "a7", "a8", "a9",
+  "b0", "b1", "b10", "b2", "b3", "b4", "b6", "b7", "b8", "b9",
+  "c5e", "comm10e", "dle", "folio", "ledger", "tabloid"
+};
+
+static const QPageSize::PageSizeId indexToQtPaperEnum[] =
+{
+    QPageSize::A4, QPageSize::B5, QPageSize::Letter, QPageSize::Legal,
+    QPageSize::Executive, QPageSize::A0, QPageSize::A1, QPageSize::A2, QPageSize::A3,
+    QPageSize::A5, QPageSize::A6, QPageSize::A7, QPageSize::A8, QPageSize::A9,
+    QPageSize::B0, QPageSize::B1, QPageSize::B10, QPageSize::B2, QPageSize::B3,
+    QPageSize::B4, QPageSize::B6, QPageSize::B7, QPageSize::B8, QPageSize::B9,
+    QPageSize::C5E, QPageSize::Comm10E, QPageSize::DLE, QPageSize::Folio,
+    QPageSize::Ledger, QPageSize::Tabloid
+};
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetPaperId(nsAString &aPaperName)
+{
+    QPageSize::PageSizeId size = mPageLayout->pageSize().id();
+    QString name(indexToPaperName[size]);
+    aPaperName = nsDependentString((const char16_t*)name.constData());
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetPaperId(const nsAString &aPaperName)
+{
+    NS_ConvertUTF16toUTF8 paperName(aPaperName);
+    QString ref(paperName.get());
+    ref = ref.toLower();
+    for (uint32_t i = 0; i < sizeof(indexToPaperName)/sizeof(char*); i++)
+    {
+        if (ref == QString(indexToPaperName[i])) {
+            mPageLayout->setPageSize(QPageSize(indexToQtPaperEnum[i]));
+            return NS_OK;
+        }
+    }
+    return NS_ERROR_FAILURE;
+}
+
+QPageLayout::Unit GetQtUnit(int16_t aGeckoUnit)
+{
+    if (aGeckoUnit == nsIPrintSettings::kPaperSizeMillimeters) {
+        return QPageLayout::Millimeter;
+    } else {
+        return QPageLayout::Inch;
+    }
+}
+
+#define SETUNWRITEABLEMARGIN\
+    mPageLayout->setUnits(QPageLayout::Inch);\
+    mPageLayout->setMargins(QMarginsF(\
+            NS_TWIPS_TO_INCHES(mUnwriteableMargin.left),\
+            NS_TWIPS_TO_INCHES(mUnwriteableMargin.top),\
+            NS_TWIPS_TO_INCHES(mUnwriteableMargin.right),\
+            NS_TWIPS_TO_INCHES(mUnwriteableMargin.bottom)));
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetUnwriteableMarginInTwips(nsIntMargin& aUnwriteableMargin)
+{
+    nsPrintSettings::SetUnwriteableMarginInTwips(aUnwriteableMargin);
+    SETUNWRITEABLEMARGIN
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetUnwriteableMarginTop(double aUnwriteableMarginTop)
+{
+    nsPrintSettings::SetUnwriteableMarginTop(aUnwriteableMarginTop);
+    SETUNWRITEABLEMARGIN
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetUnwriteableMarginLeft(double aUnwriteableMarginLeft)
+{
+    nsPrintSettings::SetUnwriteableMarginLeft(aUnwriteableMarginLeft);
+    SETUNWRITEABLEMARGIN
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetUnwriteableMarginBottom(double aUnwriteableMarginBottom)
+{
+    nsPrintSettings::SetUnwriteableMarginBottom(aUnwriteableMarginBottom);
+    SETUNWRITEABLEMARGIN
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetUnwriteableMarginRight(double aUnwriteableMarginRight)
+{
+    nsPrintSettings::SetUnwriteableMarginRight(aUnwriteableMarginRight);
+    SETUNWRITEABLEMARGIN
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetPaperWidth(double* aPaperWidth)
+{
+    NS_ENSURE_ARG_POINTER(aPaperWidth);
+    *aPaperWidth = mPageLayout->fullRect(GetQtUnit(mPaperSizeUnit)).width();
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetPaperWidth(double aPaperWidth)
+{
+    QSizeF papersize = mPageLayout->fullRect(GetQtUnit(mPaperSizeUnit)).size();
+    papersize.setWidth(aPaperWidth);
+    mPageLayout->setPageSize(QPageSize(papersize, (QPageSize::Unit)GetQtUnit(mPaperSizeUnit)));
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetPaperHeight(double* aPaperHeight)
+{
+    NS_ENSURE_ARG_POINTER(aPaperHeight);
+    *aPaperHeight = mPageLayout->fullRect(GetQtUnit(mPaperSizeUnit)).height();
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetPaperHeight(double aPaperHeight)
+{
+    QSizeF papersize = mPageLayout->fullRect(GetQtUnit(mPaperSizeUnit)).size();
+    papersize.setHeight(aPaperHeight);
+    mPageLayout->setPageSize(QPageSize(papersize, (QPageSize::Unit)GetQtUnit(mPaperSizeUnit)));
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetPaperSizeUnit(int16_t aPaperSizeUnit)
+{
+    mPaperSizeUnit = aPaperSizeUnit;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::GetEffectivePageSize(double* aWidth, double* aHeight)
+{
+    QSizeF papersize = mPageLayout->fullRect(QPageLayout::Inch).size();
+    if (mPageLayout->orientation() == QPageLayout::Landscape) {
+        *aWidth  = NS_INCHES_TO_INT_TWIPS(papersize.height());
+        *aHeight = NS_INCHES_TO_INT_TWIPS(papersize.width());
+    } else {
+        *aWidth  = NS_INCHES_TO_INT_TWIPS(papersize.width());
+        *aHeight = NS_INCHES_TO_INT_TWIPS(papersize.height());
+    }
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsPrintSettingsQt::SetupSilentPrinting() {
+    return NS_OK;
+}
+
+NS_IMETHODIMP nsPrintSettingsQt::GetResolution(int32_t* aResolution) {
+    NS_ENSURE_ARG_POINTER(aResolution);
+    *aResolution = mResolution;
+    return NS_OK;
+}
+NS_IMETHODIMP nsPrintSettingsQt::SetResolution(const int32_t aResolution) {
+    mResolution = aResolution;
+    return NS_OK;
+}
+
+NS_IMETHODIMP nsPrintSettingsQt::GetDuplex(int32_t* aDuplex) {
+    NS_ENSURE_ARG_POINTER(aDuplex);
+    *aDuplex = mDuplex;
+    return NS_OK;
+}
+NS_IMETHODIMP nsPrintSettingsQt::SetDuplex(const int32_t aDuplex) {
+    mDuplex = aDuplex;
+    return NS_OK;
+}
+
+NS_IMETHODIMP nsPrintSettingsQt::GetOutputFormat(int16_t* aOutputFormat) {
+    NS_ENSURE_ARG_POINTER(aOutputFormat);
+    *aOutputFormat = mOutputFormat;
+    return NS_OK;
+}
+NS_IMETHODIMP nsPrintSettingsQt::SetOutputFormat(int16_t aOutputFormat) {
+    mOutputFormat = aOutputFormat;
+    return NS_OK;
+}
diff --git a/widget/qt/nsPrintSettingsQt.h b/widget/qt/nsPrintSettingsQt.h
new file mode 100644
index 000000000000..941896961837
--- /dev/null
+++ b/widget/qt/nsPrintSettingsQt.h
@@ -0,0 +1,101 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsPrintSettingsQt_h_
+#define nsPrintSettingsQt_h_
+
+#include <QSharedPointer>
+#include "nsPrintSettingsImpl.h"
+#define NS_PRINTSETTINGSQT_IID \
+{0x5bc4c746, 0x8970, 0x43a3, {0xbf, 0xb1, 0x5d, 0xe1, 0x74, 0xaf, 0x7c, 0xea}}
+
+class QPageLayout;
+class nsPrintSettingsQt : public nsPrintSettings
+{
+public:
+    NS_DECL_ISUPPORTS_INHERITED
+    NS_DECLARE_STATIC_IID_ACCESSOR(NS_PRINTSETTINGSQT_IID)
+
+    nsPrintSettingsQt();
+
+    NS_IMETHOD GetPrintReversed(bool* aPrintReversed) override;
+    NS_IMETHOD SetPrintReversed(bool aPrintReversed) override;
+
+    NS_IMETHOD GetPrintInColor(bool* aPrintInColor) override;
+    NS_IMETHOD SetPrintInColor(bool aPrintInColor) override;
+
+    NS_IMETHOD GetOrientation(int32_t* aOrientation) override;
+    NS_IMETHOD SetOrientation(int32_t aOrientation) override;
+
+    NS_IMETHOD GetToFileName(nsAString &aToFileName) override;
+    NS_IMETHOD SetToFileName(const nsAString &aToFileName) override;
+
+    NS_IMETHOD GetPrinterName(nsAString &aPrinter) override;
+    NS_IMETHOD SetPrinterName(const nsAString &aPrinter) override;
+
+    NS_IMETHOD GetNumCopies(int32_t* aNumCopies) override;
+    NS_IMETHOD SetNumCopies(int32_t aNumCopies) override;
+
+    NS_IMETHOD GetScaling(double* aScaling) override;
+    NS_IMETHOD SetScaling(double aScaling) override;
+
+    NS_IMETHOD GetPaperId(nsAString& aPaperId) override;
+    NS_IMETHOD SetPaperId(const nsAString& aPaperId) override;
+
+    NS_IMETHOD SetUnwriteableMarginInTwips(nsIntMargin& aUnwriteableMargin) override;
+    NS_IMETHOD SetUnwriteableMarginTop(double aUnwriteableMarginTop) override;
+    NS_IMETHOD SetUnwriteableMarginLeft(double aUnwriteableMarginLeft) override;
+    NS_IMETHOD SetUnwriteableMarginBottom(double aUnwriteableMarginBottom) override;
+    NS_IMETHOD SetUnwriteableMarginRight(double aUnwriteableMarginRight) override;
+
+    NS_IMETHOD GetPaperWidth(double* aPaperWidth) override;
+    NS_IMETHOD SetPaperWidth(double aPaperWidth) override;
+
+    NS_IMETHOD GetPaperHeight(double* aPaperHeight) override;
+    NS_IMETHOD SetPaperHeight(double aPaperHeight) override;
+
+    NS_IMETHOD SetPaperSizeUnit(int16_t aPaperSizeUnit) override;
+
+    NS_IMETHOD GetEffectivePageSize(double* aWidth, double* aHeight) override;
+
+    NS_IMETHOD SetupSilentPrinting() override;
+
+    NS_IMETHOD SetPageRanges(const nsTArray<int32_t>&) override;
+    NS_IMETHOD GetPageRanges(nsTArray<int32_t>&) override;
+
+    NS_IMETHOD GetResolution(int32_t* aResolution) override;
+    NS_IMETHOD SetResolution(int32_t aResolution) override;
+
+    NS_IMETHOD GetDuplex(int32_t* aDuplex) override;
+    NS_IMETHOD SetDuplex(int32_t aDuplex) override;
+
+    NS_IMETHOD GetOutputFormat(int16_t* aOutputFormat) override;
+    NS_IMETHODIMP SetOutputFormat(int16_t aOutputFormat) override;
+
+
+protected:
+    virtual ~nsPrintSettingsQt();
+
+    nsPrintSettingsQt(const nsPrintSettingsQt& src);
+    nsPrintSettingsQt& operator=(const nsPrintSettingsQt& rhs);
+
+    virtual nsresult _Clone(nsIPrintSettings** _retval) override;
+    virtual nsresult _Assign(nsIPrintSettings* aPS) override;
+
+    QSharedPointer<QPageLayout> mPageLayout;
+    QString mFilename;
+    QString mPrinterName;
+    int32_t mNumCopies = 1;
+    bool mPrintInColor = true;
+    bool mPrintReversed = false;
+    nsTArray<int32_t> mPageRanges;
+    int32_t mResolution = 0;
+    int32_t mDuplex = 0;
+    int16_t mOutputFormat = kOutputFormatNative;
+};
+
+NS_DEFINE_STATIC_IID_ACCESSOR(nsPrintSettingsQt, NS_PRINTSETTINGSQT_IID)
+#endif // nsPrintSettingsQt_h_
diff --git a/widget/qt/nsScreenManagerQt.cpp b/widget/qt/nsScreenManagerQt.cpp
new file mode 100644
index 000000000000..aa2f711d4228
--- /dev/null
+++ b/widget/qt/nsScreenManagerQt.cpp
@@ -0,0 +1,101 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <QGuiApplication>
+#include <QScreen>
+
+#include "nsScreenManagerQt.h"
+#include "nsScreenQt.h"
+
+nsScreenManagerQt::nsScreenManagerQt()
+{
+    mInitialized = false;
+    desktop = 0;
+    screens = 0;
+}
+
+nsScreenManagerQt::~nsScreenManagerQt()
+{
+    delete [] screens;
+}
+
+// addref, release, QI
+NS_IMPL_ISUPPORTS(nsScreenManagerQt, nsIScreenManager)
+
+void nsScreenManagerQt::init()
+{
+    if (mInitialized)
+        return;
+
+    nScreens = QGuiApplication::screens().size();
+    screens = new nsCOMPtr<nsIScreen>[nScreens];
+
+    for (uint32_t i = 0; i < nScreens; ++i)
+        screens[i] = new nsScreenQt(i);
+    mInitialized = true;
+}
+
+//
+// ScreenForRect
+//
+// Returns the screen that contains the rectangle. If the rect overlaps
+// multiple screens, it picks the screen with the greatest area of intersection.
+//
+// The coordinates are in pixels (not twips) and in screen coordinates.
+//
+NS_IMETHODIMP
+nsScreenManagerQt::ScreenForRect(int32_t inLeft, int32_t inTop,
+                                 int32_t inWidth, int32_t inHeight,
+                                 nsIScreen **outScreen)
+{
+    if (!mInitialized)
+        init();
+
+    QRect r(inLeft, inTop, inWidth, inHeight);
+    int best = 0;
+    int area = 0;
+    for (uint32_t i = 0; i < nScreens; ++i) {
+        const QRect& rect = QGuiApplication::screens()[i]->geometry();
+        QRect intersection = r&rect;
+        int a = intersection.width()*intersection.height();
+        if (a > area) {
+            best = i;
+            area = a;
+        }
+    }
+
+    NS_IF_ADDREF(*outScreen = screens[best]);
+    return NS_OK;
+}
+
+//
+// GetPrimaryScreen
+//
+// The screen with the menubar/taskbar. This shouldn't be needed very
+// often.
+//
+NS_IMETHODIMP
+nsScreenManagerQt::GetPrimaryScreen(nsIScreen **aPrimaryScreen)
+{
+    if (!desktop)
+        init();
+
+    NS_IF_ADDREF(*aPrimaryScreen = screens[0]);
+    return NS_OK;
+}
+
+
+NS_IMETHODIMP
+nsScreenManagerQt::GetTotalScreenPixels(int64_t* aTotalScreenPixels)
+{
+    QScreen *screen = QGuiApplication::primaryScreen();
+    if (!screen) {
+        *aTotalScreenPixels = 0;
+        return NS_OK;
+    }
+
+    QSize size = screen->availableSize();
+    *aTotalScreenPixels = size.width() * size.height();
+    return NS_OK;
+}
diff --git a/widget/qt/nsScreenManagerQt.h b/widget/qt/nsScreenManagerQt.h
new file mode 100644
index 000000000000..4fe1fe367665
--- /dev/null
+++ b/widget/qt/nsScreenManagerQt.h
@@ -0,0 +1,34 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsScreenManagerQt_h___
+#define nsScreenManagerQt_h___
+
+#include "nsIScreenManager.h"
+#include "nsIScreen.h"
+#include "nsCOMPtr.h"
+
+//------------------------------------------------------------------------
+class QDesktopWidget;
+
+class nsScreenManagerQt : public nsIScreenManager
+{
+public:
+  nsScreenManagerQt ( );
+
+  NS_DECL_ISUPPORTS
+  NS_DECL_NSISCREENMANAGER
+
+private:
+  virtual ~nsScreenManagerQt();
+  void init ();
+
+  nsCOMPtr<nsIScreen> *screens;
+  QDesktopWidget *desktop;
+  uint32_t nScreens;
+  bool mInitialized;
+};
+
+#endif  // nsScreenManagerQt_h___
diff --git a/widget/qt/nsScreenQt.cpp b/widget/qt/nsScreenQt.cpp
new file mode 100644
index 000000000000..095238f24ad2
--- /dev/null
+++ b/widget/qt/nsScreenQt.cpp
@@ -0,0 +1,74 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <QColor>
+#include <QRect>
+#include <QGuiApplication>
+#include <QTransform>
+#include <QScreen>
+
+#include "nsScreenQt.h"
+#include "nsXULAppAPI.h"
+
+nsScreenQt::nsScreenQt(int aScreen)
+    : mScreen(aScreen)
+{
+    // nothing else to do. I guess we could cache a bunch of information
+    // here, but we want to ask the device at runtime in case anything
+    // has changed.
+}
+
+nsScreenQt::~nsScreenQt()
+{
+}
+
+NS_IMETHODIMP
+nsScreenQt::GetId(uint32_t* aId)
+{
+    *aId = mScreen;
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsScreenQt::GetRect(int32_t *outLeft,int32_t *outTop,
+                    int32_t *outWidth,int32_t *outHeight)
+{
+    QRect r = QGuiApplication::screens()[mScreen]->geometry();
+
+    *outTop = r.x();
+    *outLeft = r.y();
+    *outWidth = r.width();
+    *outHeight = r.height();
+
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsScreenQt::GetAvailRect(int32_t *outLeft,int32_t *outTop,
+                         int32_t *outWidth,int32_t *outHeight)
+{
+    QRect r = QGuiApplication::screens()[mScreen]->geometry();
+
+    *outTop = r.x();
+    *outLeft = r.y();
+    *outWidth = r.width();
+    *outHeight = r.height();
+
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsScreenQt::GetPixelDepth(int32_t *aPixelDepth)
+{
+    // #############
+    *aPixelDepth = QGuiApplication::primaryScreen()->depth();
+    return NS_OK;
+}
+
+NS_IMETHODIMP
+nsScreenQt::GetColorDepth(int32_t *aColorDepth)
+{
+    // ###############
+    return GetPixelDepth(aColorDepth);
+}
diff --git a/widget/qt/nsScreenQt.h b/widget/qt/nsScreenQt.h
new file mode 100644
index 000000000000..ad3a0ef9af3b
--- /dev/null
+++ b/widget/qt/nsScreenQt.h
@@ -0,0 +1,29 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsScreenQt_h___
+#define nsScreenQt_h___
+
+#include "nsBaseScreen.h"
+
+//------------------------------------------------------------------------
+
+class nsScreenQt : public nsBaseScreen
+{
+public:
+  nsScreenQt (int aScreen);
+  virtual ~nsScreenQt();
+
+  NS_IMETHOD GetId(uint32_t* aId);
+  NS_IMETHOD GetRect(int32_t* aLeft, int32_t* aTop, int32_t* aWidth, int32_t* aHeight);
+  NS_IMETHOD GetAvailRect(int32_t* aLeft, int32_t* aTop, int32_t* aWidth, int32_t* aHeight);
+  NS_IMETHOD GetPixelDepth(int32_t* aPixelDepth);
+  NS_IMETHOD GetColorDepth(int32_t* aColorDepth);
+
+private:
+  int mScreen;
+};
+
+#endif  // nsScreenQt_h___
diff --git a/widget/qt/nsUserIdleServiceQt.cpp b/widget/qt/nsUserIdleServiceQt.cpp
new file mode 100644
index 000000000000..8fcc6b01ccc6
--- /dev/null
+++ b/widget/qt/nsUserIdleServiceQt.cpp
@@ -0,0 +1,123 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* vim:expandtab:shiftwidth=4:tabstop=4:
+ */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifdef MOZ_X11
+#include "mozilla/X11Util.h"
+#endif
+#include "nsUserIdleServiceQt.h"
+#include "nsIServiceManager.h"
+#include "nsDebug.h"
+#include "prlink.h"
+
+#if defined(MOZ_X11)
+typedef bool (*_XScreenSaverQueryExtension_fn)(Display* dpy, int* event_base,
+                                                 int* error_base);
+
+typedef XScreenSaverInfo* (*_XScreenSaverAllocInfo_fn)(void);
+
+typedef void (*_XScreenSaverQueryInfo_fn)(Display* dpy, Drawable drw,
+                                          XScreenSaverInfo *info);
+
+static _XScreenSaverQueryExtension_fn _XSSQueryExtension = nullptr;
+static _XScreenSaverAllocInfo_fn _XSSAllocInfo = nullptr;
+static _XScreenSaverQueryInfo_fn _XSSQueryInfo = nullptr;
+
+static bool sInitialized = false;
+#endif
+
+NS_IMPL_ISUPPORTS_INHERITED0(nsUserIdleServiceQt, nsUserIdleService)
+
+nsUserIdleServiceQt::nsUserIdleServiceQt()
+#if defined(MOZ_X11)
+    : mXssInfo(nullptr)
+#endif
+{
+}
+
+#if defined(MOZ_X11)
+static void Initialize()
+{
+    sInitialized = true;
+
+    // This will leak - See comments in ~nsUserIdleServiceQt().
+    PRLibrary* xsslib = PR_LoadLibrary("libXss.so.1");
+    if (!xsslib) {
+        return;
+    }
+
+    _XSSQueryExtension = (_XScreenSaverQueryExtension_fn)
+        PR_FindFunctionSymbol(xsslib, "XScreenSaverQueryExtension");
+    _XSSAllocInfo = (_XScreenSaverAllocInfo_fn)
+        PR_FindFunctionSymbol(xsslib, "XScreenSaverAllocInfo");
+    _XSSQueryInfo = (_XScreenSaverQueryInfo_fn)
+        PR_FindFunctionSymbol(xsslib, "XScreenSaverQueryInfo");
+}
+#endif
+
+nsUserIdleServiceQt::~nsUserIdleServiceQt()
+{
+#if defined(MOZ_X11)
+    if (mXssInfo)
+        XFree(mXssInfo);
+
+// It is not safe to unload libXScrnSaver until each display is closed because
+// the library registers callbacks through XESetCloseDisplay (Bug 397607).
+// (Also the library and its functions are scoped for the file not the object.)
+#if 0
+    if (xsslib) {
+        PR_UnloadLibrary(xsslib);
+        xsslib = nullptr;
+    }
+#endif
+#endif
+}
+
+bool
+nsUserIdleServiceQt::PollIdleTime(uint32_t *aIdleTime)
+{
+#if defined(MOZ_X11)
+    // Ask xscreensaver about idle time:
+    *aIdleTime = 0;
+
+    // We might not have a display (cf. in xpcshell)
+    Display *dplay = mozilla::DefaultXDisplay();
+    if (!dplay) {
+        return false;
+    }
+
+    if (!sInitialized) {
+        Initialize();
+    }
+    if (!_XSSQueryExtension || !_XSSAllocInfo || !_XSSQueryInfo) {
+        return false;
+    }
+
+    int event_base, error_base;
+    if (_XSSQueryExtension(dplay, &event_base, &error_base)) {
+        if (!mXssInfo)
+            mXssInfo = _XSSAllocInfo();
+        if (!mXssInfo)
+            return false;
+
+        _XSSQueryInfo(dplay, RootWindowOfScreen(DefaultScreenOfDisplay(mozilla::DefaultXDisplay())), mXssInfo);
+        *aIdleTime = mXssInfo->idle;
+        return true;
+    }
+#endif
+
+    return false;
+}
+
+bool
+nsUserIdleServiceQt::UsePollMode()
+{
+#if defined(MOZ_X11)
+    return false;
+#endif
+    return true;
+}
+
diff --git a/widget/qt/nsUserIdleServiceQt.h b/widget/qt/nsUserIdleServiceQt.h
new file mode 100644
index 000000000000..5098b3d67d83
--- /dev/null
+++ b/widget/qt/nsUserIdleServiceQt.h
@@ -0,0 +1,56 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* vim:expandtab:shiftwidth=4:tabstop=4:
+ */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsUserIdleServiceQt_h__
+#define nsUserIdleServiceQt_h__
+
+#include "nsUserIdleService.h"
+
+#if defined(MOZ_X11)
+#include <X11/Xlib.h>
+#include <X11/Xutil.h>
+
+typedef struct {
+    Window window;              // Screen saver window
+    int state;                  // ScreenSaver(Off,On,Disabled)
+    int kind;                   // ScreenSaver(Blanked,Internal,External)
+    unsigned long til_or_since; // milliseconds since/til screensaver kicks in
+    unsigned long idle;         // milliseconds idle
+    unsigned long event_mask;   // event stuff
+} XScreenSaverInfo;
+#endif
+
+class nsUserIdleServiceQt : public nsUserIdleService
+{
+public:
+    NS_DECL_ISUPPORTS_INHERITED
+
+    bool PollIdleTime(uint32_t* aIdleTime);
+
+    static already_AddRefed<nsUserIdleServiceQt> GetInstance()
+    {
+        RefPtr<nsUserIdleServiceQt> idleService =
+            nsUserIdleService::GetInstance().downcast<nsUserIdleServiceQt>();
+        if (!idleService) {
+            idleService = new nsUserIdleServiceQt();
+        }
+        
+        return idleService.forget();
+    }
+
+private:
+#if defined(MOZ_X11)
+    XScreenSaverInfo* mXssInfo;
+#endif
+
+protected:
+    nsUserIdleServiceQt();
+    virtual ~nsUserIdleServiceQt();
+    bool UsePollMode();
+};
+
+#endif // nsUserIdleServiceQt_h__
diff --git a/widget/qt/nsWidgetFactory.cpp b/widget/qt/nsWidgetFactory.cpp
new file mode 100644
index 000000000000..b5a1005d8c27
--- /dev/null
+++ b/widget/qt/nsWidgetFactory.cpp
@@ -0,0 +1,36 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* Copyright 2012 Mozilla Foundation and Mozilla contributors
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "nsWidgetFactory.h"
+#include "nsAppShell.h"
+#include "nsAppShellSingleton.h"
+#include "base/basictypes.h"
+#include "mozilla/WidgetUtils.h"
+#include "nsLookAndFeel.h"
+
+using namespace mozilla::widget;
+
+nsresult nsWidgetQtModuleCtor() { return nsAppShellInit(); }
+
+void
+nsWidgetQtModuleDtor()
+{
+    // Shutdown all XP level widget classes.
+    WidgetUtils::Shutdown();
+
+    nsLookAndFeel::Shutdown();
+    nsAppShellShutdown();
+}
diff --git a/widget/qt/nsWidgetFactory.h b/widget/qt/nsWidgetFactory.h
new file mode 100644
index 000000000000..2306c78d3eae
--- /dev/null
+++ b/widget/qt/nsWidgetFactory.h
@@ -0,0 +1,22 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim:expandtab:shiftwidth=4:tabstop=4:
+ */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef widget_qt_nsWidgetFactory_h
+#define widget_qt_nsWidgetFactory_h
+
+#include "nscore.h"
+#include "nsID.h"
+
+class nsISupports;
+
+nsresult nsAppShellConstructor(nsISupports *outer, const nsIID &iid,
+                               void **result);
+
+nsresult nsWidgetQtModuleCtor();
+void nsWidgetQtModuleDtor();
+
+#endif  // defined widget_qt_nsWidgetFactory_h
